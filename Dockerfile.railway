# Optimized Dockerfile for Railway with JIT shared package
FROM node:22-alpine

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache python3 make g++ libc6-compat

# Copy package files for dependency installation
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/
COPY packages/shared/package*.json ./packages/shared/
COPY packages/typescript-config/package*.json ./packages/typescript-config/
COPY turbo.json ./

# Install ALL dependencies (needed for TypeScript compilation)
RUN npm ci

# Copy all source code
COPY . .

# Generate Prisma client
WORKDIR /app/apps/backend
RUN npx prisma generate

# Set build environment
WORKDIR /app
ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Rebuild bcrypt for the container architecture
RUN cd apps/backend && npm rebuild bcrypt

# Use Turborepo to build backend and its dependencies
RUN npx turbo run build --filter=@tenantflow/backend...

# Remove dev dependencies but keep bcrypt
RUN npm prune --production && \
    # Ensure bcrypt is installed for production
    cd apps/backend && npm install bcrypt && cd ../.. && \
    rm -rf apps/frontend && \
    rm -rf packages/tailwind-config && \
    find . -name "*.test.*" -delete && \
    find . -name "*.spec.*" -delete

# Set runtime environment
ENV PORT=4600
ENV NODE_ENV=production
EXPOSE 4600

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD node -e "require('http').get('http://localhost:4600/health', (r) => r.statusCode === 200 ? process.exit(0) : process.exit(1)).on('error', () => process.exit(1));"

# Start the application
WORKDIR /app/apps/backend
CMD ["node", "dist/main.js"]