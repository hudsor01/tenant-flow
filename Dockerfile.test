# Test Dockerfile to replicate Railway environment exactly
FROM node:22-alpine

WORKDIR /app

# Install system dependencies (same as Railway)
RUN apk add --no-cache \
    dumb-init \
    libc6-compat \
    python3 \
    make \
    g++ \
    curl

# Create non-root user (same as Railway)
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy package files
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/
COPY packages/shared/package*.json ./packages/shared/
COPY turbo.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Generate Prisma client
RUN cd apps/backend && npx prisma generate

# Build application with Railway environment
ENV NODE_ENV=production
ENV RAILWAY_ENVIRONMENT=production
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Build shared package first, then backend
RUN npx turbo run build --filter=@tenantflow/shared --no-daemon
RUN npx turbo run build --filter=@tenantflow/backend --no-daemon

# Clean up unnecessary files
RUN rm -rf apps/frontend packages/tailwind-config \
    && find . -name "*.test.*" -delete \
    && find . -name "*.spec.*" -delete \
    && find . -name "*.map" -delete \
    && find . -name ".turbo" -type d -exec rm -rf {} + 2>/dev/null || true \
    && npm prune --production

# Set ownership
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Railway environment variables for testing
ENV PORT=4600
ENV NODE_ENV=production
ENV RAILWAY_ENVIRONMENT=production
ENV RAILWAY_USE_PREFIX=false
ENV CORS_ORIGINS="https://tenantflow.app"
# Add minimal required env vars for testing (use dummy values)
ENV DATABASE_URL="postgresql://test:test@localhost:5432/test"
ENV DIRECT_URL="postgresql://test:test@localhost:5432/test"
ENV JWT_SECRET="test-jwt-secret-that-is-at-least-32-characters-long"
ENV SUPABASE_URL="https://test.supabase.co"
ENV SUPABASE_SERVICE_ROLE_KEY="test-service-role-key"
ENV SUPABASE_JWT_SECRET="test-jwt-secret-that-is-at-least-32-characters-long"

EXPOSE 4600

# Start with debugging
CMD ["sh", "-c", "echo 'üê≥ Docker test starting...' && cd apps/backend && node dist/main.js"]