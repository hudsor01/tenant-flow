# syntax=docker/dockerfile:1

# ===== BASE =====
FROM node:22-slim AS base
WORKDIR /app

# Install basic dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 make g++ curl \
    && rm -rf /var/lib/apt/lists/*

# ===== DEPS =====
FROM base AS deps

# Copy package files
COPY package*.json turbo.json ./
COPY apps/backend/package.json ./apps/backend/
COPY packages/*/package.json ./packages/*/

# Install dependencies
RUN npm ci --silent

# ===== BUILDER =====
FROM base AS builder
WORKDIR /app

# Copy deps and source
COPY --from=deps /app ./
COPY . .

# Remove unnecessary files
RUN rm -rf .git .github docs *.md apps/frontend apps/storybook

# Build
ENV NODE_ENV=production
RUN npm run build:backend

# ===== RUNTIME =====
FROM node:22-slim AS runtime

# Non-root user
RUN groupadd -g 1001 nodejs && useradd -r -u 1001 -g nodejs nodejs

WORKDIR /app

# Copy built app
COPY --from=builder --chown=nodejs:nodejs /app/apps/backend/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/package.json ./

USER nodejs

# Simple health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:${PORT:-4600}/health/ping || exit 1

ENV NODE_ENV=production
EXPOSE 4600

CMD ["node", "dist/main.js"]