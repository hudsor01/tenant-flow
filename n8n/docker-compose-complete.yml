version: '3.8'

services:
  # PostgreSQL - Shared database
  postgres:
    image: postgres:16-alpine
    container_name: tenantflow-postgres
    restart: always
    ports:
      - "5432:5432"
    networks:
      - tenantflow-net
    environment:
      - POSTGRES_DB=tenantflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # n8n - Workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: tenantflow-n8n
    restart: always
    ports:
      - "5678:5678"
    networks:
      - tenantflow-net
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_HOST=0.0.0.0
      - NODE_ENV=production
      - WEBHOOK_URL=http://192.168.0.177:5678/
      - N8N_RUNNERS_ENABLED=true
      - N8N_SECURE_COOKIE=false
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=tenantflow-postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      # Service URLs for n8n workflows
      - OLLAMA_BASE_URL=http://tenantflow-ollama:11434
      - NOCODB_URL=http://tenantflow-nocodb:8080
      - LISTMONK_URL=http://tenantflow-listmonk:9000
      - STIRLING_PDF_URL=http://tenantflow-stirling:8080
      - MEILISEARCH_URL=http://tenantflow-meilisearch:7700
      - GHOST_URL=http://tenantflow-ghost:2368
      - QDRANT_URL=http://tenantflow-qdrant:6333
    volumes:
      - n8n_data:/home/node/.n8n
      - ./shared-content:/home/node/shared-content
    depends_on:
      postgres:
        condition: service_healthy

  # Ollama - LLM for content generation
  ollama:
    image: ollama/ollama:latest
    container_name: tenantflow-ollama
    restart: always
    ports:
      - "11434:11434"
    networks:
      - tenantflow-net
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0

  # NocoDB - Database interface
  nocodb:
    image: nocodb/nocodb:latest
    container_name: tenantflow-nocodb
    restart: always
    ports:
      - "8080:8080"
    networks:
      - tenantflow-net
    environment:
      - NC_DB=pg://tenantflow-postgres:5432?u=postgres&p=${POSTGRES_PASSWORD}&d=nocodb
      - NC_PUBLIC_URL=http://192.168.0.177:8080
      - NC_ADMIN_EMAIL=${NOCODB_ADMIN_EMAIL:-admin@tenantflow.com}
      - NC_ADMIN_PASSWORD=${NOCODB_ADMIN_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - nocodb_data:/usr/app/data
    depends_on:
      postgres:
        condition: service_healthy

  # Listmonk - Email marketing
  listmonk:
    image: listmonk/listmonk:latest
    container_name: tenantflow-listmonk
    restart: always
    ports:
      - "9000:9000"
    networks:
      - tenantflow-net
    environment:
      - LISTMONK_app__address=0.0.0.0:9000
      - LISTMONK_app__admin_username=${LISTMONK_ADMIN_USER:-admin}
      - LISTMONK_app__admin_password=${LISTMONK_ADMIN_PASSWORD}
      - LISTMONK_db__host=tenantflow-postgres
      - LISTMONK_db__port=5432
      - LISTMONK_db__user=postgres
      - LISTMONK_db__password=${POSTGRES_PASSWORD}
      - LISTMONK_db__database=listmonk
      - LISTMONK_db__ssl_mode=disable
    volumes:
      - ./listmonk-config.toml:/listmonk/config.toml:ro
      - listmonk_uploads:/listmonk/uploads
    depends_on:
      postgres:
        condition: service_healthy

  # Stirling PDF - PDF processing and generation
  stirling-pdf:
    image: stirlingtools/stirling-pdf:latest
    container_name: tenantflow-stirling
    restart: always
    ports:
      - "8082:8080"
    networks:
      - tenantflow-net
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=true
      - LANGS=en_US
    volumes:
      - stirling_data:/usr/share/tessdata
      - ./shared-content:/usr/share/stirling-pdf/shared-content

  # MeiliSearch - Search engine
  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: tenantflow-meilisearch
    restart: always
    ports:
      - "7700:7700"
    networks:
      - tenantflow-net
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_MASTER_KEY}
      - MEILI_ENV=production
      - MEILI_HTTP_ADDR=0.0.0.0:7700
    volumes:
      - meilisearch_data:/meili_data

  # Ghost - CMS and blog
  ghost:
    image: ghost:5-alpine
    container_name: tenantflow-ghost
    restart: always
    ports:
      - "2368:2368"
    networks:
      - tenantflow-net
    environment:
      - NODE_ENV=production
      - url=http://192.168.0.177:2368
      - database__client=mysql
      - database__connection__host=tenantflow-mysql
      - database__connection__user=ghost
      - database__connection__password=${GHOST_DB_PASSWORD}
      - database__connection__database=ghost
      - mail__transport=SMTP
      - mail__options__service=Resend
      - mail__options__auth__user=resend
      - mail__options__auth__pass=${RESEND_API_KEY}
      - mail__from=${GHOST_MAIL_FROM:-noreply@tenantflow.com}
    volumes:
      - ghost_content:/var/lib/ghost/content
    depends_on:
      - ghost-mysql

  # MySQL for Ghost (Ghost prefers MySQL over PostgreSQL)
  ghost-mysql:
    image: mysql:8.0
    container_name: tenantflow-mysql
    restart: always
    networks:
      - tenantflow-net
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=ghost
      - MYSQL_USER=ghost
      - MYSQL_PASSWORD=${GHOST_DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql

  # Penpot - Design platform
  penpot-frontend:
    image: penpotapp/frontend:latest
    container_name: tenantflow-penpot-frontend
    restart: always
    ports:
      - "9001:80"
    networks:
      - tenantflow-net
    environment:
      - PENPOT_FLAGS=enable-registration enable-login-with-password
    depends_on:
      - penpot-backend

  penpot-backend:
    image: penpotapp/backend:latest
    container_name: tenantflow-penpot-backend
    restart: always
    networks:
      - tenantflow-net
    environment:
      - PENPOT_FLAGS=enable-registration enable-login-with-password enable-smtp
      - PENPOT_PUBLIC_URI=http://192.168.0.177:9001
      - PENPOT_DATABASE_URI=postgresql://tenantflow-postgres:5432/penpot
      - PENPOT_DATABASE_USERNAME=postgres
      - PENPOT_DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - PENPOT_REDIS_URI=redis://tenantflow-redis:6379/0
      - PENPOT_ASSETS_STORAGE_BACKEND=assets-fs
      - PENPOT_STORAGE_ASSETS_FS_DIRECTORY=/opt/data/assets
      - PENPOT_SMTP_DEFAULT_FROM=${PENPOT_SMTP_FROM:-noreply@tenantflow.com}
      - PENPOT_SMTP_DEFAULT_REPLY_TO=${PENPOT_SMTP_REPLY_TO:-noreply@tenantflow.com}
      - PENPOT_SMTP_HOST=smtp.resend.com
      - PENPOT_SMTP_PORT=587
      - PENPOT_SMTP_USERNAME=resend
      - PENPOT_SMTP_PASSWORD=${RESEND_API_KEY}
      - PENPOT_SMTP_TLS=true
    volumes:
      - penpot_assets:/opt/data/assets
    depends_on:
      postgres:
        condition: service_healthy
      - penpot-redis

  # Redis for Penpot
  penpot-redis:
    image: redis:7-alpine
    container_name: tenantflow-redis
    restart: always
    networks:
      - tenantflow-net
    volumes:
      - redis_data:/data

  # Qdrant - Vector database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: tenantflow-qdrant
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - tenantflow-net
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      - qdrant_data:/qdrant/storage

  # Temporal Server
  temporal:
    image: temporalio/auto-setup:latest
    container_name: tenantflow-temporal
    restart: always
    ports:
      - "7233:7233"
      - "8233:8233"
    networks:
      - tenantflow-net
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=${POSTGRES_PASSWORD}
      - POSTGRES_SEEDS=tenantflow-postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    depends_on:
      postgres:
        condition: service_healthy

  # Temporal Web UI
  temporal-web:
    image: temporalio/web:latest
    container_name: tenantflow-temporal-web
    restart: always
    ports:
      - "8080:8080"
    networks:
      - tenantflow-net
    environment:
      - TEMPORAL_GRPC_ENDPOINT=tenantflow-temporal:7233
      - TEMPORAL_PERMIT_WRITE_API=true
    depends_on:
      - temporal

  # Excalidraw - Virtual whiteboard
  excalidraw:
    image: excalidraw/excalidraw:latest
    container_name: tenantflow-excalidraw
    restart: always
    ports:
      - "3000:80"
    networks:
      - tenantflow-net

networks:
  tenantflow-net:
    driver: bridge
    name: tenantflow_network

volumes:
  postgres_data:
  mysql_data:
  n8n_data:
  ollama_data:
  nocodb_data:
  listmonk_uploads:
  stirling_data:
  meilisearch_data:
  ghost_content:
  penpot_assets:
  redis_data:
  qdrant_data: