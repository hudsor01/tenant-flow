version: '3.8'

services:
    # Prometheus - Metrics Collection
    prometheus:
        image: prom/prometheus:latest
        container_name: tenantflow-prometheus
        restart: unless-stopped
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - ./alerts.yml:/etc/prometheus/alerts.yml
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time=30d'
            - '--storage.tsdb.retention.size=10GB'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
        ports:
            - '9090:9090'
        networks:
            - monitoring

    # Grafana - Visualization
    grafana:
        image: grafana/grafana:latest
        container_name: tenantflow-grafana
        restart: unless-stopped
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
            - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
            - GF_SERVER_ROOT_URL=http://localhost:3000
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning:/etc/grafana/provisioning
            - ./grafana/dashboards:/var/lib/grafana/dashboards
        ports:
            - '3000:3000'
        networks:
            - monitoring

    # AlertManager - Alert Routing
    alertmanager:
        image: prom/alertmanager:latest
        container_name: tenantflow-alertmanager
        restart: unless-stopped
        volumes:
            - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
            - alertmanager_data:/alertmanager
        command:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
            - '--storage.path=/alertmanager'
        ports:
            - '9093:9093'
        networks:
            - monitoring

    # Node Exporter - System Metrics
    node-exporter:
        image: prom/node-exporter:latest
        container_name: tenantflow-node-exporter
        restart: unless-stopped
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        ports:
            - '9100:9100'
        networks:
            - monitoring

    # Cadvisor - Container Metrics
    cadvisor:
        image: gcr.io/cadvisor/cadvisor:latest
        container_name: tenantflow-cadvisor
        restart: unless-stopped
        privileged: true
        devices:
            - /dev/kmsg:/dev/kmsg
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker:/var/lib/docker:ro
            - /cgroup:/cgroup:ro
        ports:
            - '8080:8080'
        networks:
            - monitoring

networks:
    monitoring:
        driver: bridge

volumes:
    prometheus_data:
    grafana_data:
    alertmanager_data:
