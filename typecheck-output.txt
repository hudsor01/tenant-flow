
> tenantflow@1.0.1 typecheck
> turbo run typecheck -- --noErrorTruncation

turbo 2.5.6

• Packages in scope: @repo/backend, @repo/database, @repo/emails, @repo/eslint-config, @repo/frontend, @repo/shared, @repo/test-utils, @repo/typescript-config
• Running typecheck in 8 packages
• Remote caching enabled
@repo/emails:typecheck: cache hit, replaying logs ce325bca9ab6737b
@repo/typescript-config:build: cache hit, replaying logs 9084a3f2d7b57d5c
@repo/typescript-config:typecheck: cache hit, replaying logs cedecdb818b2724a
@repo/emails:typecheck: 
@repo/emails:typecheck: > @repo/emails@0.1.0 typecheck
@repo/emails:typecheck: > tsc --noEmit --noErrorTruncation
@repo/emails:typecheck: 
@repo/typescript-config:build: 
@repo/typescript-config:build: > @repo/typescript-config@0.1.0 build
@repo/typescript-config:build: > echo 'TypeScript config built successfully'
@repo/typescript-config:build: 
@repo/typescript-config:build: TypeScript config built successfully
@repo/shared:typecheck: cache hit, replaying logs 76cf1afdee626a34
@repo/shared:typecheck: 
@repo/shared:typecheck: > @repo/shared@0.1.0 typecheck
@repo/shared:typecheck: > tsc --noEmit --noErrorTruncation
@repo/shared:typecheck: 
@repo/test-utils:typecheck: cache hit, replaying logs d2a4e482fa2bd190
@repo/test-utils:typecheck: 
@repo/test-utils:typecheck: > @repo/test-utils@0.1.0 typecheck
@repo/test-utils:typecheck: > echo 'No TypeScript files to check in test-utils package' --noErrorTruncation
@repo/test-utils:typecheck: 
@repo/test-utils:typecheck: No TypeScript files to check in test-utils package --noErrorTruncation
@repo/shared:build: cache hit, replaying logs c409694141efe3d1
@repo/shared:build: 
@repo/shared:build: > @repo/shared@0.1.0 build
@repo/shared:build: > npm run build:cjs && npm run build:esm
@repo/shared:build: 
@repo/shared:build: 
@repo/shared:build: > @repo/shared@0.1.0 build:cjs
@repo/shared:build: > tsc -p tsconfig.build.json
@repo/shared:build: 
@repo/shared:build: 
@repo/shared:build: > @repo/shared@0.1.0 build:esm
@repo/shared:build: > tsc -p tsconfig.esm.json
@repo/shared:build: 
@repo/database:typecheck: cache hit, replaying logs 6541c32d2e28d679
@repo/database:typecheck: 
@repo/database:typecheck: > @repo/database@0.1.0 typecheck
@repo/database:typecheck: > tsc --noEmit --noErrorTruncation
@repo/database:typecheck: 
@repo/database:build: cache hit, replaying logs d99d9319d61ac4b4
@repo/database:build: 
@repo/database:build: > @repo/database@0.1.0 build
@repo/database:build: > npm run clean-dist && tsc --build
@repo/database:build: 
@repo/database:build: 
@repo/database:build: > @repo/database@0.1.0 clean-dist
@repo/database:build: > tsc --build --clean && rm -rf dist
@repo/database:build: 
@repo/backend:typecheck: cache hit, replaying logs d39a6f9fa51e25d6
@repo/backend:typecheck: 
@repo/backend:typecheck: > @repo/backend@0.0.2 typecheck
@repo/backend:typecheck: > NODE_OPTIONS='--max-old-space-size=8192' tsc -p tsconfig.build.json --noEmit --incremental --skipLibCheck --noErrorTruncation
@repo/backend:typecheck: 
@repo/frontend:typecheck: cache miss, executing 770e144af569c946
@repo/frontend:typecheck: 
@repo/frontend:typecheck: > @repo/frontend@0.1.0 typecheck
@repo/frontend:typecheck: > tsc --noEmit --noErrorTruncation
@repo/frontend:typecheck: 
@repo/frontend:typecheck: src/components/billing/payment-methods.tsx(369,9): error TS2322: Type 'import("/Users/richard/Developer/tenant-flow/apps/frontend/node_modules/@types/react/index").ReactNode' is not assignable to type 'ReactNode'.
@repo/frontend:typecheck:   Type 'bigint' is not assignable to type 'ReactNode'.
@repo/frontend:typecheck: src/components/maintenance/maintenance-data-table.tsx(218,10): error TS2741: Property 'unitNumber' is missing in type 'MaintenanceRequestWithDetails' but required in type 'MaintenanceRequestApiResponse'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(51,36): error TS2554: Expected 1 arguments, but got 2.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(133,27): error TS2741: Property 'units' is missing in type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE" | "OTHER"; state: string; updatedAt: string; zipCode: string; }' but required in type 'PropertyWithUnits'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(137,24): error TS2741: Property 'units' is missing in type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE" | "OTHER"; state: string; updatedAt: string; zipCode: string; }' but required in type 'PropertyWithUnits'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(144,29): error TS2741: Property 'units' is missing in type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE" | "OTHER"; state: string; updatedAt: string; zipCode: string; }' but required in type 'PropertyWithUnits'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(151,28): error TS2741: Property 'units' is missing in type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE" | "OTHER"; state: string; updatedAt: string; zipCode: string; }' but required in type 'PropertyWithUnits'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(291,19): error TS2339: Property 'manager' does not exist on type 'PropertyWithUnits'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(293,18): error TS2339: Property 'manager' does not exist on type 'PropertyWithUnits'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(297,21): error TS2339: Property 'manager' does not exist on type 'PropertyWithUnits'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(301,21): error TS2339: Property 'manager' does not exist on type 'PropertyWithUnits'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(367,17): error TS2339: Property 'rentAmount' does not exist on type '{ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; } & { leases: { createdAt: string; endDate: string; id: string; rentAmount: number; securityDeposit: number; startDate: string; status: "DRAFT" | "ACTIVE" | "EXPIRED" | "TERMINATED"; tenantId: string; terms: string | null; unitId: string; updatedAt: string; }[]; }'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(382,46): error TS2339: Property 'rentAmount' does not exist on type '{ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; } & { leases: { createdAt: string; endDate: string; id: string; rentAmount: number; securityDeposit: number; startDate: string; status: "DRAFT" | "ACTIVE" | "EXPIRED" | "TERMINATED"; tenantId: string; terms: string | null; unitId: string; updatedAt: string; }[]; }'.
@repo/frontend:typecheck: src/components/properties/property-details-drawer.tsx(387,31): error TS2339: Property 'rentAmount' does not exist on type '{ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; } & { leases: { createdAt: string; endDate: string; id: string; rentAmount: number; securityDeposit: number; startDate: string; status: "DRAFT" | "ACTIVE" | "EXPIRED" | "TERMINATED"; tenantId: string; terms: string | null; unitId: string; updatedAt: string; }[]; }'.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(85,4): error TS2322: Type '"OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"' is not assignable to type '"OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | undefined'.
@repo/frontend:typecheck:   Type '"TOWNHOUSE"' is not assignable to type '"OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | undefined'.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(140,35): error TS2345: Argument of type '(formData: { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }) => Promise<void>' is not assignable to parameter of type 'SubmitHandler<TFieldValues>'.
@repo/frontend:typecheck:   Types of parameters 'formData' and 'data' are incompatible.
@repo/frontend:typecheck:     Type 'TFieldValues' is not assignable to type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }'.
@repo/frontend:typecheck:       Type 'FieldValues' is missing the following properties from type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }': name, address, city, state, and 2 more.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(144,8): error TS2322: Type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:   The types of '_options.resolver' are incompatible between these types.
@repo/frontend:typecheck:     Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues> | undefined' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }> | undefined'.
@repo/frontend:typecheck:       Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:         Type 'TFieldValues' is not assignable to type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }'.
@repo/frontend:typecheck:           Type 'FieldValues' is missing the following properties from type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }': name, address, city, state, and 2 more.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(161,8): error TS2322: Type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:   The types of '_options.resolver' are incompatible between these types.
@repo/frontend:typecheck:     Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues> | undefined' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }> | undefined'.
@repo/frontend:typecheck:       Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:         Type 'TFieldValues' is not assignable to type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }'.
@repo/frontend:typecheck:           Type 'FieldValues' is missing the following properties from type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }': name, address, city, state, and 2 more.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(198,8): error TS2322: Type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:   The types of '_options.resolver' are incompatible between these types.
@repo/frontend:typecheck:     Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues> | undefined' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }> | undefined'.
@repo/frontend:typecheck:       Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:         Type 'TFieldValues' is not assignable to type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }'.
@repo/frontend:typecheck:           Type 'FieldValues' is missing the following properties from type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }': name, address, city, state, and 2 more.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(216,9): error TS2322: Type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:   The types of '_options.resolver' are incompatible between these types.
@repo/frontend:typecheck:     Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues> | undefined' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }> | undefined'.
@repo/frontend:typecheck:       Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:         Type 'TFieldValues' is not assignable to type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }'.
@repo/frontend:typecheck:           Type 'FieldValues' is missing the following properties from type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }': name, address, city, state, and 2 more.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(233,9): error TS2322: Type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:   The types of '_options.resolver' are incompatible between these types.
@repo/frontend:typecheck:     Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues> | undefined' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }> | undefined'.
@repo/frontend:typecheck:       Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:         Type 'TFieldValues' is not assignable to type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }'.
@repo/frontend:typecheck:           Type 'FieldValues' is missing the following properties from type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }': name, address, city, state, and 2 more.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(250,9): error TS2322: Type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:   The types of '_options.resolver' are incompatible between these types.
@repo/frontend:typecheck:     Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues> | undefined' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }> | undefined'.
@repo/frontend:typecheck:       Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:         Type 'TFieldValues' is not assignable to type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }'.
@repo/frontend:typecheck:           Type 'FieldValues' is missing the following properties from type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }': name, address, city, state, and 2 more.
@repo/frontend:typecheck: src/components/properties/property-form-dialog.tsx(268,8): error TS2322: Type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Control<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:   The types of '_options.resolver' are incompatible between these types.
@repo/frontend:typecheck:     Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues> | undefined' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }> | undefined'.
@repo/frontend:typecheck:       Type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, TFieldValues>' is not assignable to type 'Resolver<{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }, any, { name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }>'.
@repo/frontend:typecheck:         Type 'TFieldValues' is not assignable to type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }'.
@repo/frontend:typecheck:           Type 'FieldValues' is missing the following properties from type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO"; description?: string | undefined; }': name, address, city, state, and 2 more.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(158,49): error TS2345: Argument of type '{ name: string; address: string; city: string; state: string; zipCode: string; propertyType: string; description: string; monthlyRent: number | undefined; totalUnits: number; squareFeet: number | undefined; bedrooms: number | undefined; bathrooms: number | undefined; yearBuilt: number | undefined; hasParking: boolean; hasLaundry: boolean; petsAllowed: boolean; }' is not assignable to parameter of type 'Partial<{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }>'.
@repo/frontend:typecheck:   Types of property 'propertyType' are incompatible.
@repo/frontend:typecheck:     Type 'string' is not assignable to type '"OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE" | undefined'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(209,6): error TS2741: Property 'children' is missing in type '{ className: string; isEditing: boolean; entityName: string; }' but required in type 'Omit<FeedbackProps, "variant">'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(251,14): error TS2304: Cannot find name 'Home'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(305,36): error TS2339: Property 'totalUnits' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(320,11): error TS2322: Type 'string | null | undefined' is not assignable to type 'string | number | readonly string[] | undefined'.
@repo/frontend:typecheck:   Type 'null' is not assignable to type 'string | number | readonly string[] | undefined'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(334,14): error TS2304: Cannot find name 'MapPin'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(425,35): error TS2339: Property 'monthlyRent' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(441,35): error TS2339: Property 'securityDeposit' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(466,35): error TS2339: Property 'squareFeet' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(481,35): error TS2339: Property 'bedrooms' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(497,35): error TS2339: Property 'bathrooms' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(513,35): error TS2339: Property 'yearBuilt' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(533,37): error TS2339: Property 'amenities' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(545,37): error TS2339: Property 'amenities' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-form.tsx(557,37): error TS2339: Property 'petsAllowed' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-list-server.tsx(76,18): error TS2339: Property 'units' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/components/properties/property-list-server.tsx(100,16): error TS18046: 'statsResponse' is of type 'unknown'.
@repo/frontend:typecheck: src/components/properties/property-list-server.tsx(152,21): error TS18046: 'propertiesResponse' is of type 'unknown'.
@repo/frontend:typecheck: src/components/properties/property-list-server.tsx(178,20): error TS7006: Parameter 'property' implicitly has an 'any' type.
@repo/frontend:typecheck: src/components/properties/quick-property-setup.tsx(8,10): error TS2305: Module '"@/app/actions/properties"' has no exported member 'quickPropertySetupAction'.
@repo/frontend:typecheck: src/components/properties/quick-property-setup.tsx(17,17): error TS18046: 'data' is of type 'unknown'.
@repo/frontend:typecheck: src/components/properties/sections/property-basic-info-section.tsx(25,16): error TS2322: Type 'Element' is not assignable to type 'string'.
@repo/frontend:typecheck: src/components/properties/sections/property-features-section.tsx(18,22): error TS2304: Cannot find name 'Home'.
@repo/frontend:typecheck: src/components/properties/sections/property-location-section.tsx(19,22): error TS2304: Cannot find name 'MapPin'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(32,7): error TS2305: Module '"@/components/ui/form"' has no exported member 'FormState'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(37,11): error TS2430: Interface 'LocalUnitFormProps' incorrectly extends interface 'Omit<UnitFormProps, "onSubmit">'.
@repo/frontend:typecheck:   Types of property 'onSuccess' are incompatible.
@repo/frontend:typecheck:     Type '((unit: { bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; }) => void) | undefined' is not assignable to type '((unit: Record<string, unknown>) => void) | undefined'.
@repo/frontend:typecheck:       Type '(unit: { bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; }) => void' is not assignable to type '(unit: Record<string, unknown>) => void'.
@repo/frontend:typecheck:         Types of parameters 'unit' and 'unit' are incompatible.
@repo/frontend:typecheck:           Type 'Record<string, unknown>' is missing the following properties from type '{ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; }': bathrooms, bedrooms, createdAt, id, and 7 more.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(64,10): error TS2339: Property 'optimisticItem' does not exist on type '{ invalid: boolean; isDirty: boolean; isTouched: boolean; isValidating: boolean; error?: FieldError | undefined; id: string; name: string; formItemId: string; formDescriptionId: string; formMessageId: string; }'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(64,26): error TS2339: Property 'addOptimisticUpdate' does not exist on type '{ invalid: boolean; isDirty: boolean; isTouched: boolean; isValidating: boolean; error?: FieldError | undefined; id: string; name: string; formItemId: string; formDescriptionId: string; formMessageId: string; }'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(64,68): error TS2554: Expected 0 arguments, but got 1.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(83,5): error TS2353: Object literal may only specify known properties, and 'squareFeet' does not exist in type '{ propertyId: string; unitNumber: string; amenities: string[]; images: string[]; bedrooms?: number | undefined; bathrooms?: number | undefined; squareFootage?: number | undefined; rent?: number | undefined; deposit?: number | undefined; description?: string | undefined; tenantId?: string | undefined; }'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(116,47): error TS2769: No overload matches this call.
@repo/frontend:typecheck:   Overload 1 of 2, '(action: (state: { success: boolean; error?: undefined; } | { success: boolean; error: string; }) => { success: boolean; error?: undefined; } | { success: boolean; error: string; } | Promise<{ success: boolean; error?: undefined; } | { ...; }>, initialState: { ...; } | { ...; }, permalink?: string | undefined): [state: ...]', gave the following error.
@repo/frontend:typecheck:     Argument of type '(prevState: FormState, formData: FormData) => Promise<{ success: boolean; error?: undefined; } | { success: boolean; error: string; }>' is not assignable to parameter of type '(state: { success: boolean; error?: undefined; } | { success: boolean; error: string; }) => { success: boolean; error?: undefined; } | { success: boolean; error: string; } | Promise<{ success: boolean; error?: undefined; } | { success: boolean; error: string; }>'.
@repo/frontend:typecheck:       Target signature provides too few arguments. Expected 2 or more, but got 1.
@repo/frontend:typecheck:   Overload 2 of 2, '(action: (state: { success: boolean; error?: undefined; } | { success: boolean; error: string; }, payload: FormData) => { success: boolean; error?: undefined; } | { success: boolean; error: string; } | Promise<...>, initialState: { ...; } | { ...; }, permalink?: string | undefined): [state: ...]', gave the following error.
@repo/frontend:typecheck:     Argument of type '{}' is not assignable to parameter of type '{ success: boolean; error?: undefined; } | { success: boolean; error: string; }'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(122,5): error TS2322: Type '{ isVisible: boolean; isEditing: boolean; entityName: string; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck:   Property 'isVisible' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(129,5): error TS2322: Type '{ isVisible: boolean; isEditing: boolean; entityName: string; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck:   Property 'isVisible' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(152,22): error TS2322: Type '{ error: string | undefined; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck:   Property 'error' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'. Did you mean 'onError'?
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(157,8): error TS2322: Type '{ children: Element; title: string; description: string; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'.
@repo/frontend:typecheck:   Property 'description' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(208,31): error TS2339: Property 'description' does not exist on type '{ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; }'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(219,8): error TS2322: Type '{ children: Element; title: string; description: string; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'.
@repo/frontend:typecheck:   Property 'description' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'.
@repo/frontend:typecheck: src/components/properties/units/unit-form.tsx(278,8): error TS2322: Type '{ children: Element; title: string; description: string; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'.
@repo/frontend:typecheck:   Property 'description' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'.
@repo/frontend:typecheck: src/components/properties/units/units-data-table.tsx(110,23): error TS2339: Property 'monthlyRent' does not exist on type 'UnitDisplayData'.
@repo/frontend:typecheck: src/components/properties/units/units-data-table.tsx(154,9): error TS2304: Cannot find name 'UnitWithDetails'.
@repo/frontend:typecheck: src/components/properties/units/units-data-table.tsx(267,40): error TS2304: Cannot find name 'UnitWithDetails'.
@repo/frontend:typecheck: src/components/properties/virtualized-properties-list.tsx(80,8): error TS2322: Type 'PropertyWithDetails' is not assignable to type 'PropertyWithUnits'.
@repo/frontend:typecheck:   Types of property 'units' are incompatible.
@repo/frontend:typecheck:     Type '{ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; }[] | undefined' is not assignable to type '({ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; } & { leases: { createdAt: string; endDate: string; id: string; rentAmount: number; securityDeposit: number; startDate: string; status: "DRAFT" | "ACTIVE" | "EXPIRED" | "TERMINATED"; tenantId: string; terms: string | null; unitId: string; updatedAt: string; }[]; })[]'.
@repo/frontend:typecheck:       Type 'undefined' is not assignable to type '({ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; } & { leases: { createdAt: string; endDate: string; id: string; rentAmount: number; securityDeposit: number; startDate: string; status: "DRAFT" | "ACTIVE" | "EXPIRED" | "TERMINATED"; tenantId: string; terms: string | null; unitId: string; updatedAt: string; }[]; })[]'.
@repo/frontend:typecheck: src/components/properties/virtualized-properties-list.tsx(109,8): error TS2322: Type 'PropertyWithDetails' is not assignable to type 'PropertyWithUnits'.
@repo/frontend:typecheck:   Types of property 'units' are incompatible.
@repo/frontend:typecheck:     Type '{ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; }[] | undefined' is not assignable to type '({ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; } & { leases: { createdAt: string; endDate: string; id: string; rentAmount: number; securityDeposit: number; startDate: string; status: "DRAFT" | "ACTIVE" | "EXPIRED" | "TERMINATED"; tenantId: string; terms: string | null; unitId: string; updatedAt: string; }[]; })[]'.
@repo/frontend:typecheck:       Type 'undefined' is not assignable to type '({ bathrooms: number; bedrooms: number; createdAt: string; id: string; lastInspectionDate: string | null; propertyId: string; rent: number; squareFeet: number | null; status: "VACANT" | "OCCUPIED" | "MAINTENANCE" | "RESERVED"; unitNumber: string; updatedAt: string; } & { leases: { createdAt: string; endDate: string; id: string; rentAmount: number; securityDeposit: number; startDate: string; status: "DRAFT" | "ACTIVE" | "EXPIRED" | "TERMINATED"; tenantId: string; terms: string | null; unitId: string; updatedAt: string; }[]; })[]'.
@repo/frontend:typecheck: src/components/settings/notification-settings.tsx(35,10): error TS2304: Cannot find name 'DollarSign'.
@repo/frontend:typecheck: src/components/settings/notification-settings.tsx(43,10): error TS2304: Cannot find name 'Calendar'.
@repo/frontend:typecheck: src/components/settings/notification-settings.tsx(51,10): error TS2304: Cannot find name 'Wrench'.
@repo/frontend:typecheck: src/components/settings/notification-settings.tsx(59,10): error TS2304: Cannot find name 'Users'.
@repo/frontend:typecheck: src/components/settings/notification-settings.tsx(67,10): error TS2304: Cannot find name 'AlertTriangle'.
@repo/frontend:typecheck: src/components/settings/profile-settings.tsx(45,17): error TS2304: Cannot find name 'apiClient'.
@repo/frontend:typecheck: src/components/settings/profile-settings.tsx(47,5): error TS2304: Cannot find name 'UpdateUserProfileSchema'.
@repo/frontend:typecheck: src/components/subscription/subscription-cancel-modal.tsx(55,3): error TS2304: Cannot find name 'useSubscriptionCancellation'.
@repo/frontend:typecheck: src/components/subscription/subscription-upgrade-modal.tsx(94,3): error TS2304: Cannot find name 'useSubscriptionActions'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(28,7): error TS2305: Module '"@/components/ui/form"' has no exported member 'FormState'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(62,10): error TS2339: Property 'optimisticItem' does not exist on type '{ invalid: boolean; isDirty: boolean; isTouched: boolean; isValidating: boolean; error?: FieldError | undefined; id: string; name: string; formItemId: string; formDescriptionId: string; formMessageId: string; }'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(62,26): error TS2339: Property 'addOptimisticUpdate' does not exist on type '{ invalid: boolean; isDirty: boolean; isTouched: boolean; isValidating: boolean; error?: FieldError | undefined; id: string; name: string; formItemId: string; formDescriptionId: string; formMessageId: string; }'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(62,68): error TS2554: Expected 0 arguments, but got 1.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(110,47): error TS2769: No overload matches this call.
@repo/frontend:typecheck:   Overload 1 of 2, '(action: (state: { success: boolean; error?: undefined; } | { success: boolean; error: string; }) => { success: boolean; error?: undefined; } | { success: boolean; error: string; } | Promise<{ success: boolean; error?: undefined; } | { ...; }>, initialState: { ...; } | { ...; }, permalink?: string | undefined): [state: ...]', gave the following error.
@repo/frontend:typecheck:     Argument of type '(prevState: FormState, formData: FormData) => Promise<{ success: boolean; error?: undefined; } | { success: boolean; error: string; }>' is not assignable to parameter of type '(state: { success: boolean; error?: undefined; } | { success: boolean; error: string; }) => { success: boolean; error?: undefined; } | { success: boolean; error: string; } | Promise<{ success: boolean; error?: undefined; } | { success: boolean; error: string; }>'.
@repo/frontend:typecheck:       Target signature provides too few arguments. Expected 2 or more, but got 1.
@repo/frontend:typecheck:   Overload 2 of 2, '(action: (state: { success: boolean; error?: undefined; } | { success: boolean; error: string; }, payload: FormData) => { success: boolean; error?: undefined; } | { success: boolean; error: string; } | Promise<...>, initialState: { ...; } | { ...; }, permalink?: string | undefined): [state: ...]', gave the following error.
@repo/frontend:typecheck:     Argument of type '{}' is not assignable to parameter of type '{ success: boolean; error?: undefined; } | { success: boolean; error: string; }'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(116,5): error TS2322: Type '{ isVisible: boolean; isEditing: boolean; entityName: string; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck:   Property 'isVisible' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(123,5): error TS2322: Type '{ isVisible: boolean; isEditing: boolean; entityName: string; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck:   Property 'isVisible' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(149,22): error TS2322: Type '{ error: string | undefined; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'.
@repo/frontend:typecheck:   Property 'error' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement>'. Did you mean 'onError'?
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(154,8): error TS2322: Type '{ children: Element; title: string; description: string; }' is not assignable to type 'IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'.
@repo/frontend:typecheck:   Property 'description' does not exist on type 'IntrinsicAttributes & ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement>'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(195,11): error TS2322: Type 'string | null | undefined' is not assignable to type 'string | number | readonly string[] | undefined'.
@repo/frontend:typecheck:   Type 'null' is not assignable to type 'string | number | readonly string[] | undefined'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(209,11): error TS2322: Type 'string | null | undefined' is not assignable to type 'string | number | readonly string[] | undefined'.
@repo/frontend:typecheck:   Type 'null' is not assignable to type 'string | number | readonly string[] | undefined'.
@repo/frontend:typecheck: src/components/tenants/tenant-form.tsx(221,33): error TS2339: Property 'notes' does not exist on type '{ avatarUrl: string | null; createdAt: string; email: string; emergencyContact: string | null; id: string; name: string; phone: string | null; updatedAt: string; userId: string | null; }'.
@repo/frontend:typecheck: src/components/tenants/tenants-stats.tsx(36,17): error TS2339: Property 'totalTenants' does not exist on type 'TenantStats'.
@repo/frontend:typecheck: src/components/tenants/tenants-stats.tsx(43,17): error TS2339: Property 'acceptedInvitations' does not exist on type 'TenantStats'.
@repo/frontend:typecheck: src/components/tenants/tenants-stats.tsx(50,17): error TS2339: Property 'pendingInvitations' does not exist on type 'TenantStats'.
@repo/frontend:typecheck: src/components/tenants/tenants-stats.tsx(57,17): error TS2339: Property 'expiringLeases' does not exist on type 'TenantStats'.
@repo/frontend:typecheck: src/components/ui/alert-dialog.tsx(136,18): error TS2554: Expected 1 arguments, but got 0.
@repo/frontend:typecheck: src/components/ui/badge.tsx(29,4): error TS2322: Type '{ ref?: Ref<HTMLSpanElement> | undefined; key?: Key | null | undefined; defaultChecked?: boolean | undefined; defaultValue?: string | number | readonly string[] | undefined; suppressContentEditableWarning?: boolean | undefined; suppressHydrationWarning?: boolean | undefined; accessKey?: string | undefined; autoCapitalize?: "off" | "none" | "on" | "sentences" | "words" | "characters" | (string & {}) | undefined; autoFocus?: boolean | undefined; contentEditable?: "inherit" | "plaintext-only" | Booleanish | undefined; contextMenu?: string | undefined; dir?: string | undefined; draggable?: Booleanish | undefined; enterKeyHint?: "search" | "enter" | "done" | "go" | "next" | "previous" | "send" | undefined; hidden?: boolean | undefined; id?: string | undefined; lang?: string | undefined; nonce?: string | undefined; slot?: string | undefined; spellCheck?: Booleanish | undefined; style?: CSSProperties | undefined; tabIndex?: number | undefined; title?: string | undefined; translate?: "yes" | "no" | undefined; radioGroup?: string | undefined; role?: AriaRole | undefined; about?: string | undefined; content?: string | undefined; datatype?: string | undefined; inlist?: any; prefix?: string | undefined; property?: string | undefined; rel?: string | undefined; resource?: string | undefined; rev?: string | undefined; typeof?: string | undefined; vocab?: string | undefined; autoCorrect?: string | undefined; autoSave?: string | undefined; color?: string | undefined; itemProp?: string | undefined; itemScope?: boolean | undefined; itemType?: string | undefined; itemID?: string | undefined; itemRef?: string | undefined; results?: number | undefined; security?: string | undefined; unselectable?: "off" | "on" | undefined; popover?: "" | "auto" | "manual" | undefined; popoverTargetAction?: "toggle" | "show" | "hide" | undefined; popoverTarget?: string | undefined; inert?: boolean | undefined; inputMode?: "search" | "text" | "email" | "none" | "tel" | "url" | "numeric" | "decimal" | undefined; is?: string | undefined; exportparts?: string | undefined; part?: string | undefined; "aria-activedescendant"?: string | undefined; "aria-atomic"?: Booleanish | undefined; "aria-autocomplete"?: "none" | "list" | "inline" | "both" | undefined; "aria-braillelabel"?: string | undefined; "aria-brailleroledescription"?: string | undefined; "aria-busy"?: Booleanish | undefined; "aria-checked"?: boolean | "true" | "false" | "mixed" | undefined; "aria-colcount"?: number | undefined; "aria-colindex"?: number | undefined; "aria-colindextext"?: string | undefined; "aria-colspan"?: number | undefined; "aria-controls"?: string | undefined; "aria-current"?: boolean | "location" | "time" | "true" | "false" | "page" | "date" | "step" | undefined; "aria-describedby"?: string | undefined; "aria-description"?: string | undefined; "aria-details"?: string | undefined; "aria-disabled"?: Booleanish | undefined; "aria-dropeffect"?: "link" | "none" | "copy" | "execute" | "move" | "popup" | undefined; "aria-errormessage"?: string | undefined; "aria-expanded"?: Booleanish | undefined; "aria-flowto"?: string | undefined; "aria-grabbed"?: Booleanish | undefined; "aria-haspopup"?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined; "aria-hidden"?: Booleanish | undefined; "aria-invalid"?: boolean | "true" | "false" | "grammar" | "spelling" | undefined; "aria-keyshortcuts"?: string | undefined; "aria-label"?: string | undefined; "aria-labelledby"?: string | undefined; "aria-level"?: number | undefined; "aria-live"?: "off" | "assertive" | "polite" | undefined; "aria-modal"?: Booleanish | undefined; "aria-multiline"?: Booleanish | undefined; "aria-multiselectable"?: Booleanish | undefined; "aria-orientation"?: "horizontal" | "vertical" | undefined; "aria-owns"?: string | undefined; "aria-placeholder"?: string | undefined; "aria-posinset"?: number | undefined; "aria-pressed"?: boolean | "true" | "false" | "mixed" | undefined; "aria-readonly"?: Booleanish | undefined; "aria-relevant"?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined; "aria-required"?: Booleanish | undefined; "aria-roledescription"?: string | undefined; "aria-rowcount"?: number | undefined; "aria-rowindex"?: number | undefined; "aria-rowindextext"?: string | undefined; "aria-rowspan"?: number | undefined; "aria-selected"?: Booleanish | undefined; "aria-setsize"?: number | undefined; "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined; "aria-valuemax"?: number | undefined; "aria-valuemin"?: number | undefined; "aria-valuenow"?: number | undefined; "aria-valuetext"?: string | undefined; children?: ReactNode; dangerouslySetInnerHTML?: { __html: string | TrustedHTML; } | undefined; onCopy?: ClipboardEventHandler<HTMLSpanElement> | undefined; onCopyCapture?: ClipboardEventHandler<HTMLSpanElement> | undefined; onCut?: ClipboardEventHandler<HTMLSpanElement> | undefined; onCutCapture?: ClipboardEventHandler<HTMLSpanElement> | undefined; onPaste?: ClipboardEventHandler<HTMLSpanElement> | undefined; onPasteCapture?: ClipboardEventHandler<HTMLSpanElement> | undefined; onCompositionEnd?: CompositionEventHandler<HTMLSpanElement> | undefined; onCompositionEndCapture?: CompositionEventHandler<HTMLSpanElement> | undefined; onCompositionStart?: CompositionEventHandler<HTMLSpanElement> | undefined; onCompositionStartCapture?: CompositionEventHandler<HTMLSpanElement> | undefined; onCompositionUpdate?: CompositionEventHandler<HTMLSpanElement> | undefined; onCompositionUpdateCapture?: CompositionEventHandler<HTMLSpanElement> | undefined; onFocus?: FocusEventHandler<HTMLSpanElement> | undefined; onFocusCapture?: FocusEventHandler<HTMLSpanElement> | undefined; onBlur?: FocusEventHandler<HTMLSpanElement> | undefined; onBlurCapture?: FocusEventHandler<HTMLSpanElement> | undefined; onChange?: FormEventHandler<HTMLSpanElement> | undefined; onChangeCapture?: FormEventHandler<HTMLSpanElement> | undefined; onBeforeInput?: InputEventHandler<HTMLSpanElement> | undefined; onBeforeInputCapture?: FormEventHandler<HTMLSpanElement> | undefined; onInput?: FormEventHandler<HTMLSpanElement> | undefined; onInputCapture?: FormEventHandler<HTMLSpanElement> | undefined; onReset?: FormEventHandler<HTMLSpanElement> | undefined; onResetCapture?: FormEventHandler<HTMLSpanElement> | undefined; onSubmit?: FormEventHandler<HTMLSpanElement> | undefined; onSubmitCapture?: FormEventHandler<HTMLSpanElement> | undefined; onInvalid?: FormEventHandler<HTMLSpanElement> | undefined; onInvalidCapture?: FormEventHandler<HTMLSpanElement> | undefined; onLoad?: ReactEventHandler<HTMLSpanElement> | undefined; onLoadCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onError?: ReactEventHandler<HTMLSpanElement> | undefined; onErrorCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onKeyDown?: KeyboardEventHandler<HTMLSpanElement> | undefined; onKeyDownCapture?: KeyboardEventHandler<HTMLSpanElement> | undefined; onKeyPress?: KeyboardEventHandler<HTMLSpanElement> | undefined; onKeyPressCapture?: KeyboardEventHandler<HTMLSpanElement> | undefined; onKeyUp?: KeyboardEventHandler<HTMLSpanElement> | undefined; onKeyUpCapture?: KeyboardEventHandler<HTMLSpanElement> | undefined; onAbort?: ReactEventHandler<HTMLSpanElement> | undefined; onAbortCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onCanPlay?: ReactEventHandler<HTMLSpanElement> | undefined; onCanPlayCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onCanPlayThrough?: ReactEventHandler<HTMLSpanElement> | undefined; onCanPlayThroughCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onDurationChange?: ReactEventHandler<HTMLSpanElement> | undefined; onDurationChangeCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onEmptied?: ReactEventHandler<HTMLSpanElement> | undefined; onEmptiedCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onEncrypted?: ReactEventHandler<HTMLSpanElement> | undefined; onEncryptedCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onEnded?: ReactEventHandler<HTMLSpanElement> | undefined; onEndedCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onLoadedData?: ReactEventHandler<HTMLSpanElement> | undefined; onLoadedDataCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onLoadedMetadata?: ReactEventHandler<HTMLSpanElement> | undefined; onLoadedMetadataCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onLoadStart?: ReactEventHandler<HTMLSpanElement> | undefined; onLoadStartCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onPause?: ReactEventHandler<HTMLSpanElement> | undefined; onPauseCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onPlay?: ReactEventHandler<HTMLSpanElement> | undefined; onPlayCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onPlaying?: ReactEventHandler<HTMLSpanElement> | undefined; onPlayingCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onProgress?: ReactEventHandler<HTMLSpanElement> | undefined; onProgressCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onRateChange?: ReactEventHandler<HTMLSpanElement> | undefined; onRateChangeCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onSeeked?: ReactEventHandler<HTMLSpanElement> | undefined; onSeekedCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onSeeking?: ReactEventHandler<HTMLSpanElement> | undefined; onSeekingCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onStalled?: ReactEventHandler<HTMLSpanElement> | undefined; onStalledCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onSuspend?: ReactEventHandler<HTMLSpanElement> | undefined; onSuspendCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onTimeUpdate?: ReactEventHandler<HTMLSpanElement> | undefined; onTimeUpdateCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onVolumeChange?: ReactEventHandler<HTMLSpanElement> | undefined; onVolumeChangeCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onWaiting?: ReactEventHandler<HTMLSpanElement> | undefined; onWaitingCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onAuxClick?: MouseEventHandler<HTMLSpanElement> | undefined; onAuxClickCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onClick?: MouseEventHandler<HTMLSpanElement> | undefined; onClickCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onContextMenu?: MouseEventHandler<HTMLSpanElement> | undefined; onContextMenuCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onDoubleClick?: MouseEventHandler<HTMLSpanElement> | undefined; onDoubleClickCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onDrag?: DragEventHandler<HTMLSpanElement> | undefined; onDragCapture?: DragEventHandler<HTMLSpanElement> | undefined; onDragEnd?: DragEventHandler<HTMLSpanElement> | undefined; onDragEndCapture?: DragEventHandler<HTMLSpanElement> | undefined; onDragEnter?: DragEventHandler<HTMLSpanElement> | undefined; onDragEnterCapture?: DragEventHandler<HTMLSpanElement> | undefined; onDragExit?: DragEventHandler<HTMLSpanElement> | undefined; onDragExitCapture?: DragEventHandler<HTMLSpanElement> | undefined; onDragLeave?: DragEventHandler<HTMLSpanElement> | undefined; onDragLeaveCapture?: DragEventHandler<HTMLSpanElement> | undefined; onDragOver?: DragEventHandler<HTMLSpanElement> | undefined; onDragOverCapture?: DragEventHandler<HTMLSpanElement> | undefined; onDragStart?: DragEventHandler<HTMLSpanElement> | undefined; onDragStartCapture?: DragEventHandler<HTMLSpanElement> | undefined; onDrop?: DragEventHandler<HTMLSpanElement> | undefined; onDropCapture?: DragEventHandler<HTMLSpanElement> | undefined; onMouseDown?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseDownCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseEnter?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseLeave?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseMove?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseMoveCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseOut?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseOutCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseOver?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseOverCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseUp?: MouseEventHandler<HTMLSpanElement> | undefined; onMouseUpCapture?: MouseEventHandler<HTMLSpanElement> | undefined; onSelect?: ReactEventHandler<HTMLSpanElement> | undefined; onSelectCapture?: ReactEventHandler<HTMLSpanElement> | undefined; onTouchCancel?: TouchEventHandler<HTMLSpanElement> | undefined; onTouchCancelCapture?: TouchEventHandler<HTMLSpanElement> | undefined; onTouchEnd?: TouchEventHandler<HTMLSpanElement> | undefined; onTouchEndCapture?: TouchEventHandler<HTMLSpanElement> | undefined; onTouchMove?: TouchEventHandler<HTMLSpanElement> | undefined; onTouchMoveCapture?: TouchEventHandler<HTMLSpanElement> | undefined; onTouchStart?: TouchEventHandler<HTMLSpanElement> | undefined; onTouchStartCapture?: TouchEventHandler<HTMLSpanElement> | undefined; onPointerDown?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerDownCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerMove?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerMoveCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerUp?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerUpCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerCancel?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerCancelCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerEnter?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerLeave?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerOver?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerOverCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerOut?: PointerEventHandler<HTMLSpanElement> | undefined; onPointerOutCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onGotPointerCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onGotPointerCaptureCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onLostPointerCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onLostPointerCaptureCapture?: PointerEventHandler<HTMLSpanElement> | undefined; onScroll?: UIEventHandler<HTMLSpanElement> | undefined; onScrollCapture?: UIEventHandler<HTMLSpanElement> | undefined; onScrollEnd?: UIEventHandler<HTMLSpanElement> | undefined; onScrollEndCapture?: UIEventHandler<HTMLSpanElement> | undefined; onWheel?: WheelEventHandler<HTMLSpanElement> | undefined; onWheelCapture?: WheelEventHandler<HTMLSpanElement> | undefined; onAnimationStart?: AnimationEventHandler<HTMLSpanElement> | undefined; onAnimationStartCapture?: AnimationEventHandler<HTMLSpanElement> | undefined; onAnimationEnd?: AnimationEventHandler<HTMLSpanElement> | undefined; onAnimationEndCapture?: AnimationEventHandler<HTMLSpanElement> | undefined; onAnimationIteration?: AnimationEventHandler<HTMLSpanElement> | undefined; onAnimationIterationCapture?: AnimationEventHandler<HTMLSpanElement> | undefined; onToggle?: ToggleEventHandler<HTMLSpanElement> | undefined; onBeforeToggle?: ToggleEventHandler<HTMLSpanElement> | undefined; onTransitionCancel?: TransitionEventHandler<HTMLSpanElement> | undefined; onTransitionCancelCapture?: TransitionEventHandler<HTMLSpanElement> | undefined; onTransitionEnd?: TransitionEventHandler<HTMLSpanElement> | undefined; onTransitionEndCapture?: TransitionEventHandler<HTMLSpanElement> | undefined; onTransitionRun?: TransitionEventHandler<HTMLSpanElement> | undefined; onTransitionRunCapture?: TransitionEventHandler<HTMLSpanElement> | undefined; onTransitionStart?: TransitionEventHandler<HTMLSpanElement> | undefined; onTransitionStartCapture?: TransitionEventHandler<HTMLSpanElement> | undefined; "data-slot": string; className: string; }' is not assignable to type 'RefAttributes<HTMLElement>'.
@repo/frontend:typecheck:   Types of property 'ref' are incompatible.
@repo/frontend:typecheck:     Type 'Ref<HTMLSpanElement> | undefined' is not assignable to type 'Ref<HTMLElement> | undefined'.
@repo/frontend:typecheck:       Type '(instance: HTMLSpanElement | null) => void | (() => VoidOrUndefinedOnly)' is not assignable to type 'Ref<HTMLElement> | undefined'.
@repo/frontend:typecheck:         Type '(instance: HTMLSpanElement | null) => void | (() => VoidOrUndefinedOnly)' is not assignable to type '(instance: HTMLElement | null) => void | (() => VoidOrUndefinedOnly)'.
@repo/frontend:typecheck:           Type 'void | (() => VoidOrUndefinedOnly)' is not assignable to type 'void | (() => VoidOrUndefinedOnly)'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:             Type '() => VoidOrUndefinedOnly' is not assignable to type 'void | (() => VoidOrUndefinedOnly)'.
@repo/frontend:typecheck:               Type '() => VoidOrUndefinedOnly' is not assignable to type '() => VoidOrUndefinedOnly'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:                 Type 'VoidOrUndefinedOnly' is not assignable to type 'VoidOrUndefinedOnly'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:                   Type '{ [UNDEFINED_VOID_ONLY]: never; }' is not assignable to type 'VoidOrUndefinedOnly'.
@repo/frontend:typecheck: src/components/ui/breadcrumb.tsx(43,4): error TS2322: Type '{ ref?: Ref<HTMLAnchorElement> | undefined; key?: Key | null | undefined; download?: any; href?: string | undefined; hrefLang?: string | undefined; media?: string | undefined; ping?: string | undefined; target?: HTMLAttributeAnchorTarget | undefined; type?: string | undefined; referrerPolicy?: HTMLAttributeReferrerPolicy | undefined; defaultChecked?: boolean | undefined; defaultValue?: string | number | readonly string[] | undefined; suppressContentEditableWarning?: boolean | undefined; suppressHydrationWarning?: boolean | undefined; accessKey?: string | undefined; autoCapitalize?: "off" | "none" | "on" | "sentences" | "words" | "characters" | (string & {}) | undefined; autoFocus?: boolean | undefined; contentEditable?: "inherit" | "plaintext-only" | Booleanish | undefined; contextMenu?: string | undefined; dir?: string | undefined; draggable?: Booleanish | undefined; enterKeyHint?: "search" | "enter" | "done" | "go" | "next" | "previous" | "send" | undefined; hidden?: boolean | undefined; id?: string | undefined; lang?: string | undefined; nonce?: string | undefined; slot?: string | undefined; spellCheck?: Booleanish | undefined; style?: CSSProperties | undefined; tabIndex?: number | undefined; title?: string | undefined; translate?: "yes" | "no" | undefined; radioGroup?: string | undefined; role?: AriaRole | undefined; about?: string | undefined; content?: string | undefined; datatype?: string | undefined; inlist?: any; prefix?: string | undefined; property?: string | undefined; rel?: string | undefined; resource?: string | undefined; rev?: string | undefined; typeof?: string | undefined; vocab?: string | undefined; autoCorrect?: string | undefined; autoSave?: string | undefined; color?: string | undefined; itemProp?: string | undefined; itemScope?: boolean | undefined; itemType?: string | undefined; itemID?: string | undefined; itemRef?: string | undefined; results?: number | undefined; security?: string | undefined; unselectable?: "off" | "on" | undefined; popover?: "" | "auto" | "manual" | undefined; popoverTargetAction?: "toggle" | "show" | "hide" | undefined; popoverTarget?: string | undefined; inert?: boolean | undefined; inputMode?: "search" | "text" | "email" | "none" | "tel" | "url" | "numeric" | "decimal" | undefined; is?: string | undefined; exportparts?: string | undefined; part?: string | undefined; "aria-activedescendant"?: string | undefined; "aria-atomic"?: Booleanish | undefined; "aria-autocomplete"?: "none" | "list" | "inline" | "both" | undefined; "aria-braillelabel"?: string | undefined; "aria-brailleroledescription"?: string | undefined; "aria-busy"?: Booleanish | undefined; "aria-checked"?: boolean | "true" | "false" | "mixed" | undefined; "aria-colcount"?: number | undefined; "aria-colindex"?: number | undefined; "aria-colindextext"?: string | undefined; "aria-colspan"?: number | undefined; "aria-controls"?: string | undefined; "aria-current"?: boolean | "location" | "time" | "true" | "false" | "page" | "date" | "step" | undefined; "aria-describedby"?: string | undefined; "aria-description"?: string | undefined; "aria-details"?: string | undefined; "aria-disabled"?: Booleanish | undefined; "aria-dropeffect"?: "link" | "none" | "copy" | "execute" | "move" | "popup" | undefined; "aria-errormessage"?: string | undefined; "aria-expanded"?: Booleanish | undefined; "aria-flowto"?: string | undefined; "aria-grabbed"?: Booleanish | undefined; "aria-haspopup"?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined; "aria-hidden"?: Booleanish | undefined; "aria-invalid"?: boolean | "true" | "false" | "grammar" | "spelling" | undefined; "aria-keyshortcuts"?: string | undefined; "aria-label"?: string | undefined; "aria-labelledby"?: string | undefined; "aria-level"?: number | undefined; "aria-live"?: "off" | "assertive" | "polite" | undefined; "aria-modal"?: Booleanish | undefined; "aria-multiline"?: Booleanish | undefined; "aria-multiselectable"?: Booleanish | undefined; "aria-orientation"?: "horizontal" | "vertical" | undefined; "aria-owns"?: string | undefined; "aria-placeholder"?: string | undefined; "aria-posinset"?: number | undefined; "aria-pressed"?: boolean | "true" | "false" | "mixed" | undefined; "aria-readonly"?: Booleanish | undefined; "aria-relevant"?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined; "aria-required"?: Booleanish | undefined; "aria-roledescription"?: string | undefined; "aria-rowcount"?: number | undefined; "aria-rowindex"?: number | undefined; "aria-rowindextext"?: string | undefined; "aria-rowspan"?: number | undefined; "aria-selected"?: Booleanish | undefined; "aria-setsize"?: number | undefined; "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined; "aria-valuemax"?: number | undefined; "aria-valuemin"?: number | undefined; "aria-valuenow"?: number | undefined; "aria-valuetext"?: string | undefined; children?: ReactNode; dangerouslySetInnerHTML?: { __html: string | TrustedHTML; } | undefined; onCopy?: ClipboardEventHandler<HTMLAnchorElement> | undefined; onCopyCapture?: ClipboardEventHandler<HTMLAnchorElement> | undefined; onCut?: ClipboardEventHandler<HTMLAnchorElement> | undefined; onCutCapture?: ClipboardEventHandler<HTMLAnchorElement> | undefined; onPaste?: ClipboardEventHandler<HTMLAnchorElement> | undefined; onPasteCapture?: ClipboardEventHandler<HTMLAnchorElement> | undefined; onCompositionEnd?: CompositionEventHandler<HTMLAnchorElement> | undefined; onCompositionEndCapture?: CompositionEventHandler<HTMLAnchorElement> | undefined; onCompositionStart?: CompositionEventHandler<HTMLAnchorElement> | undefined; onCompositionStartCapture?: CompositionEventHandler<HTMLAnchorElement> | undefined; onCompositionUpdate?: CompositionEventHandler<HTMLAnchorElement> | undefined; onCompositionUpdateCapture?: CompositionEventHandler<HTMLAnchorElement> | undefined; onFocus?: FocusEventHandler<HTMLAnchorElement> | undefined; onFocusCapture?: FocusEventHandler<HTMLAnchorElement> | undefined; onBlur?: FocusEventHandler<HTMLAnchorElement> | undefined; onBlurCapture?: FocusEventHandler<HTMLAnchorElement> | undefined; onChange?: FormEventHandler<HTMLAnchorElement> | undefined; onChangeCapture?: FormEventHandler<HTMLAnchorElement> | undefined; onBeforeInput?: InputEventHandler<HTMLAnchorElement> | undefined; onBeforeInputCapture?: FormEventHandler<HTMLAnchorElement> | undefined; onInput?: FormEventHandler<HTMLAnchorElement> | undefined; onInputCapture?: FormEventHandler<HTMLAnchorElement> | undefined; onReset?: FormEventHandler<HTMLAnchorElement> | undefined; onResetCapture?: FormEventHandler<HTMLAnchorElement> | undefined; onSubmit?: FormEventHandler<HTMLAnchorElement> | undefined; onSubmitCapture?: FormEventHandler<HTMLAnchorElement> | undefined; onInvalid?: FormEventHandler<HTMLAnchorElement> | undefined; onInvalidCapture?: FormEventHandler<HTMLAnchorElement> | undefined; onLoad?: ReactEventHandler<HTMLAnchorElement> | undefined; onLoadCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onError?: ReactEventHandler<HTMLAnchorElement> | undefined; onErrorCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onKeyDown?: KeyboardEventHandler<HTMLAnchorElement> | undefined; onKeyDownCapture?: KeyboardEventHandler<HTMLAnchorElement> | undefined; onKeyPress?: KeyboardEventHandler<HTMLAnchorElement> | undefined; onKeyPressCapture?: KeyboardEventHandler<HTMLAnchorElement> | undefined; onKeyUp?: KeyboardEventHandler<HTMLAnchorElement> | undefined; onKeyUpCapture?: KeyboardEventHandler<HTMLAnchorElement> | undefined; onAbort?: ReactEventHandler<HTMLAnchorElement> | undefined; onAbortCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onCanPlay?: ReactEventHandler<HTMLAnchorElement> | undefined; onCanPlayCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onCanPlayThrough?: ReactEventHandler<HTMLAnchorElement> | undefined; onCanPlayThroughCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onDurationChange?: ReactEventHandler<HTMLAnchorElement> | undefined; onDurationChangeCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onEmptied?: ReactEventHandler<HTMLAnchorElement> | undefined; onEmptiedCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onEncrypted?: ReactEventHandler<HTMLAnchorElement> | undefined; onEncryptedCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onEnded?: ReactEventHandler<HTMLAnchorElement> | undefined; onEndedCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onLoadedData?: ReactEventHandler<HTMLAnchorElement> | undefined; onLoadedDataCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onLoadedMetadata?: ReactEventHandler<HTMLAnchorElement> | undefined; onLoadedMetadataCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onLoadStart?: ReactEventHandler<HTMLAnchorElement> | undefined; onLoadStartCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onPause?: ReactEventHandler<HTMLAnchorElement> | undefined; onPauseCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onPlay?: ReactEventHandler<HTMLAnchorElement> | undefined; onPlayCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onPlaying?: ReactEventHandler<HTMLAnchorElement> | undefined; onPlayingCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onProgress?: ReactEventHandler<HTMLAnchorElement> | undefined; onProgressCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onRateChange?: ReactEventHandler<HTMLAnchorElement> | undefined; onRateChangeCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onSeeked?: ReactEventHandler<HTMLAnchorElement> | undefined; onSeekedCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onSeeking?: ReactEventHandler<HTMLAnchorElement> | undefined; onSeekingCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onStalled?: ReactEventHandler<HTMLAnchorElement> | undefined; onStalledCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onSuspend?: ReactEventHandler<HTMLAnchorElement> | undefined; onSuspendCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onTimeUpdate?: ReactEventHandler<HTMLAnchorElement> | undefined; onTimeUpdateCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onVolumeChange?: ReactEventHandler<HTMLAnchorElement> | undefined; onVolumeChangeCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onWaiting?: ReactEventHandler<HTMLAnchorElement> | undefined; onWaitingCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onAuxClick?: MouseEventHandler<HTMLAnchorElement> | undefined; onAuxClickCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onClick?: MouseEventHandler<HTMLAnchorElement> | undefined; onClickCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onContextMenu?: MouseEventHandler<HTMLAnchorElement> | undefined; onContextMenuCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onDoubleClick?: MouseEventHandler<HTMLAnchorElement> | undefined; onDoubleClickCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onDrag?: DragEventHandler<HTMLAnchorElement> | undefined; onDragCapture?: DragEventHandler<HTMLAnchorElement> | undefined; onDragEnd?: DragEventHandler<HTMLAnchorElement> | undefined; onDragEndCapture?: DragEventHandler<HTMLAnchorElement> | undefined; onDragEnter?: DragEventHandler<HTMLAnchorElement> | undefined; onDragEnterCapture?: DragEventHandler<HTMLAnchorElement> | undefined; onDragExit?: DragEventHandler<HTMLAnchorElement> | undefined; onDragExitCapture?: DragEventHandler<HTMLAnchorElement> | undefined; onDragLeave?: DragEventHandler<HTMLAnchorElement> | undefined; onDragLeaveCapture?: DragEventHandler<HTMLAnchorElement> | undefined; onDragOver?: DragEventHandler<HTMLAnchorElement> | undefined; onDragOverCapture?: DragEventHandler<HTMLAnchorElement> | undefined; onDragStart?: DragEventHandler<HTMLAnchorElement> | undefined; onDragStartCapture?: DragEventHandler<HTMLAnchorElement> | undefined; onDrop?: DragEventHandler<HTMLAnchorElement> | undefined; onDropCapture?: DragEventHandler<HTMLAnchorElement> | undefined; onMouseDown?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseDownCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseEnter?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseLeave?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseMove?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseMoveCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseOut?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseOutCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseOver?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseOverCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseUp?: MouseEventHandler<HTMLAnchorElement> | undefined; onMouseUpCapture?: MouseEventHandler<HTMLAnchorElement> | undefined; onSelect?: ReactEventHandler<HTMLAnchorElement> | undefined; onSelectCapture?: ReactEventHandler<HTMLAnchorElement> | undefined; onTouchCancel?: TouchEventHandler<HTMLAnchorElement> | undefined; onTouchCancelCapture?: TouchEventHandler<HTMLAnchorElement> | undefined; onTouchEnd?: TouchEventHandler<HTMLAnchorElement> | undefined; onTouchEndCapture?: TouchEventHandler<HTMLAnchorElement> | undefined; onTouchMove?: TouchEventHandler<HTMLAnchorElement> | undefined; onTouchMoveCapture?: TouchEventHandler<HTMLAnchorElement> | undefined; onTouchStart?: TouchEventHandler<HTMLAnchorElement> | undefined; onTouchStartCapture?: TouchEventHandler<HTMLAnchorElement> | undefined; onPointerDown?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerDownCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerMove?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerMoveCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerUp?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerUpCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerCancel?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerCancelCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerEnter?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerLeave?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerOver?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerOverCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerOut?: PointerEventHandler<HTMLAnchorElement> | undefined; onPointerOutCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onGotPointerCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onGotPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onLostPointerCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onLostPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement> | undefined; onScroll?: UIEventHandler<HTMLAnchorElement> | undefined; onScrollCapture?: UIEventHandler<HTMLAnchorElement> | undefined; onScrollEnd?: UIEventHandler<HTMLAnchorElement> | undefined; onScrollEndCapture?: UIEventHandler<HTMLAnchorElement> | undefined; onWheel?: WheelEventHandler<HTMLAnchorElement> | undefined; onWheelCapture?: WheelEventHandler<HTMLAnchorElement> | undefined; onAnimationStart?: AnimationEventHandler<HTMLAnchorElement> | undefined; onAnimationStartCapture?: AnimationEventHandler<HTMLAnchorElement> | undefined; onAnimationEnd?: AnimationEventHandler<HTMLAnchorElement> | undefined; onAnimationEndCapture?: AnimationEventHandler<HTMLAnchorElement> | undefined; onAnimationIteration?: AnimationEventHandler<HTMLAnchorElement> | undefined; onAnimationIterationCapture?: AnimationEventHandler<HTMLAnchorElement> | undefined; onToggle?: ToggleEventHandler<HTMLAnchorElement> | undefined; onBeforeToggle?: ToggleEventHandler<HTMLAnchorElement> | undefined; onTransitionCancel?: TransitionEventHandler<HTMLAnchorElement> | undefined; onTransitionCancelCapture?: TransitionEventHandler<HTMLAnchorElement> | undefined; onTransitionEnd?: TransitionEventHandler<HTMLAnchorElement> | undefined; onTransitionEndCapture?: TransitionEventHandler<HTMLAnchorElement> | undefined; onTransitionRun?: TransitionEventHandler<HTMLAnchorElement> | undefined; onTransitionRunCapture?: TransitionEventHandler<HTMLAnchorElement> | undefined; onTransitionStart?: TransitionEventHandler<HTMLAnchorElement> | undefined; onTransitionStartCapture?: TransitionEventHandler<HTMLAnchorElement> | undefined; "data-slot": string; className: string; }' is not assignable to type 'RefAttributes<HTMLElement>'.
@repo/frontend:typecheck:   Types of property 'ref' are incompatible.
@repo/frontend:typecheck:     Type 'Ref<HTMLAnchorElement> | undefined' is not assignable to type 'Ref<HTMLElement> | undefined'.
@repo/frontend:typecheck:       Type '(instance: HTMLAnchorElement | null) => void | (() => VoidOrUndefinedOnly)' is not assignable to type 'Ref<HTMLElement> | undefined'.
@repo/frontend:typecheck:         Type '(instance: HTMLAnchorElement | null) => void | (() => VoidOrUndefinedOnly)' is not assignable to type '(instance: HTMLElement | null) => void | (() => VoidOrUndefinedOnly)'.
@repo/frontend:typecheck:           Type 'void | (() => VoidOrUndefinedOnly)' is not assignable to type 'void | (() => VoidOrUndefinedOnly)'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:             Type '() => VoidOrUndefinedOnly' is not assignable to type 'void | (() => VoidOrUndefinedOnly)'.
@repo/frontend:typecheck:               Type '() => VoidOrUndefinedOnly' is not assignable to type '() => VoidOrUndefinedOnly'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:                 Type 'VoidOrUndefinedOnly' is not assignable to type 'VoidOrUndefinedOnly'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:                   Type '{ [UNDEFINED_VOID_ONLY]: never; }' is not assignable to type 'VoidOrUndefinedOnly'.
@repo/frontend:typecheck: src/components/ui/calendar.tsx(140,8): error TS2322: Type 'React.Ref<HTMLDivElement> | undefined' is not assignable to type 'import("/Users/richard/Developer/tenant-flow/apps/frontend/node_modules/@types/react/index").Ref<HTMLDivElement> | undefined'.
@repo/frontend:typecheck:   Type '(instance: HTMLDivElement | null) => void | (() => VoidOrUndefinedOnly)' is not assignable to type 'Ref<HTMLDivElement> | undefined'.
@repo/frontend:typecheck:     Type '(instance: HTMLDivElement | null) => void | (() => VoidOrUndefinedOnly)' is not assignable to type '(instance: HTMLDivElement | null) => void | (() => VoidOrUndefinedOnly)'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:       Type 'void | (() => VoidOrUndefinedOnly)' is not assignable to type 'void | (() => VoidOrUndefinedOnly)'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:         Type '() => VoidOrUndefinedOnly' is not assignable to type 'void | (() => VoidOrUndefinedOnly)'.
@repo/frontend:typecheck:           Type '() => VoidOrUndefinedOnly' is not assignable to type '() => VoidOrUndefinedOnly'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:             Type 'VoidOrUndefinedOnly' is not assignable to type 'VoidOrUndefinedOnly'. Two different types with this name exist, but they are unrelated.
@repo/frontend:typecheck:               Type '{ [UNDEFINED_VOID_ONLY]: never; }' is not assignable to type 'VoidOrUndefinedOnly'.
@repo/frontend:typecheck: src/components/ui/calendar.tsx(153,24): error TS7053: Element implicitly has an 'any' type because expression of type '"left" | "right" | "up" | "down"' can't be used to index type '{ left: string; right: string; down: string; }'.
@repo/frontend:typecheck:   Property 'up' does not exist on type '{ left: string; right: string; down: string; }'.
@repo/frontend:typecheck: src/components/ui/form-action-state.tsx(50,7): error TS2698: Spread types may only be created from object types.
@repo/frontend:typecheck: src/components/ui/index.ts(60,1): error TS2308: Module './form' has already exported a member named 'ErrorFeedback'. Consider explicitly re-exporting to resolve the ambiguity.
@repo/frontend:typecheck: src/components/ui/index.ts(60,1): error TS2308: Module './form' has already exported a member named 'OptimisticFeedback'. Consider explicitly re-exporting to resolve the ambiguity.
@repo/frontend:typecheck: src/components/ui/index.ts(60,1): error TS2308: Module './form' has already exported a member named 'SuccessFeedback'. Consider explicitly re-exporting to resolve the ambiguity.
@repo/frontend:typecheck: src/components/ui/sidebar-toggle.tsx(1,17): error TS2300: Duplicate identifier 'useState'.
@repo/frontend:typecheck: src/components/ui/sidebar-toggle.tsx(2,10): error TS2300: Duplicate identifier 'useState'.
@repo/frontend:typecheck: src/contexts/auth-context.tsx(9,15): error TS2724: '"@repo/shared/types/auth-errors"' has no exported member named 'AuthError'. Did you mean 'isAuthError'?
@repo/frontend:typecheck: src/contexts/auth-context.tsx(40,25): error TS18046: 'sessionResponse' is of type 'unknown'.
@repo/frontend:typecheck: src/contexts/auth-context.tsx(76,33): error TS18046: 'sessionResponse' is of type 'unknown'.
@repo/frontend:typecheck: src/contexts/auth-context.tsx(92,17): error TS2322: Type 'string' is not assignable to type 'Date'.
@repo/frontend:typecheck: src/contexts/auth-context.tsx(93,17): error TS2322: Type 'string' is not assignable to type 'Date'.
@repo/frontend:typecheck: src/contexts/auth-context.tsx(124,47): error TS2339: Property 'post' does not exist on type '<T = unknown>(url: string, options?: RequestInit | undefined) => Promise<T>'.
@repo/frontend:typecheck: src/contexts/auth-context.tsx(152,46): error TS2339: Property 'post' does not exist on type '<T = unknown>(url: string, options?: RequestInit | undefined) => Promise<T>'.
@repo/frontend:typecheck: src/contexts/auth-context.tsx(176,23): error TS2339: Property 'post' does not exist on type '<T = unknown>(url: string, options?: RequestInit | undefined) => Promise<T>'.
@repo/frontend:typecheck: src/contexts/auth-context.tsx(200,45): error TS2339: Property 'post' does not exist on type '<T = unknown>(url: string, options?: RequestInit | undefined) => Promise<T>'.
@repo/frontend:typecheck: src/hooks/api/use-auth.ts(57,4): error TS2304: Cannot find name 'authApi'.
@repo/frontend:typecheck: src/hooks/api/use-auth.ts(85,4): error TS2304: Cannot find name 'authApi'.
@repo/frontend:typecheck: src/hooks/api/use-auth.ts(106,21): error TS2304: Cannot find name 'authApi'.
@repo/frontend:typecheck: src/hooks/api/use-auth.ts(132,4): error TS2304: Cannot find name 'authApi'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(192,5): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(197,5): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(208,6): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(254,5): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(259,5): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(276,6): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(356,5): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(361,5): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-billing.ts(375,6): error TS2304: Cannot find name 'billingKeys'.
@repo/frontend:typecheck: src/hooks/api/use-leases.ts(83,21): error TS2304: Cannot find name 'useOptimisticList'.
@repo/frontend:typecheck: src/hooks/api/use-leases.ts(84,56): error TS2339: Property 'property' does not exist on type '{ createdAt: string; endDate: string; id: string; rentAmount: number; securityDeposit: number; startDate: string; status: "DRAFT" | "ACTIVE" | "EXPIRED" | "TERMINATED"; tenantId: string; terms: string | null; unitId: string; updatedAt: string; }'.
@repo/frontend:typecheck: src/hooks/api/use-leases.ts(138,21): error TS2304: Cannot find name 'useOptimisticItem'.
@repo/frontend:typecheck: src/hooks/api/use-maintenance.ts(16,2): error TS2724: '"@repo/shared"' has no exported member named 'MaintenanceStatus'. Did you mean 'MaintenanceStats'?
@repo/frontend:typecheck: src/hooks/api/use-maintenance.ts(47,67): error TS2304: Cannot find name 'MaintenanceRequest'.
@repo/frontend:typecheck: src/hooks/api/use-maintenance.ts(50,28): error TS2304: Cannot find name 'MaintenanceRequest'.
@repo/frontend:typecheck: src/hooks/api/use-notifications.ts(4,15): error TS2724: '"@repo/shared"' has no exported member named 'MaintenancePriority'. Did you mean 'maintenancePrioritySchema'?
@repo/frontend:typecheck: src/hooks/api/use-notifications.ts(4,48): error TS2724: '"@repo/shared"' has no exported member named 'Notification'. Did you mean 'AppNotification'?
@repo/frontend:typecheck: src/hooks/api/use-notifications.ts(4,62): error TS2724: '"@repo/shared"' has no exported member named 'CreateNotificationRequest'. Did you mean 'CreateUnitRequest'?
@repo/frontend:typecheck: src/hooks/api/use-notifications.ts(75,4): error TS2304: Cannot find name 'notificationApi'.
@repo/frontend:typecheck: src/hooks/api/use-pdf.ts(24,23): error TS2339: Property 'pdf' does not exist on type '{ all: readonly ["tenantflow"]; auth: { all: () => readonly ["tenantflow", "auth"]; session: () => readonly ["tenantflow", "auth", "session"]; profile: () => readonly ["tenantflow", "auth", "profile"]; user: () => readonly ["tenantflow", "auth", "user"]; }; properties: { all: () => readonly ["tenantflow", "properties"]; lists: () => readonly ["tenantflow", "properties", "list"]; list: (params?: Record<string, unknown> | undefined) => readonly ["tenantflow", "properties", "list", Record<string, unknown> | undefined]; detail: (id: string) => readonly ["tenantflow", "properties", "detail", string]; stats: () => readonly ["tenantflow", "properties", "stats"]; units: (propertyId: string) => readonly ["tenantflow", "properties", string, "units"]; analytics: (propertyId: string) => readonly ["tenantflow", "properties", string, "analytics"]; maintenance: (propertyId: string) => readonly ["tenantflow", "properties", string, "maintenance"]; }; tenants: { all: () => readonly ["tenantflow", "tenants"]; lists: () => readonly ["tenantflow", "tenants", "list"]; list: (params?: Record<string, unknown> | undefined) => readonly ["tenantflow", "tenants", "list", Record<string, unknown> | undefined]; detail: (id: string) => readonly ["tenantflow", "tenants", "detail", string]; stats: () => readonly ["tenantflow", "tenants", "stats"]; byProperty: (propertyId: string) => readonly ["tenantflow", "tenants", "by-property", string]; lease: (tenantId: string) => readonly ["tenantflow", "tenants", string, "lease"]; payments: (tenantId: string) => readonly ["tenantflow", "tenants", string, "payments"]; documents: (tenantId: string) => readonly ["tenantflow", "tenants", string, "documents"]; maintenance: (tenantId: string) => readonly ["tenantflow", "tenants", string, "maintenance"]; }; units: { all: () => readonly ["tenantflow", "units"]; lists: () => readonly ["tenantflow", "units", "list"]; list: (params?: Record<string, unknown> | undefined) => readonly ["tenantflow", "units", "list", Record<string, unknown> | undefined]; detail: (id: string) => readonly ["tenantflow", "units", "detail", string]; byProperty: (propertyId: string) => readonly ["tenantflow", "units", "by-property", string]; stats: () => readonly ["tenantflow", "units", "stats"]; }; leases: { all: () => readonly ["tenantflow", "leases"]; lists: () => readonly ["tenantflow", "leases", "list"]; list: (params?: Record<string, unknown> | undefined) => readonly ["tenantflow", "leases", "list", Record<string, unknown> | undefined]; detail: (id: string) => readonly ["tenantflow", "leases", "detail", string]; byProperty: (propertyId: string) => readonly ["tenantflow", "leases", "by-property", string]; byTenant: (tenantId: string) => readonly ["tenantflow", "leases", "by-tenant", string]; stats: () => readonly ["tenantflow", "leases", "stats"]; }; maintenance: { all: () => readonly ["tenantflow", "maintenance"]; lists: () => readonly ["tenantflow", "maintenance", "list"]; list: (params?: Record<string, unknown> | undefined) => readonly ["tenantflow", "maintenance", "list", Record<string, unknown> | undefined]; detail: (id: string) => readonly ["tenantflow", "maintenance", "detail", string]; stats: () => readonly ["tenantflow", "maintenance", "stats"]; byProperty: (propertyId: string) => readonly ["tenantflow", "maintenance", "by-property", string]; byTenant: (tenantId: string) => readonly ["tenantflow", "maintenance", "by-tenant", string]; }; dashboard: { all: () => readonly ["tenantflow", "dashboard"]; overview: () => readonly ["tenantflow", "dashboard", "overview"]; stats: () => readonly ["tenantflow", "dashboard", "stats"]; tasks: () => readonly ["tenantflow", "dashboard", "tasks"]; activity: () => readonly ["tenantflow", "dashboard", "activity"]; alerts: () => readonly ["tenantflow", "dashboard", "alerts"]; metrics: (period: string) => readonly ["tenantflow", "dashboard", "metrics", string]; }; billing: { all: () => readonly ["tenantflow", "billing"]; subscription: () => readonly ["tenantflow", "billing", "subscription"]; invoices: (limit?: number | undefined) => readonly ["tenantflow", "billing", "invoices", number | undefined]; paymentMethods: () => readonly ["tenantflow", "billing", "payment-methods"]; usage: () => readonly ["tenantflow", "billing", "usage"]; }; notifications: { all: () => readonly ["tenantflow", "notifications"]; unread: () => readonly ["tenantflow", "notifications", "unread"]; list: (params?: Record<string, unknown> | undefined) => readonly ["tenantflow", "notifications", "list", Record<string, unknown> | undefined]; }; }'.
@repo/frontend:typecheck: src/hooks/api/use-properties.ts(17,2): error TS2724: '"@repo/shared"' has no exported member named 'UpdatePropertyInput'. Did you mean 'PropertyInput'?
@repo/frontend:typecheck: src/hooks/api/use-properties.ts(89,21): error TS2304: Cannot find name 'useOptimisticList'.
@repo/frontend:typecheck: src/hooks/api/use-properties.ts(144,21): error TS2304: Cannot find name 'useOptimisticItem'.
@repo/frontend:typecheck: src/hooks/api/use-tenants.ts(14,2): error TS2305: Module '"@repo/shared"' has no exported member 'CreateTenantInput'.
@repo/frontend:typecheck: src/hooks/api/use-tenants.ts(15,2): error TS2724: '"@repo/shared"' has no exported member named 'UpdateTenantInput'. Did you mean 'UpdateUnitInput'?
@repo/frontend:typecheck: src/hooks/api/use-tenants.ts(72,21): error TS2304: Cannot find name 'useOptimisticList'.
@repo/frontend:typecheck: src/hooks/api/use-tenants.ts(73,49): error TS2339: Property 'firstName' does not exist on type '{ avatarUrl: string | null; createdAt: string; email: string; emergencyContact: string | null; id: string; name: string; phone: string | null; updatedAt: string; userId: string | null; }'.
@repo/frontend:typecheck: src/hooks/api/use-tenants.ts(73,81): error TS2339: Property 'lastName' does not exist on type '{ avatarUrl: string | null; createdAt: string; email: string; emergencyContact: string | null; id: string; name: string; phone: string | null; updatedAt: string; userId: string | null; }'.
@repo/frontend:typecheck: src/hooks/api/use-tenants.ts(127,21): error TS2304: Cannot find name 'useOptimisticItem'.
@repo/frontend:typecheck: src/hooks/api/use-units.ts(14,2): error TS2724: '"@repo/shared"' has no exported member named 'CreateUnitInput'. Did you mean 'UpdateUnitInput'?
@repo/frontend:typecheck: src/hooks/api/use-units.ts(83,21): error TS2304: Cannot find name 'useOptimisticList'.
@repo/frontend:typecheck: src/hooks/api/use-units.ts(138,21): error TS2304: Cannot find name 'useOptimisticItem'.
@repo/frontend:typecheck: src/hooks/common/use-form-state.ts(11,29): error TS2314: Generic type 'FormErrors' requires 1 type argument(s).
@repo/frontend:typecheck: src/hooks/common/use-form-state.ts(20,39): error TS2314: Generic type 'FormErrors' requires 1 type argument(s).
@repo/frontend:typecheck: src/hooks/common/use-form-state.ts(86,14): error TS7006: Parameter 'prev' implicitly has an 'any' type.
@repo/frontend:typecheck: src/hooks/index.ts(6,15): error TS2307: Cannot find module './use-tenants' or its corresponding type declarations.
@repo/frontend:typecheck: src/hooks/index.ts(9,15): error TS2307: Cannot find module './use-lease-management' or its corresponding type declarations.
@repo/frontend:typecheck: src/hooks/index.ts(16,15): error TS2307: Cannot find module './use-signup' or its corresponding type declarations.
@repo/frontend:typecheck: src/hooks/use-action-state-form.ts(65,56): error TS2769: No overload matches this call.
@repo/frontend:typecheck:   Overload 1 of 2, '(action: (state: FormState<unknown>) => FormState<unknown> | Promise<FormState<unknown>>, initialState: FormState<unknown>, permalink?: string | undefined): [state: ...]', gave the following error.
@repo/frontend:typecheck:     Argument of type '(prevState: FormState<T>, formData: FormData) => Promise<FormState<T>>' is not assignable to parameter of type '(state: FormState<unknown>) => FormState<unknown> | Promise<FormState<unknown>>'.
@repo/frontend:typecheck:       Target signature provides too few arguments. Expected 2 or more, but got 1.
@repo/frontend:typecheck:   Overload 2 of 2, '(action: (state: FormState<unknown>, payload: FormData) => FormState<unknown> | Promise<FormState<unknown>>, initialState: FormState<unknown>, permalink?: string | undefined): [state: ...]', gave the following error.
@repo/frontend:typecheck:     Argument of type '(prevState: FormState<T>, formData: FormData) => Promise<FormState<T>>' is not assignable to parameter of type '(state: FormState<unknown>, payload: FormData) => FormState<unknown> | Promise<FormState<unknown>>'.
@repo/frontend:typecheck:       Types of parameters 'prevState' and 'state' are incompatible.
@repo/frontend:typecheck:         Type 'FormState<unknown>' is not assignable to type 'FormState<T>'.
@repo/frontend:typecheck:           Type 'unknown' is not assignable to type 'T'.
@repo/frontend:typecheck:             'T' could be instantiated with an arbitrary type which could be unrelated to 'unknown'.
@repo/frontend:typecheck: src/hooks/use-action-state-form.ts(70,3): error TS2345: Argument of type '(currentState: FormState<unknown>, clearField: string) => { errors: { [x: string]: string[] | undefined; } | undefined; success: boolean; error?: string | undefined; message?: string | undefined; data?: unknown; }' is not assignable to parameter of type '(state: FormState<unknown>, action: string) => FormState<unknown>'.
@repo/frontend:typecheck:   Call signature return types '{ errors: { [x: string]: string[] | undefined; } | undefined; success: boolean; error?: string | undefined; message?: string | undefined; data?: unknown; }' and 'FormState<unknown>' are incompatible.
@repo/frontend:typecheck:     The types of 'errors' are incompatible between these types.
@repo/frontend:typecheck:       Type '{ [x: string]: string[] | undefined; } | undefined' is not assignable to type 'Record<string, string[]> | undefined'.
@repo/frontend:typecheck:         Type '{ [x: string]: string[] | undefined; }' is not assignable to type 'Record<string, string[]>'.
@repo/frontend:typecheck:           'string' index signatures are incompatible.
@repo/frontend:typecheck:             Type 'string[] | undefined' is not assignable to type 'string[]'.
@repo/frontend:typecheck:               Type 'undefined' is not assignable to type 'string[]'.
@repo/frontend:typecheck: src/hooks/use-action-state-form.ts(87,15): error TS2554: Expected 0 arguments, but got 1.
@repo/frontend:typecheck: src/hooks/use-action-state-form.ts(122,13): error TS2345: Argument of type '{}' is not assignable to parameter of type 'T'.
@repo/frontend:typecheck:   'T' could be instantiated with an arbitrary type which could be unrelated to '{}'.
@repo/frontend:typecheck: src/hooks/use-action-state-form.ts(135,3): error TS2322: Type 'FormState<unknown>' is not assignable to type 'FormState<T>'.
@repo/frontend:typecheck:   Type 'unknown' is not assignable to type 'T'.
@repo/frontend:typecheck:     'T' could be instantiated with an arbitrary type which could be unrelated to 'unknown'.
@repo/frontend:typecheck: src/hooks/use-edit-profile-data.ts(8,15): error TS2305: Module '"@repo/shared/types/auth"' has no exported member 'AuthFormState'.
@repo/frontend:typecheck: src/hooks/use-edit-profile-data.ts(9,15): error TS2305: Module '"@repo/shared"' has no exported member 'UpdateUserProfileInput'.
@repo/frontend:typecheck: src/hooks/use-posthog.ts(29,11): error TS2304: Cannot find name 'TenantFlowEvent'.
@repo/frontend:typecheck: src/hooks/use-property-deletion.ts(18,3): error TS2769: No overload matches this call.
@repo/frontend:typecheck:   Overload 1 of 2, '(action: (state: void) => void | Promise<void>, initialState: void, permalink?: string | undefined): [state: void, dispatch: () => void, isPending: boolean]', gave the following error.
@repo/frontend:typecheck:     Argument of type '(id: string) => Promise<void>' is not assignable to parameter of type '(state: void) => void | Promise<void>'.
@repo/frontend:typecheck:       Types of parameters 'id' and 'state' are incompatible.
@repo/frontend:typecheck:         Type 'void' is not assignable to type 'string'.
@repo/frontend:typecheck:   Overload 2 of 2, '(action: (state: void, payload: unknown) => void | Promise<void>, initialState: void, permalink?: string | undefined): [state: void, dispatch: (payload: unknown) => void, isPending: boolean]', gave the following error.
@repo/frontend:typecheck:     Argument of type '(id: string) => Promise<void>' is not assignable to parameter of type '(state: void, payload: unknown) => void | Promise<void>'.
@repo/frontend:typecheck:       Types of parameters 'id' and 'state' are incompatible.
@repo/frontend:typecheck:         Type 'void' is not assignable to type 'string'.
@repo/frontend:typecheck: src/hooks/use-property-deletion.ts(54,15): error TS2554: Expected 0 arguments, but got 1.
@repo/frontend:typecheck: src/hooks/use-property-deletion.ts(77,16): error TS2339: Property 'error' does not exist on type 'void'.
@repo/frontend:typecheck: src/hooks/use-property-deletion.ts(78,20): error TS2339: Property 'success' does not exist on type 'void'.
@repo/frontend:typecheck: src/hooks/use-property-form-server.ts(52,52): error TS2554: Expected 2 arguments, but got 3.
@repo/frontend:typecheck: src/hooks/use-property-form-server.ts(60,22): error TS2345: Argument of type '((formData: FormData) => Promise<{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }>) | ((prevState: FormState<unknown>, formData: FormData) => Promise<{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }>)' is not assignable to parameter of type '(prevState: ServerActionState, formData: FormData) => Promise<ServerActionState>'.
@repo/frontend:typecheck:   Type '(formData: FormData) => Promise<{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }>' is not assignable to type '(prevState: ServerActionState, formData: FormData) => Promise<ServerActionState>'.
@repo/frontend:typecheck:     Types of parameters 'formData' and 'prevState' are incompatible.
@repo/frontend:typecheck:       Type 'ServerActionState' is missing the following properties from type 'FormData': append, delete, get, getAll, and 7 more.
@repo/frontend:typecheck: src/hooks/use-property-tracking.ts(19,21): error TS2339: Property 'units' does not exist on type '{ address: string; city: string; createdAt: string; description: string | null; id: string; imageUrl: string | null; name: string; ownerId: string; propertyType: "OTHER" | "SINGLE_FAMILY" | "MULTI_UNIT" | "APARTMENT" | "COMMERCIAL" | "CONDO" | "TOWNHOUSE"; state: string; updatedAt: string; zipCode: string; }'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(59,24): error TS2339: Property 'event' does not exist on type 'PropertyEvent'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(63,24): error TS2339: Property 'propertyType' does not exist on type 'PropertyEvent'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(64,18): error TS2339: Property 'address' does not exist on type 'PropertyEvent'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(77,24): error TS2339: Property 'event' does not exist on type 'LeaseEvent'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(82,20): error TS2339: Property 'tenantId' does not exist on type 'LeaseEvent'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(83,23): error TS2339: Property 'leaseStatus' does not exist on type 'LeaseEvent'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(99,24): error TS2339: Property 'event' does not exist on type 'TenantEvent'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(104,24): error TS2339: Property 'tenantStatus' does not exist on type 'TenantEvent'.
@repo/frontend:typecheck: src/lib/analytics/business-events.ts(119,27): error TS2339: Property 'event' does not exist on type 'BusinessEvent'.
@repo/frontend:typecheck: src/lib/error-handling.ts(10,2): error TS2305: Module '"@repo/shared"' has no exported member 'AppError'.
@repo/frontend:typecheck: src/lib/error-handling.ts(11,2): error TS2305: Module '"@repo/shared"' has no exported member 'AuthError'.
@repo/frontend:typecheck: src/lib/error-handling.ts(12,2): error TS2305: Module '"@repo/shared"' has no exported member 'ValidationError'.
@repo/frontend:typecheck: src/lib/error-handling.ts(13,2): error TS2305: Module '"@repo/shared"' has no exported member 'NetworkError'.
@repo/frontend:typecheck: src/lib/error-handling.ts(14,2): error TS2305: Module '"@repo/shared"' has no exported member 'ServerError'.
@repo/frontend:typecheck: src/lib/error-handling.ts(15,2): error TS2724: '"@repo/shared"' has no exported member named 'BusinessError'. Did you mean 'BusinessErrorCode'?
@repo/frontend:typecheck: src/lib/error-handling.ts(16,2): error TS2305: Module '"@repo/shared"' has no exported member 'FileUploadError'.
@repo/frontend:typecheck: src/lib/error-handling.ts(17,2): error TS2305: Module '"@repo/shared"' has no exported member 'PaymentError'.
@repo/frontend:typecheck: src/lib/error-handling.ts(18,2): error TS2724: '"@repo/shared"' has no exported member named 'ErrorContext'. Did you mean 'ErrorLogContext'?
@repo/frontend:typecheck: src/lib/logger/index.ts(10,15): error TS2305: Module '"@repo/shared"' has no exported member 'ILogger'.
@repo/frontend:typecheck: src/lib/logger/index.ts(10,24): error TS2305: Module '"@repo/shared"' has no exported member 'LogContext'.
@repo/frontend:typecheck: src/lib/logger/index.ts(11,15): error TS2305: Module '"@repo/shared"' has no exported member 'LogContext'.
@repo/frontend:typecheck: src/lib/logger/logger.ts(1,15): error TS2305: Module '"@repo/shared"' has no exported member 'ILogger'.
@repo/frontend:typecheck: src/lib/logger/logger.ts(1,24): error TS2305: Module '"@repo/shared"' has no exported member 'LogContext'.
@repo/frontend:typecheck: src/lib/logger/logger.ts(1,36): error TS2305: Module '"@repo/shared"' has no exported member 'AnalyticsEvent'.
@repo/frontend:typecheck: src/lib/security/security.ts(236,33): error TS2345: Argument of type '"OWNER" | "MANAGER" | "TENANT"' is not assignable to parameter of type '"MANAGER" | "ADMIN"'.
@repo/frontend:typecheck:   Type '"OWNER"' is not assignable to type '"MANAGER" | "ADMIN"'.
@repo/frontend:typecheck: src/lib/stripe/webhook-handler.ts(15,7): error TS2724: '"./webhook-server-processor"' has no exported member named 'WebhookProcessor'. Did you mean 'webhookProcessors'?
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(35,27): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(57,6): error TS2339: Property 'previous_attributes' does not exist on type '{ object: unknown; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(73,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(82,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(91,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(110,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(139,27): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(162,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(189,27): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(211,6): error TS2339: Property 'previous_attributes' does not exist on type '{ object: unknown; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(221,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(248,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(263,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(289,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: src/lib/stripe/webhook-server-processor.ts(304,28): error TS2339: Property 'id' does not exist on type '{ type: string; data: { object: unknown; }; }'.
@repo/frontend:typecheck: npm error Lifecycle script `typecheck` failed with error:
@repo/frontend:typecheck: npm error code 2
@repo/frontend:typecheck: npm error path /Users/richard/Developer/tenant-flow/apps/frontend
@repo/frontend:typecheck: npm error workspace @repo/frontend@0.1.0
@repo/frontend:typecheck: npm error location /Users/richard/Developer/tenant-flow/apps/frontend
@repo/frontend:typecheck: npm error command failed
@repo/frontend:typecheck: npm error command sh -c tsc --noEmit --noErrorTruncation
@repo/frontend:typecheck: ERROR: command finished with error: command (/Users/richard/Developer/tenant-flow/apps/frontend) /opt/homebrew/bin/npm run typecheck -- --noErrorTruncation exited (2)
@repo/frontend#typecheck: command (/Users/richard/Developer/tenant-flow/apps/frontend) /opt/homebrew/bin/npm run typecheck -- --noErrorTruncation exited (2)

 Tasks:    9 successful, 10 total
Cached:    9 cached, 10 total
  Time:    2.944s 
Failed:    @repo/frontend#typecheck

 ERROR  run failed: command  exited (2)
