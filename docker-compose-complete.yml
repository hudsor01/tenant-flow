# Complete Docker Compose for TenantFlow Lead Magnet System
# This includes n8n, PostgreSQL, NocoDB, Listmonk, and Ollama all on the same network

version: '3.8'

services:
  # PostgreSQL Database (shared by all services)
  postgres:
    image: postgres:15
    container_name: tenantflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/setup-databases.sql:/docker-entrypoint-initdb.d/setup-databases.sql
    ports:
      - "5432:5432"
    networks:
      - tenantflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # n8n Automation Platform
  n8n:
    image: n8nio/n8n:latest
    container_name: tenantflow-n8n
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - WEBHOOK_URL=${N8N_WEBHOOK_URL:-http://localhost:5678}
      - GENERIC_TIMEZONE=${TIMEZONE:-America/New_York}
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - tenantflow
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama AI for Content Generation
  ollama:
    image: ollama/ollama:latest
    container_name: tenantflow-ollama
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - tenantflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # NocoDB - Database Management UI
  nocodb:
    image: nocodb/nocodb:latest
    container_name: tenantflow-nocodb
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NC_DB: "pg://postgres:${POSTGRES_PASSWORD}@postgres:5432/nocodb"
      NC_AUTH_JWT_SECRET: "${JWT_SECRET}"
      NC_DISABLE_TELE: "true"
      NC_PUBLIC_URL: "${NOCODB_PUBLIC_URL:-http://localhost:8080}"
    ports:
      - "8080:8080"
    volumes:
      - nocodb_data:/usr/app/data
    networks:
      - tenantflow
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Listmonk - Email Marketing Platform
  listmonk:
    image: listmonk/listmonk:latest
    container_name: tenantflow-listmonk
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      LISTMONK_app__address: "0.0.0.0:9000"
      LISTMONK_db__host: "postgres"
      LISTMONK_db__port: "5432"
      LISTMONK_db__user: "postgres"
      LISTMONK_db__password: "${POSTGRES_PASSWORD}"
      LISTMONK_db__database: "listmonk"
      LISTMONK_db__ssl_mode: "disable"
      LISTMONK_app__admin_username: "${LISTMONK_ADMIN_USER:-admin}"
      LISTMONK_app__admin_password: "${LISTMONK_ADMIN_PASSWORD}"
    ports:
      - "9000:9000"
    volumes:
      - listmonk_data:/listmonk/uploads
    networks:
      - tenantflow
    command: ["./listmonk", "--install", "--yes", "--idempotent"]
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:9000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
  ollama_data:
    driver: local
  nocodb_data:
    driver: local
  listmonk_data:
    driver: local

networks:
  tenantflow:
    driver: bridge
    name: tenantflow_network