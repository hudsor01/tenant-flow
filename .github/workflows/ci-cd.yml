# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI/CD

on: [pull_request, push]

env:
  NODE_VERSION: '22'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Get pnpm cache directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Build and test in parallel
        env:
          BACKEND_SCHEMAS_DIR: ./supabase/schema-exports
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          # Run lint, typecheck, and build in parallel to save time
          pnpm run lint &
          pnpm run typecheck &
          pnpm run build:ci &
          wait

          # Run tests after build completes
          pnpm run test:unit
  deploy-backend:
    if: github.ref == 'refs/heads/main'
    name: Deploy Backend
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Railway CLI
        run: npm i -g @railway/cli@3

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
        run: |
          if [ -z "$RAILWAY_PROJECT_ID" ]; then
            echo "Error: RAILWAY_PROJECT_ID secret is required"
            exit 1
          fi
          railway up --service tenantflow-backend
