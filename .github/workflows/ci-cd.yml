name: CI/CD Pipeline

# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  NODE_VERSION: '22'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Resolve Doppler config from repo variables (fallbacks)
        env:
          SECRET_DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
          SECRET_DOPPLER_PERSONAL_TOKEN: ${{ secrets.DOPPLER_PERSONAL_TOKEN }}
          VARS_DOPPLER_TOKEN: ${{ vars.DOPPLER_TOKEN }}
          VARS_DOPPLER_PERSONAL_TOKEN: ${{ vars.DOPPLER_PERSONAL_TOKEN }}
          SECRET_DOPPLER_PROJECT: ${{ secrets.DOPPLER_PROJECT }}
          SECRET_DOPPLER_CONFIG: ${{ secrets.DOPPLER_CONFIG }}
          SECRET_DOPPLER_ENVIRONMENT: ${{ secrets.DOPPLER_ENVIRONMENT }}
          VARS_DOPPLER_PROJECT: ${{ vars.DOPPLER_PROJECT }}
          VARS_DOPPLER_CONFIG: ${{ vars.DOPPLER_CONFIG }}
          VARS_DOPPLER_ENVIRONMENT: ${{ vars.DOPPLER_ENVIRONMENT }}
        run: |
          echo "DOPPLER_TOKEN=${SECRET_DOPPLER_TOKEN:-$VARS_DOPPLER_TOKEN}" >> $GITHUB_ENV
          echo "DOPPLER_PERSONAL_TOKEN=${SECRET_DOPPLER_PERSONAL_TOKEN:-$VARS_DOPPLER_PERSONAL_TOKEN}" >> $GITHUB_ENV
          echo "DOPPLER_PROJECT=${SECRET_DOPPLER_PROJECT:-$VARS_DOPPLER_PROJECT}" >> $GITHUB_ENV
          echo "DOPPLER_CONFIG=${SECRET_DOPPLER_CONFIG:-$VARS_DOPPLER_CONFIG}" >> $GITHUB_ENV
          echo "DOPPLER_ENVIRONMENT=${SECRET_DOPPLER_ENVIRONMENT:-$VARS_DOPPLER_ENVIRONMENT}" >> $GITHUB_ENV

      - name: Authenticate with Doppler (service or personal token)
        run: |
          if [ -n "${DOPPLER_TOKEN}" ]; then
            echo "Using Doppler service token via DOPPLER_TOKEN"
          elif [ -n "${DOPPLER_PERSONAL_TOKEN}" ]; then
            echo "Logging into Doppler with personal token"
            doppler login --token "${DOPPLER_PERSONAL_TOKEN}" --silent
          else
            echo "Doppler Error: you must provide a token" 1>&2
            echo "Set 'DOPPLER_TOKEN' or 'DOPPLER_PERSONAL_TOKEN' in GitHub Actions secrets or variables" 1>&2
            exit 1
          fi

      - name: Clean install for cross-platform compatibility
        run: |
          rm -f package-lock.json
          npm cache clean --force
          npm install --no-audit

      - name: Build all packages (with proper dependencies and secrets)
        run: npm run build

      - name: Verify build outputs exist
        run: |
          echo "Checking shared package build outputs..."
          ls -la packages/shared/dist/cjs/ || echo "ERROR: Shared package dist not found"
          ls -la apps/backend/dist/ || echo "ERROR: Backend dist not found"
          echo "SUCCESS: Build verification complete"

      - name: Run tests
        continue-on-error: true
        env:
          CI: true
        run: npm run test:unit

      - name: Lint check
        continue-on-error: true
        run: npm run lint
