name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '22.x'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: hudson-dev

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-
      
      - name: Install dependencies
        run: |
          echo "ðŸ”§ Installing dependencies..."
          npm ci --prefer-offline --no-audit --fund=false
          echo "âœ… Dependencies installed"
      
      - name: Generate Prisma client
        run: |
          echo "ðŸ”§ Generating Prisma client..."
          npx turbo run generate --filter=@repo/database
          echo "âœ… Prisma client generated"
      
      - name: Lint and Type Check
        run: |
          echo "ðŸ”§ Running lint and type checks..."
          npx turbo run lint typecheck --parallel
          echo "âœ… Lint and type checks passed"
      
      - name: Build packages
        run: |
          echo "ðŸ”§ Building packages..."
          npx turbo build --filter=@repo/shared --filter=@repo/database
          echo "âœ… Shared packages built"
      
      - name: Build applications
        run: |
          echo "ðŸ”§ Building applications..."
          npx turbo build --filter=@repo/frontend --filter=@repo/backend --parallel
          echo "âœ… Applications built successfully"
      
      - name: Run unit tests
        run: |
          echo "ðŸ”§ Running unit tests..."
          npx turbo run test:unit --parallel
          echo "âœ… Unit tests passed"