name: Deployment Status Check

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *' # Every 30 minutes

env:
  VERCEL_FRONTEND_URL: https://tenantflow.app
  RAILWAY_BACKEND_URL: https://api.tenantflow.app

jobs:
  check-vercel:
    name: Check Vercel Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check Vercel Frontend Status
        run: |
          echo "🔍 Checking Vercel deployment at ${{ env.VERCEL_FRONTEND_URL }}"
          
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "${{ env.VERCEL_FRONTEND_URL }}")
          
          if [ "$RESPONSE" -eq 200 ]; then
            echo "✅ Vercel deployment is healthy (HTTP $RESPONSE)"
          else
            echo "⚠️ Vercel deployment returned HTTP $RESPONSE"
            exit 1
          fi

      - name: Check Vercel Health Endpoint
        run: |
          echo "🔍 Checking Vercel health endpoint"
          
          HEALTH_RESPONSE=$(curl -s "${{ env.VERCEL_FRONTEND_URL }}/api/health" || echo '{}')
          
          if echo "$HEALTH_RESPONSE" | grep -q "ok"; then
            echo "✅ Vercel health check passed"
          else
            echo "⚠️ Vercel health check did not return expected response"
            echo "Response: $HEALTH_RESPONSE"
          fi

  check-railway:
    name: Check Railway Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check Railway Backend Status
        run: |
          echo "🔍 Checking Railway deployment at ${{ env.RAILWAY_BACKEND_URL }}"
          
          # Try multiple endpoints to find a working one
          for endpoint in "/health/ping" "/health" "/api/v1/health" ""; do
            echo "  Testing endpoint: ${{ env.RAILWAY_BACKEND_URL }}$endpoint"
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "${{ env.RAILWAY_BACKEND_URL }}$endpoint" || echo "000")
            
            if [ "$RESPONSE" -eq 200 ]; then
              echo "✅ Railway deployment is healthy at $endpoint (HTTP $RESPONSE)"
              break
            else
              echo "  ↳ HTTP $RESPONSE"
            fi
          done
          
          if [ "$RESPONSE" -ne 200 ]; then
            echo "⚠️ Railway deployment health check failed (Last HTTP response: $RESPONSE)"
            echo "Note: The backend may not be deployed or may be using a different endpoint"
            # Don't fail the job - just warn
          fi

      - name: Check Railway Detailed Health
        continue-on-error: true
        run: |
          echo "🔍 Checking Railway detailed health"
          
          HEALTH_DATA=$(curl -s "${{ env.RAILWAY_BACKEND_URL }}/health" || echo '{}')
          
          if echo "$HEALTH_DATA" | grep -q '"status":"ok"'; then
            echo "✅ Railway health check passed"
            echo "Health data: $HEALTH_DATA"
          else
            echo "⚠️ Railway health check returned unexpected data"
            echo "Response: $HEALTH_DATA"
          fi

  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [check-vercel, check-railway]
    if: always()
    steps:
      - name: Generate Deployment Report
        run: |
          echo "## 🚀 Deployment Status Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Service | Status | URL |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|-----|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend (Vercel) | ${{ needs.check-vercel.result == 'success' && '✅ Healthy' || '❌ Unhealthy' }} | [${{ env.VERCEL_FRONTEND_URL }}](${{ env.VERCEL_FRONTEND_URL }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend (Railway) | ${{ needs.check-railway.result == 'success' && '✅ Healthy' || '❌ Unhealthy' }} |  [${{ env.RAILWAY_BACKEND_URL }}](${{ env.RAILWAY_BACKEND_URL }}) |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Last checked:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          
          # Exit with failure if any deployment is unhealthy
          if [[ "${{ needs.check-vercel.result }}" != "success" || "${{ needs.check-railway.result }}" != "success" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ **Action Required:** One or more deployments are unhealthy!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi