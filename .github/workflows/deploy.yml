name: deploy

on:
  workflow_call:
    inputs:
      node-version:
        type: string
        default: '22'
      pnpm-version:
        type: string
        default: '10.17.1'
      healthcheck-url:
        description: URL used to verify backend health
        type: string
        default: https://api.tenantflow.app/health
      vercel-environment:
        description: Vercel environment to target (production / preview)
        type: string
        default: production

permissions:
  contents: read

env:
  CI: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs['node-version'] }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Build frontend
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: pnpm build:frontend

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel configuration
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=${{ inputs.vercel-environment }}

      - name: Deploy frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel deploy --prebuilt --prod

      - name: Install Railway CLI
        run: npm install -g @railway/cli@latest

      - name: Deploy backend to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: railway up --service tenantflow-backend --environment production --detach

      - name: Wait for backend to become healthy
        run: |
          for i in {1..12}; do
            if curl -fsSL "${{ inputs.healthcheck-url }}" >/dev/null; then
              echo "Backend healthy."
              exit 0
            fi
            echo "Healthcheck attempt $i failed. Retrying in 10 seconds..."
            sleep 10
          done
          echo "Backend failed healthcheck."
          exit 1
