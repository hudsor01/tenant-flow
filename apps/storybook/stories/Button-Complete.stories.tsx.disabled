import type { Meta, StoryObj } from '@storybook/react';
import { Home, Settings, Download, Trash2, Plus, Heart } from 'lucide-react';
import { 
  Button, 
  ButtonGroup,
  IconButton,
  CTAButton,
  LoadingButton,
  SplitButton,
  FloatingActionButton 
} from '../../../apps/frontend/src/components/ui/button';

const meta: Meta<typeof Button> = {
  title: 'UI/Button System',
  component: Button,
  parameters: {
    layout: 'centered',
  },
  tags: ['autodocs'],
  argTypes: {
    variant: {
      control: { type: 'select' },
      options: ['default', 'destructive', 'outline', 'secondary', 'ghost', 'link', 'cta'],
    },
    size: {
      control: { type: 'select' },
      options: ['default', 'sm', 'lg', 'icon'],
    },
  },
};

export default meta;
type Story = StoryObj<typeof meta>;

// Basic Button Variants
export const AllVariants: Story = {
  render: () => (
    <div className="flex flex-wrap gap-4">
      <Button variant="default">Default</Button>
      <Button variant="destructive">Destructive</Button>
      <Button variant="outline">Outline</Button>
      <Button variant="secondary">Secondary</Button>
      <Button variant="ghost">Ghost</Button>
      <Button variant="link">Link</Button>
      <Button variant="cta">Call to Action</Button>
    </div>
  ),
};

// Button Sizes
export const AllSizes: Story = {
  render: () => (
    <div className="flex items-center gap-4">
      <Button size="sm">Small</Button>
      <Button size="default">Default</Button>
      <Button size="lg">Large</Button>
    </div>
  ),
};

// Buttons with Icons
export const WithIcons: Story = {
  render: () => (
    <div className="space-y-4">
      <div className="flex gap-4">
        <Button leftIcon={<Home className="h-4 w-4" />}>Home</Button>
        <Button rightIcon={<Download className="h-4 w-4" />}>Download</Button>
        <Button 
          leftIcon={<Settings className="h-4 w-4" />}
          rightIcon={<Plus className="h-4 w-4" />}
        >
          Both Icons
        </Button>
      </div>
    </div>
  ),
};

// Loading States
export const LoadingStates: Story = {
  render: () => (
    <div className="space-y-4">
      <div className="flex gap-4">
        <Button loading>Loading...</Button>
        <Button loading loadingText="Processing">Submit</Button>
        <LoadingButton loading loadingVariant="spinner">Spinner</LoadingButton>
        <LoadingButton loading loadingVariant="dots">Dots</LoadingButton>
        <LoadingButton loading loadingVariant="shimmer">Shimmer</LoadingButton>
      </div>
    </div>
  ),
};

// Icon Buttons
export const IconButtons: Story = {
  render: () => (
    <div className="flex gap-4">
      <IconButton icon={<Home />} label="Home" />
      <IconButton icon={<Settings />} label="Settings" variant="outline" />
      <IconButton icon={<Trash2 />} label="Delete" variant="destructive" />
      <IconButton icon={<Heart />} label="Like" animate rotate />
    </div>
  ),
};

// CTA Buttons
export const CTAButtons: Story = {
  render: () => (
    <div className="space-y-4">
      <div className="flex gap-4">
        <CTAButton>Get Started</CTAButton>
        <CTAButton priority="secondary">Learn More</CTAButton>
        <CTAButton glow>Premium CTA</CTAButton>
        <CTAButton pulse>Limited Time</CTAButton>
      </div>
    </div>
  ),
};

// Button Groups
export const ButtonGroups: Story = {
  render: () => (
    <div className="space-y-6">
      <div>
        <h3 className="text-sm font-medium mb-3">Horizontal Group</h3>
        <ButtonGroup>
          <Button variant="outline">Left</Button>
          <Button variant="outline">Center</Button>
          <Button variant="outline">Right</Button>
        </ButtonGroup>
      </div>
      
      <div>
        <h3 className="text-sm font-medium mb-3">Attached Group</h3>
        <ButtonGroup attach>
          <Button variant="outline">Properties</Button>
          <Button variant="outline">Tenants</Button>
          <Button variant="outline">Reports</Button>
        </ButtonGroup>
      </div>
      
      <div>
        <h3 className="text-sm font-medium mb-3">Vertical Group</h3>
        <ButtonGroup orientation="vertical">
          <Button variant="outline">Top</Button>
          <Button variant="outline">Middle</Button>
          <Button variant="outline">Bottom</Button>
        </ButtonGroup>
      </div>
    </div>
  ),
};

// Split Button
export const SplitButtons: Story = {
  render: () => (
    <div className="flex gap-4">
      <SplitButton
        mainAction={{
          label: "Save Property",
          onClick: () => alert("Property saved!")
        }}
        dropdownActions={[
          { label: "Save & Add Another", onClick: () => alert("Save & add another") },
          { label: "Save as Draft", onClick: () => alert("Saved as draft") },
          { label: "Delete", onClick: () => alert("Deleted"), destructive: true },
        ]}
      />
      
      <SplitButton
        variant="outline"
        mainAction={{
          label: "Export",
          onClick: () => alert("Exporting...")
        }}
        dropdownActions={[
          { label: "Export as PDF", onClick: () => alert("PDF export") },
          { label: "Export as CSV", onClick: () => alert("CSV export") },
          { label: "Email Report", onClick: () => alert("Email sent") },
        ]}
      />
    </div>
  ),
};

// Floating Action Button
export const FloatingActionButtons: Story = {
  render: () => (
    <div className="relative h-96 w-full bg-gray-50 rounded-lg overflow-hidden">
      <p className="p-4 text-sm text-gray-600">Floating action buttons are positioned relative to this container</p>
      
      <FloatingActionButton 
        position="bottom-right"
        className="!absolute"
      >
        <Plus className="h-6 w-6" />
      </FloatingActionButton>
      
      <FloatingActionButton 
        position="bottom-left"
        variant="secondary"
        className="!absolute"
      >
        <Home className="h-6 w-6" />
      </FloatingActionButton>
    </div>
  ),
};

// TenantFlow Real Examples
export const TenantFlowExamples: Story = {
  render: () => (
    <div className="space-y-6">
      <div>
        <h3 className="text-lg font-semibold mb-3">Property Management Actions</h3>
        <div className="flex flex-wrap gap-3">
          <CTAButton leftIcon={<Plus />}>Add Property</CTAButton>
          <Button variant="outline" leftIcon={<Home />}>View Details</Button>
          <Button variant="secondary" leftIcon={<Settings />}>Settings</Button>
          <Button variant="destructive" leftIcon={<Trash2 />}>Delete</Button>
        </div>
      </div>

      <div>
        <h3 className="text-lg font-semibold mb-3">Tenant Actions</h3>
        <div className="flex flex-wrap gap-3">
          <Button variant="cta">Pay Rent</Button>
          <Button variant="outline">View Lease</Button>
          <Button variant="secondary">Contact Landlord</Button>
          <Button variant="destructive">Report Emergency</Button>
        </div>
      </div>

      <div>
        <h3 className="text-lg font-semibold mb-3">Form Actions</h3>
        <div className="flex gap-3">
          <LoadingButton loading loadingText="Saving...">Save Changes</LoadingButton>
          <Button variant="outline">Cancel</Button>
          <Button variant="ghost">Reset</Button>
        </div>
      </div>

      <div>
        <h3 className="text-lg font-semibold mb-3">Dashboard Quick Actions</h3>
        <ButtonGroup attach>
          <Button variant="outline">Today</Button>
          <Button variant="outline">Week</Button>
          <Button variant="outline">Month</Button>
          <Button variant="default">All Time</Button>
        </ButtonGroup>
      </div>
    </div>
  ),
};

// Interactive Playground
export const Playground: Story = {
  args: {
    children: 'Click me!',
    variant: 'default',
    size: 'default',
    loading: false,
    disabled: false,
    animate: true,
  },
};