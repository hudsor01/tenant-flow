import type { Meta, StoryObj } from '@storybook/react';
import { 
  MiniBarChart, 
  MiniBarChartSkeleton, 
  formatOccupancyData, 
  formatFinancialData 
} from '../../frontend/src/components/charts/mini-bar-chart';

const meta: Meta<typeof MiniBarChart> = {
  title: 'TenantFlow/Charts/MiniBarChart',
  component: MiniBarChart,
  parameters: {
    layout: 'padded',
    docs: {
      description: {
        component: 'Compact bar chart component for displaying small datasets with customizable colors, tooltips, and dimensions. Perfect for dashboard widgets and inline metrics.',
      },
    },
  },
  tags: ['autodocs'],
  argTypes: {
    width: {
      control: { type: 'text' },
      description: 'Chart width (number in pixels or CSS string)',
    },
    height: {
      control: { type: 'number', min: 20, max: 200 },
      description: 'Chart height in pixels',
    },
    showTooltip: {
      control: { type: 'boolean' },
      description: 'Show tooltip on hover',
    },
    barRadius: {
      control: { type: 'number', min: 0, max: 10 },
      description: 'Border radius of bars',
    },
    spacing: {
      control: { type: 'number', min: 0, max: 20 },
      description: 'Spacing between bars',
    },
  },
};

export default meta;
type Story = StoryObj<typeof meta>;

// Sample data for different use cases
const occupancyData = [
  { name: 'Occupied', value: 85, color: 'hsl(var(--chart-1))' },
  { name: 'Vacant', value: 12, color: 'hsl(var(--chart-2))' },
  { name: 'Maintenance', value: 3, color: 'hsl(var(--chart-4))' },
];

const revenueData = [
  { name: 'Jan', value: 24500 },
  { name: 'Feb', value: 26200 },
  { name: 'Mar', value: 23800 },
  { name: 'Apr', value: 28100 },
  { name: 'May', value: 29500 },
  { name: 'Jun', value: 31200 },
];

const propertyTypeData = [
  { name: 'Apartments', value: 45, color: '#3b82f6' },
  { name: 'Houses', value: 28, color: '#10b981' },
  { name: 'Condos', value: 18, color: '#f59e0b' },
  { name: 'Commercial', value: 9, color: '#8b5cf6' },
];

const maintenanceData = [
  { name: 'Open', value: 12, color: '#ef4444' },
  { name: 'In Progress', value: 8, color: '#f59e0b' },
  { name: 'Completed', value: 35, color: '#10b981' },
];

// Basic occupancy chart
export const OccupancyChart: Story = {
  args: {
    data: occupancyData,
    height: 80,
    showTooltip: true,
  },
};

// Revenue trend chart
export const RevenueTrend: Story = {
  args: {
    data: revenueData,
    height: 100,
    showTooltip: true,
    barRadius: 3,
    spacing: 6,
  },
};

// Property type distribution
export const PropertyTypes: Story = {
  args: {
    data: propertyTypeData,
    height: 120,
    width: 300,
    showTooltip: true,
    barRadius: 4,
  },
};

// Maintenance requests status
export const MaintenanceStatus: Story = {
  args: {
    data: maintenanceData,
    height: 60,
    showTooltip: true,
    barRadius: 2,
    spacing: 8,
  },
};

// Small dashboard widget size
export const SmallWidget: Story = {
  args: {
    data: occupancyData,
    height: 40,
    width: 150,
    showTooltip: false,
    barRadius: 1,
    spacing: 2,
  },
};

// Large detailed view
export const LargeView: Story = {
  args: {
    data: revenueData,
    height: 200,
    width: 500,
    showTooltip: true,
    barRadius: 6,
    spacing: 10,
  },
};

// Single data point
export const SingleBar: Story = {
  args: {
    data: [{ name: 'Occupancy', value: 87, color: 'hsl(var(--chart-1))' }],
    height: 60,
    showTooltip: true,
  },
};

// Many data points
export const ManyBars: Story = {
  args: {
    data: Array.from({ length: 12 }, (_, i) => ({
      name: `Month ${i + 1}`,
      value: Math.floor(Math.random() * 10000) + 15000,
    })),
    height: 80,
    width: 400,
    showTooltip: true,
    spacing: 2,
  },
};

// Zero values
export const ZeroValues: Story = {
  args: {
    data: [
      { name: 'Occupied', value: 0 },
      { name: 'Vacant', value: 0 },
      { name: 'Maintenance', value: 0 },
    ],
    height: 60,
    showTooltip: true,
  },
};

// Loading skeleton
export const LoadingSkeleton: Story = {
  render: () => (
    <div className="space-y-4">
      <MiniBarChartSkeleton height={80} />
      <MiniBarChartSkeleton height={60} className="w-64" />
      <MiniBarChartSkeleton height={100} className="w-96" />
    </div>
  ),
};

// Helper functions demonstration
export const HelperFunctions: Story = {
  render: () => (
    <div className="space-y-6">
      <div>
        <h3 className="text-lg font-semibold mb-2">Occupancy Data (formatOccupancyData)</h3>
        <MiniBarChart
          data={formatOccupancyData({
            'Occupied': 45,
            'Vacant': 8,
            'Maintenance': 2,
            'Under Renovation': 1,
          })}
          height={80}
          showTooltip={true}
        />
      </div>
      
      <div>
        <h3 className="text-lg font-semibold mb-2">Financial Data (formatFinancialData)</h3>
        <MiniBarChart
          data={formatFinancialData([
            { label: 'Rent', amount: 125000 },
            { label: 'Utilities', amount: 15000 },
            { label: 'Maintenance', amount: 8500 },
            { label: 'Insurance', amount: 4200 },
          ])}
          height={100}
          showTooltip={true}
        />
      </div>
    </div>
  ),
};

// Dashboard integration examples
export const DashboardWidgets: Story = {
  render: () => (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4">
      {/* Property Occupancy Widget */}
      <div className="bg-white p-4 rounded-lg shadow">
        <h4 className="text-sm font-medium text-gray-900 mb-2">Property Occupancy</h4>
        <MiniBarChart
          data={occupancyData}
          height={60}
          showTooltip={true}
        />
        <p className="text-xs text-gray-500 mt-2">85% occupancy rate</p>
      </div>

      {/* Revenue Trend Widget */}
      <div className="bg-white p-4 rounded-lg shadow">
        <h4 className="text-sm font-medium text-gray-900 mb-2">Monthly Revenue</h4>
        <MiniBarChart
          data={revenueData.slice(-6)}
          height={60}
          showTooltip={true}
          barRadius={2}
        />
        <p className="text-xs text-gray-500 mt-2">+12% vs last month</p>
      </div>

      {/* Maintenance Status Widget */}
      <div className="bg-white p-4 rounded-lg shadow">
        <h4 className="text-sm font-medium text-gray-900 mb-2">Maintenance Requests</h4>
        <MiniBarChart
          data={maintenanceData}
          height={60}
          showTooltip={true}
        />
        <p className="text-xs text-gray-500 mt-2">12 requests pending</p>
      </div>
    </div>
  ),
};