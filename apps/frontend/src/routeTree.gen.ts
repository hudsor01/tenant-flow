/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as BlogRouteImport } from './routes/blog'
import { Route as AboutRouteImport } from './routes/about'
import { Route as TenantPortalRouteImport } from './routes/_tenant-portal'
import { Route as PublicRouteImport } from './routes/_public'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogIndexRouteImport } from './routes/blog/index'
import { Route as ToolsLeaseGeneratorRouteImport } from './routes/tools/lease-generator'
import { Route as ToolsInvoiceGeneratorRouteImport } from './routes/tools/invoice-generator'
import { Route as PricingInstantTrialRouteImport } from './routes/pricing/instant-trial'
import { Route as BlogSlugRouteImport } from './routes/blog.$slug'
import { Route as AuthUpdatePasswordRouteImport } from './routes/auth/update-password'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as AuthSignupRouteImport } from './routes/auth/Signup'
import { Route as TenantPortalTenantMaintenanceRouteImport } from './routes/_tenant-portal/tenant-maintenance'
import { Route as TenantPortalTenantDashboardRouteImport } from './routes/_tenant-portal/tenant-dashboard'
import { Route as TenantPortalLeaseRouteImport } from './routes/_tenant-portal/lease'
import { Route as TenantPortalDocumentsRouteImport } from './routes/_tenant-portal/documents'
import { Route as AuthenticatedTenantsRouteImport } from './routes/_authenticated/tenants'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedReportsRouteImport } from './routes/_authenticated/reports'
import { Route as AuthenticatedPropertiesRouteImport } from './routes/_authenticated/properties'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedNotificationsRouteImport } from './routes/_authenticated/notifications'
import { Route as AuthenticatedMaintenanceRouteImport } from './routes/_authenticated/maintenance'
import { Route as AuthenticatedLeasesRouteImport } from './routes/_authenticated/leases'
import { Route as AuthenticatedLeaseGeneratorRouteImport } from './routes/_authenticated/lease-generator'
import { Route as AuthenticatedGetStartedRouteImport } from './routes/_authenticated/get-started'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as ToolsLeaseGeneratorStateRouteImport } from './routes/tools/lease-generator.$state'
import { Route as AuthenticatedTenantsTenantIdRouteImport } from './routes/_authenticated/tenants.$tenantId'
import { Route as AuthenticatedPropertiesPropertyIdRouteImport } from './routes/_authenticated/properties.$propertyId'

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const TenantPortalRoute = TenantPortalRouteImport.update({
  id: '/_tenant-portal',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BlogRoute,
} as any)
const ToolsLeaseGeneratorRoute = ToolsLeaseGeneratorRouteImport.update({
  id: '/tools/lease-generator',
  path: '/tools/lease-generator',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsInvoiceGeneratorRoute = ToolsInvoiceGeneratorRouteImport.update({
  id: '/tools/invoice-generator',
  path: '/tools/invoice-generator',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingInstantTrialRoute = PricingInstantTrialRouteImport.update({
  id: '/instant-trial',
  path: '/instant-trial',
  getParentRoute: () => PricingRoute,
} as any)
const BlogSlugRoute = BlogSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => BlogRoute,
} as any)
const AuthUpdatePasswordRoute = AuthUpdatePasswordRouteImport.update({
  id: '/auth/update-password',
  path: '/auth/update-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/Signup',
  path: '/auth/Signup',
  getParentRoute: () => rootRouteImport,
} as any)
const TenantPortalTenantMaintenanceRoute =
  TenantPortalTenantMaintenanceRouteImport.update({
    id: '/tenant-maintenance',
    path: '/tenant-maintenance',
    getParentRoute: () => TenantPortalRoute,
  } as any)
const TenantPortalTenantDashboardRoute =
  TenantPortalTenantDashboardRouteImport.update({
    id: '/tenant-dashboard',
    path: '/tenant-dashboard',
    getParentRoute: () => TenantPortalRoute,
  } as any)
const TenantPortalLeaseRoute = TenantPortalLeaseRouteImport.update({
  id: '/lease',
  path: '/lease',
  getParentRoute: () => TenantPortalRoute,
} as any)
const TenantPortalDocumentsRoute = TenantPortalDocumentsRouteImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => TenantPortalRoute,
} as any)
const AuthenticatedTenantsRoute = AuthenticatedTenantsRouteImport.update({
  id: '/tenants',
  path: '/tenants',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedReportsRoute = AuthenticatedReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedPropertiesRoute = AuthenticatedPropertiesRouteImport.update({
  id: '/properties',
  path: '/properties',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedNotificationsRoute =
  AuthenticatedNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedMaintenanceRoute =
  AuthenticatedMaintenanceRouteImport.update({
    id: '/maintenance',
    path: '/maintenance',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedLeasesRoute = AuthenticatedLeasesRouteImport.update({
  id: '/leases',
  path: '/leases',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedLeaseGeneratorRoute =
  AuthenticatedLeaseGeneratorRouteImport.update({
    id: '/lease-generator',
    path: '/lease-generator',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedGetStartedRoute = AuthenticatedGetStartedRouteImport.update({
  id: '/get-started',
  path: '/get-started',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const ToolsLeaseGeneratorStateRoute =
  ToolsLeaseGeneratorStateRouteImport.update({
    id: '/$state',
    path: '/$state',
    getParentRoute: () => ToolsLeaseGeneratorRoute,
  } as any)
const AuthenticatedTenantsTenantIdRoute =
  AuthenticatedTenantsTenantIdRouteImport.update({
    id: '/$tenantId',
    path: '/$tenantId',
    getParentRoute: () => AuthenticatedTenantsRoute,
  } as any)
const AuthenticatedPropertiesPropertyIdRoute =
  AuthenticatedPropertiesPropertyIdRouteImport.update({
    id: '/$propertyId',
    path: '/$propertyId',
    getParentRoute: () => AuthenticatedPropertiesRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRouteWithChildren
  '/contact': typeof ContactRoute
  '/pricing': typeof PricingRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/get-started': typeof AuthenticatedGetStartedRoute
  '/lease-generator': typeof AuthenticatedLeaseGeneratorRoute
  '/leases': typeof AuthenticatedLeasesRoute
  '/maintenance': typeof AuthenticatedMaintenanceRoute
  '/notifications': typeof AuthenticatedNotificationsRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/properties': typeof AuthenticatedPropertiesRouteWithChildren
  '/reports': typeof AuthenticatedReportsRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/tenants': typeof AuthenticatedTenantsRouteWithChildren
  '/documents': typeof TenantPortalDocumentsRoute
  '/lease': typeof TenantPortalLeaseRoute
  '/tenant-dashboard': typeof TenantPortalTenantDashboardRoute
  '/tenant-maintenance': typeof TenantPortalTenantMaintenanceRoute
  '/auth/Signup': typeof AuthSignupRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/update-password': typeof AuthUpdatePasswordRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/pricing/instant-trial': typeof PricingInstantTrialRoute
  '/tools/invoice-generator': typeof ToolsInvoiceGeneratorRoute
  '/tools/lease-generator': typeof ToolsLeaseGeneratorRouteWithChildren
  '/blog/': typeof BlogIndexRoute
  '/properties/$propertyId': typeof AuthenticatedPropertiesPropertyIdRoute
  '/tenants/$tenantId': typeof AuthenticatedTenantsTenantIdRoute
  '/tools/lease-generator/$state': typeof ToolsLeaseGeneratorStateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/pricing': typeof PricingRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/get-started': typeof AuthenticatedGetStartedRoute
  '/lease-generator': typeof AuthenticatedLeaseGeneratorRoute
  '/leases': typeof AuthenticatedLeasesRoute
  '/maintenance': typeof AuthenticatedMaintenanceRoute
  '/notifications': typeof AuthenticatedNotificationsRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/properties': typeof AuthenticatedPropertiesRouteWithChildren
  '/reports': typeof AuthenticatedReportsRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/tenants': typeof AuthenticatedTenantsRouteWithChildren
  '/documents': typeof TenantPortalDocumentsRoute
  '/lease': typeof TenantPortalLeaseRoute
  '/tenant-dashboard': typeof TenantPortalTenantDashboardRoute
  '/tenant-maintenance': typeof TenantPortalTenantMaintenanceRoute
  '/auth/Signup': typeof AuthSignupRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/update-password': typeof AuthUpdatePasswordRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/pricing/instant-trial': typeof PricingInstantTrialRoute
  '/tools/invoice-generator': typeof ToolsInvoiceGeneratorRoute
  '/tools/lease-generator': typeof ToolsLeaseGeneratorRouteWithChildren
  '/blog': typeof BlogIndexRoute
  '/properties/$propertyId': typeof AuthenticatedPropertiesPropertyIdRoute
  '/tenants/$tenantId': typeof AuthenticatedTenantsTenantIdRoute
  '/tools/lease-generator/$state': typeof ToolsLeaseGeneratorStateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_public': typeof PublicRoute
  '/_tenant-portal': typeof TenantPortalRouteWithChildren
  '/about': typeof AboutRoute
  '/blog': typeof BlogRouteWithChildren
  '/contact': typeof ContactRoute
  '/pricing': typeof PricingRouteWithChildren
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/get-started': typeof AuthenticatedGetStartedRoute
  '/_authenticated/lease-generator': typeof AuthenticatedLeaseGeneratorRoute
  '/_authenticated/leases': typeof AuthenticatedLeasesRoute
  '/_authenticated/maintenance': typeof AuthenticatedMaintenanceRoute
  '/_authenticated/notifications': typeof AuthenticatedNotificationsRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/properties': typeof AuthenticatedPropertiesRouteWithChildren
  '/_authenticated/reports': typeof AuthenticatedReportsRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/tenants': typeof AuthenticatedTenantsRouteWithChildren
  '/_tenant-portal/documents': typeof TenantPortalDocumentsRoute
  '/_tenant-portal/lease': typeof TenantPortalLeaseRoute
  '/_tenant-portal/tenant-dashboard': typeof TenantPortalTenantDashboardRoute
  '/_tenant-portal/tenant-maintenance': typeof TenantPortalTenantMaintenanceRoute
  '/auth/Signup': typeof AuthSignupRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/update-password': typeof AuthUpdatePasswordRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/pricing/instant-trial': typeof PricingInstantTrialRoute
  '/tools/invoice-generator': typeof ToolsInvoiceGeneratorRoute
  '/tools/lease-generator': typeof ToolsLeaseGeneratorRouteWithChildren
  '/blog/': typeof BlogIndexRoute
  '/_authenticated/properties/$propertyId': typeof AuthenticatedPropertiesPropertyIdRoute
  '/_authenticated/tenants/$tenantId': typeof AuthenticatedTenantsTenantIdRoute
  '/tools/lease-generator/$state': typeof ToolsLeaseGeneratorStateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/about'
    | '/blog'
    | '/contact'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/dashboard'
    | '/get-started'
    | '/lease-generator'
    | '/leases'
    | '/maintenance'
    | '/notifications'
    | '/profile'
    | '/properties'
    | '/reports'
    | '/settings'
    | '/tenants'
    | '/documents'
    | '/lease'
    | '/tenant-dashboard'
    | '/tenant-maintenance'
    | '/auth/Signup'
    | '/auth/callback'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/update-password'
    | '/blog/$slug'
    | '/pricing/instant-trial'
    | '/tools/invoice-generator'
    | '/tools/lease-generator'
    | '/blog/'
    | '/properties/$propertyId'
    | '/tenants/$tenantId'
    | '/tools/lease-generator/$state'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/about'
    | '/contact'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/dashboard'
    | '/get-started'
    | '/lease-generator'
    | '/leases'
    | '/maintenance'
    | '/notifications'
    | '/profile'
    | '/properties'
    | '/reports'
    | '/settings'
    | '/tenants'
    | '/documents'
    | '/lease'
    | '/tenant-dashboard'
    | '/tenant-maintenance'
    | '/auth/Signup'
    | '/auth/callback'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/update-password'
    | '/blog/$slug'
    | '/pricing/instant-trial'
    | '/tools/invoice-generator'
    | '/tools/lease-generator'
    | '/blog'
    | '/properties/$propertyId'
    | '/tenants/$tenantId'
    | '/tools/lease-generator/$state'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/_authenticated'
    | '/_public'
    | '/_tenant-portal'
    | '/about'
    | '/blog'
    | '/contact'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/_authenticated/dashboard'
    | '/_authenticated/get-started'
    | '/_authenticated/lease-generator'
    | '/_authenticated/leases'
    | '/_authenticated/maintenance'
    | '/_authenticated/notifications'
    | '/_authenticated/profile'
    | '/_authenticated/properties'
    | '/_authenticated/reports'
    | '/_authenticated/settings'
    | '/_authenticated/tenants'
    | '/_tenant-portal/documents'
    | '/_tenant-portal/lease'
    | '/_tenant-portal/tenant-dashboard'
    | '/_tenant-portal/tenant-maintenance'
    | '/auth/Signup'
    | '/auth/callback'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/update-password'
    | '/blog/$slug'
    | '/pricing/instant-trial'
    | '/tools/invoice-generator'
    | '/tools/lease-generator'
    | '/blog/'
    | '/_authenticated/properties/$propertyId'
    | '/_authenticated/tenants/$tenantId'
    | '/tools/lease-generator/$state'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  PublicRoute: typeof PublicRoute
  TenantPortalRoute: typeof TenantPortalRouteWithChildren
  AboutRoute: typeof AboutRoute
  BlogRoute: typeof BlogRouteWithChildren
  ContactRoute: typeof ContactRoute
  PricingRoute: typeof PricingRouteWithChildren
  PrivacyRoute: typeof PrivacyRoute
  TermsRoute: typeof TermsRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthUpdatePasswordRoute: typeof AuthUpdatePasswordRoute
  ToolsInvoiceGeneratorRoute: typeof ToolsInvoiceGeneratorRoute
  ToolsLeaseGeneratorRoute: typeof ToolsLeaseGeneratorRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_tenant-portal': {
      id: '/_tenant-portal'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TenantPortalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/'
      fullPath: '/blog/'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof BlogRoute
    }
    '/tools/lease-generator': {
      id: '/tools/lease-generator'
      path: '/tools/lease-generator'
      fullPath: '/tools/lease-generator'
      preLoaderRoute: typeof ToolsLeaseGeneratorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/invoice-generator': {
      id: '/tools/invoice-generator'
      path: '/tools/invoice-generator'
      fullPath: '/tools/invoice-generator'
      preLoaderRoute: typeof ToolsInvoiceGeneratorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing/instant-trial': {
      id: '/pricing/instant-trial'
      path: '/instant-trial'
      fullPath: '/pricing/instant-trial'
      preLoaderRoute: typeof PricingInstantTrialRouteImport
      parentRoute: typeof PricingRoute
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugRouteImport
      parentRoute: typeof BlogRoute
    }
    '/auth/update-password': {
      id: '/auth/update-password'
      path: '/auth/update-password'
      fullPath: '/auth/update-password'
      preLoaderRoute: typeof AuthUpdatePasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/Signup': {
      id: '/auth/Signup'
      path: '/auth/Signup'
      fullPath: '/auth/Signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_tenant-portal/tenant-maintenance': {
      id: '/_tenant-portal/tenant-maintenance'
      path: '/tenant-maintenance'
      fullPath: '/tenant-maintenance'
      preLoaderRoute: typeof TenantPortalTenantMaintenanceRouteImport
      parentRoute: typeof TenantPortalRoute
    }
    '/_tenant-portal/tenant-dashboard': {
      id: '/_tenant-portal/tenant-dashboard'
      path: '/tenant-dashboard'
      fullPath: '/tenant-dashboard'
      preLoaderRoute: typeof TenantPortalTenantDashboardRouteImport
      parentRoute: typeof TenantPortalRoute
    }
    '/_tenant-portal/lease': {
      id: '/_tenant-portal/lease'
      path: '/lease'
      fullPath: '/lease'
      preLoaderRoute: typeof TenantPortalLeaseRouteImport
      parentRoute: typeof TenantPortalRoute
    }
    '/_tenant-portal/documents': {
      id: '/_tenant-portal/documents'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof TenantPortalDocumentsRouteImport
      parentRoute: typeof TenantPortalRoute
    }
    '/_authenticated/tenants': {
      id: '/_authenticated/tenants'
      path: '/tenants'
      fullPath: '/tenants'
      preLoaderRoute: typeof AuthenticatedTenantsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/reports': {
      id: '/_authenticated/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof AuthenticatedReportsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/properties': {
      id: '/_authenticated/properties'
      path: '/properties'
      fullPath: '/properties'
      preLoaderRoute: typeof AuthenticatedPropertiesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/notifications': {
      id: '/_authenticated/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof AuthenticatedNotificationsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/maintenance': {
      id: '/_authenticated/maintenance'
      path: '/maintenance'
      fullPath: '/maintenance'
      preLoaderRoute: typeof AuthenticatedMaintenanceRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/leases': {
      id: '/_authenticated/leases'
      path: '/leases'
      fullPath: '/leases'
      preLoaderRoute: typeof AuthenticatedLeasesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/lease-generator': {
      id: '/_authenticated/lease-generator'
      path: '/lease-generator'
      fullPath: '/lease-generator'
      preLoaderRoute: typeof AuthenticatedLeaseGeneratorRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/get-started': {
      id: '/_authenticated/get-started'
      path: '/get-started'
      fullPath: '/get-started'
      preLoaderRoute: typeof AuthenticatedGetStartedRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/tools/lease-generator/$state': {
      id: '/tools/lease-generator/$state'
      path: '/$state'
      fullPath: '/tools/lease-generator/$state'
      preLoaderRoute: typeof ToolsLeaseGeneratorStateRouteImport
      parentRoute: typeof ToolsLeaseGeneratorRoute
    }
    '/_authenticated/tenants/$tenantId': {
      id: '/_authenticated/tenants/$tenantId'
      path: '/$tenantId'
      fullPath: '/tenants/$tenantId'
      preLoaderRoute: typeof AuthenticatedTenantsTenantIdRouteImport
      parentRoute: typeof AuthenticatedTenantsRoute
    }
    '/_authenticated/properties/$propertyId': {
      id: '/_authenticated/properties/$propertyId'
      path: '/$propertyId'
      fullPath: '/properties/$propertyId'
      preLoaderRoute: typeof AuthenticatedPropertiesPropertyIdRouteImport
      parentRoute: typeof AuthenticatedPropertiesRoute
    }
  }
}

interface AuthenticatedPropertiesRouteChildren {
  AuthenticatedPropertiesPropertyIdRoute: typeof AuthenticatedPropertiesPropertyIdRoute
}

const AuthenticatedPropertiesRouteChildren: AuthenticatedPropertiesRouteChildren =
  {
    AuthenticatedPropertiesPropertyIdRoute:
      AuthenticatedPropertiesPropertyIdRoute,
  }

const AuthenticatedPropertiesRouteWithChildren =
  AuthenticatedPropertiesRoute._addFileChildren(
    AuthenticatedPropertiesRouteChildren,
  )

interface AuthenticatedTenantsRouteChildren {
  AuthenticatedTenantsTenantIdRoute: typeof AuthenticatedTenantsTenantIdRoute
}

const AuthenticatedTenantsRouteChildren: AuthenticatedTenantsRouteChildren = {
  AuthenticatedTenantsTenantIdRoute: AuthenticatedTenantsTenantIdRoute,
}

const AuthenticatedTenantsRouteWithChildren =
  AuthenticatedTenantsRoute._addFileChildren(AuthenticatedTenantsRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedGetStartedRoute: typeof AuthenticatedGetStartedRoute
  AuthenticatedLeaseGeneratorRoute: typeof AuthenticatedLeaseGeneratorRoute
  AuthenticatedLeasesRoute: typeof AuthenticatedLeasesRoute
  AuthenticatedMaintenanceRoute: typeof AuthenticatedMaintenanceRoute
  AuthenticatedNotificationsRoute: typeof AuthenticatedNotificationsRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedPropertiesRoute: typeof AuthenticatedPropertiesRouteWithChildren
  AuthenticatedReportsRoute: typeof AuthenticatedReportsRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedTenantsRoute: typeof AuthenticatedTenantsRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedGetStartedRoute: AuthenticatedGetStartedRoute,
  AuthenticatedLeaseGeneratorRoute: AuthenticatedLeaseGeneratorRoute,
  AuthenticatedLeasesRoute: AuthenticatedLeasesRoute,
  AuthenticatedMaintenanceRoute: AuthenticatedMaintenanceRoute,
  AuthenticatedNotificationsRoute: AuthenticatedNotificationsRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedPropertiesRoute: AuthenticatedPropertiesRouteWithChildren,
  AuthenticatedReportsRoute: AuthenticatedReportsRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedTenantsRoute: AuthenticatedTenantsRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface TenantPortalRouteChildren {
  TenantPortalDocumentsRoute: typeof TenantPortalDocumentsRoute
  TenantPortalLeaseRoute: typeof TenantPortalLeaseRoute
  TenantPortalTenantDashboardRoute: typeof TenantPortalTenantDashboardRoute
  TenantPortalTenantMaintenanceRoute: typeof TenantPortalTenantMaintenanceRoute
}

const TenantPortalRouteChildren: TenantPortalRouteChildren = {
  TenantPortalDocumentsRoute: TenantPortalDocumentsRoute,
  TenantPortalLeaseRoute: TenantPortalLeaseRoute,
  TenantPortalTenantDashboardRoute: TenantPortalTenantDashboardRoute,
  TenantPortalTenantMaintenanceRoute: TenantPortalTenantMaintenanceRoute,
}

const TenantPortalRouteWithChildren = TenantPortalRoute._addFileChildren(
  TenantPortalRouteChildren,
)

interface BlogRouteChildren {
  BlogSlugRoute: typeof BlogSlugRoute
  BlogIndexRoute: typeof BlogIndexRoute
}

const BlogRouteChildren: BlogRouteChildren = {
  BlogSlugRoute: BlogSlugRoute,
  BlogIndexRoute: BlogIndexRoute,
}

const BlogRouteWithChildren = BlogRoute._addFileChildren(BlogRouteChildren)

interface PricingRouteChildren {
  PricingInstantTrialRoute: typeof PricingInstantTrialRoute
}

const PricingRouteChildren: PricingRouteChildren = {
  PricingInstantTrialRoute: PricingInstantTrialRoute,
}

const PricingRouteWithChildren =
  PricingRoute._addFileChildren(PricingRouteChildren)

interface ToolsLeaseGeneratorRouteChildren {
  ToolsLeaseGeneratorStateRoute: typeof ToolsLeaseGeneratorStateRoute
}

const ToolsLeaseGeneratorRouteChildren: ToolsLeaseGeneratorRouteChildren = {
  ToolsLeaseGeneratorStateRoute: ToolsLeaseGeneratorStateRoute,
}

const ToolsLeaseGeneratorRouteWithChildren =
  ToolsLeaseGeneratorRoute._addFileChildren(ToolsLeaseGeneratorRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  PublicRoute: PublicRoute,
  TenantPortalRoute: TenantPortalRouteWithChildren,
  AboutRoute: AboutRoute,
  BlogRoute: BlogRouteWithChildren,
  ContactRoute: ContactRoute,
  PricingRoute: PricingRouteWithChildren,
  PrivacyRoute: PrivacyRoute,
  TermsRoute: TermsRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthUpdatePasswordRoute: AuthUpdatePasswordRoute,
  ToolsInvoiceGeneratorRoute: ToolsInvoiceGeneratorRoute,
  ToolsLeaseGeneratorRoute: ToolsLeaseGeneratorRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
