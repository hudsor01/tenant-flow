{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/config.ts"],"sourcesContent":["/**\n * Application configuration\n * Centralized configuration for the TenantFlow frontend\n */\n\nexport const config = {\n  api: {\n    baseURL: process.env.NEXT_PUBLIC_API_URL || 'https://api.tenantflow.app/api/v1',\n    timeout: 30000,\n  },\n  supabase: {\n    url: process.env.NEXT_PUBLIC_SUPABASE_URL || '',\n    anonKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '',\n  },\n  stripe: {\n    publishableKey: process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY || '',\n  },\n  analytics: {\n    posthogKey: process.env.NEXT_PUBLIC_POSTHOG_KEY || '',\n    posthogHost: process.env.NEXT_PUBLIC_POSTHOG_HOST || '',\n  },\n  app: {\n    env: process.env.NEXT_PUBLIC_APP_ENV || 'development',\n    version: process.env.NEXT_PUBLIC_APP_VERSION || '1.0.0',\n    name: 'TenantFlow',\n  },\n  features: {\n    analytics: process.env.NEXT_PUBLIC_ENABLE_ANALYTICS === 'true',\n    errorReporting: process.env.NEXT_PUBLIC_ENABLE_ERROR_REPORTING === 'true',\n  },\n} as const;\n\n// Comprehensive environment validation\nconst requiredEnvVars = [\n  'NEXT_PUBLIC_SUPABASE_URL',\n  'NEXT_PUBLIC_SUPABASE_ANON_KEY', \n  'NEXT_PUBLIC_API_URL',\n  'NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY',\n  'NEXT_PUBLIC_POSTHOG_KEY',\n  'NEXT_PUBLIC_POSTHOG_HOST',\n] as const\n\nif (typeof window !== 'undefined') {\n  for (const envVar of requiredEnvVars) {\n    if (!process.env[envVar]) {\n      console.warn(`Missing required environment variable: ${envVar}`)\n    }\n  }\n}"],"names":[],"mappings":"AAAA;;;CAGC;;;AAEM,MAAM,SAAS;IACpB,KAAK;QACH,SAAS,yEAAmC;QAC5C,SAAS;IACX;IACA,UAAU;QACR,KAAK,gFAAwC;QAC7C,SAAS,wPAA6C;IACxD;IACA,QAAQ;QACN,gBAAgB,mJAAkD;IACpE;IACA,WAAW;QACT,YAAY,uFAAuC;QACnD,aAAa,gEAAwC;IACvD;IACA,KAAK;QACH,KAAK,kDAAmC;QACxC,SAAS,6CAAuC;QAChD,MAAM;IACR;IACA,UAAU;QACR,WAAW,6CAA6C;QACxD,gBAAgB,6CAAmD;IACrE;AACF;AAEA,uCAAuC;AACvC,MAAM,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;CACD;AAED","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/supabase.ts"],"sourcesContent":["/**\n * Supabase client configuration\n * Handles authentication and database connections\n */\nimport { createClient, type AuthChangeEvent, type Session } from '@supabase/supabase-js';\nimport { config } from './config';\n\nexport const supabase = createClient(\n  config.supabase.url,\n  config.supabase.anonKey,\n  {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true,\n      flowType: 'pkce',\n    },\n  }\n);\n\n// Auth helpers\nexport const auth = supabase.auth;\n\nexport interface AuthUser {\n  id: string;\n  email: string;\n  name?: string;\n  avatar_url?: string;\n}\n\n// Session management\nexport async function getSession() {\n  const { data: { session }, error } = await supabase.auth.getSession();\n  return { session, error };\n}\n\nexport async function getUser() {\n  const { data: { user }, error } = await supabase.auth.getUser();\n  return { user, error };\n}\n\n// Auth state helpers\nexport function onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void) {\n  return supabase.auth.onAuthStateChange(callback);\n}"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;AACD;AACA;;;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EACjC,wIAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,GAAG,EACnB,wIAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,EACvB;IACE,MAAM;QACJ,kBAAkB;QAClB,gBAAgB;QAChB,oBAAoB;QACpB,UAAU;IACZ;AACF;AAIK,MAAM,OAAO,SAAS,IAAI;AAU1B,eAAe;IACpB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IACnE,OAAO;QAAE;QAAS;IAAM;AAC1B;AAEO,eAAe;IACpB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAC7D,OAAO;QAAE;QAAM;IAAM;AACvB;AAGO,SAAS,kBAAkB,QAAmE;IACnG,OAAO,SAAS,IAAI,CAAC,iBAAiB,CAAC;AACzC","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/analytics/posthog-server.ts"],"sourcesContent":["'use server';\n\nimport { PostHog } from 'posthog-node';\nimport type { TenantFlowEvent } from '@/hooks/use-posthog';\n\n// Initialize PostHog for server-side tracking\nconst posthog = new PostHog(\n  process.env.NEXT_PUBLIC_POSTHOG_KEY!,\n  { \n    host: process.env.NEXT_PUBLIC_POSTHOG_HOST || 'https://us.i.posthog.com',\n    flushAt: 1, // Send immediately for server actions\n    flushInterval: 0, // Don't batch on server\n  }\n);\n\n/**\n * Track server-side events (for server actions, API routes)\n */\nexport async function trackServerSideEvent(\n  eventName: TenantFlowEvent,\n  userId?: string,\n  properties?: Record<string, unknown>\n): Promise<void> {\n  try {\n    if (!process.env.NEXT_PUBLIC_POSTHOG_KEY) {\n      console.warn('PostHog key not configured for server-side tracking');\n      return;\n    }\n\n    posthog.capture({\n      distinctId: userId || 'anonymous',\n      event: eventName,\n      properties: {\n        ...properties,\n        $lib: 'posthog-node',\n        $lib_version: '4.0.1',\n        environment: process.env.NODE_ENV,\n        timestamp: new Date().toISOString(),\n      },\n    });\n\n    // Ensure event is sent immediately\n    await posthog.flush();\n  } catch (error) {\n    console.error('Failed to track server-side event:', error);\n  }\n}\n\n/**\n * Identify user for server-side tracking\n */\nexport async function identifyUser(\n  userId: string,\n  properties: Record<string, unknown>\n): Promise<void> {\n  try {\n    if (!process.env.NEXT_PUBLIC_POSTHOG_KEY) {\n      return;\n    }\n\n    posthog.identify({\n      distinctId: userId,\n      properties: {\n        ...properties,\n        $set: properties, // Set user properties\n      },\n    });\n\n    await posthog.flush();\n  } catch (error) {\n    console.error('Failed to identify user server-side:', error);\n  }\n}\n\n/**\n * Shutdown PostHog client (for cleanup)\n */\nexport async function shutdownPostHog(): Promise<void> {\n  await posthog.shutdown();\n}"],"names":[],"mappings":";;;;;;AAEA;;;;AAGA,8CAA8C;AAC9C,MAAM,UAAU,IAAI,wJAAA,CAAA,UAAO,sFAEzB;IACE,MAAM,gEAAwC;IAC9C,SAAS;IACT,eAAe;AACjB;AAMK,eAAe,qBACpB,SAA0B,EAC1B,MAAe,EACf,UAAoC;IAEpC,IAAI;QACF;;QAKA,QAAQ,OAAO,CAAC;YACd,YAAY,UAAU;YACtB,OAAO;YACP,YAAY;gBACV,GAAG,UAAU;gBACb,MAAM;gBACN,cAAc;gBACd,WAAW;gBACX,WAAW,IAAI,OAAO,WAAW;YACnC;QACF;QAEA,mCAAmC;QACnC,MAAM,QAAQ,KAAK;IACrB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;IACtD;AACF;AAKO,eAAe,aACpB,MAAc,EACd,UAAmC;IAEnC,IAAI;QACF;;QAIA,QAAQ,QAAQ,CAAC;YACf,YAAY;YACZ,YAAY;gBACV,GAAG,UAAU;gBACb,MAAM;YACR;QACF;QAEA,MAAM,QAAQ,KAAK;IACrB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAwC;IACxD;AACF;AAKO,eAAe;IACpB,MAAM,QAAQ,QAAQ;AACxB;;;IA7DsB;IAiCA;IA0BA;;AA3DA,+OAAA;AAiCA,+OAAA;AA0BA,+OAAA","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/security/input-sanitization.ts"],"sourcesContent":["/**\n * Enterprise Input Sanitization and XSS Prevention\n * Comprehensive protection against injection attacks\n */\n\nimport DOMPurify from 'isomorphic-dompurify';\n\ninterface SanitizationConfig {\n  allowedTags: string[];\n  allowedAttributes: Record<string, string[]>;\n  allowedSchemes: string[];\n  forbiddenTags: string[];\n  forbiddenAttributes: string[];\n}\n\n// Default configuration for different contexts\nconst SANITIZATION_CONFIGS: Record<string, SanitizationConfig> = {\n  // Strict: No HTML allowed at all\n  strict: {\n    allowedTags: [],\n    allowedAttributes: {},\n    allowedSchemes: [],\n    forbiddenTags: ['script', 'object', 'embed', 'iframe', 'form', 'input', 'textarea'],\n    forbiddenAttributes: ['on*', 'javascript:', 'vbscript:', 'data:'],\n  },\n  \n  // Basic: Only basic formatting\n  basic: {\n    allowedTags: ['b', 'i', 'em', 'strong', 'p', 'br', 'span'],\n    allowedAttributes: {\n      '*': ['class'],\n    },\n    allowedSchemes: [],\n    forbiddenTags: ['script', 'object', 'embed', 'iframe', 'form', 'input', 'textarea', 'style'],\n    forbiddenAttributes: ['on*', 'javascript:', 'vbscript:', 'data:', 'style'],\n  },\n  \n  // Rich: Rich text editing (controlled)\n  rich: {\n    allowedTags: [\n      'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n      'p', 'br', 'span', 'div',\n      'b', 'i', 'u', 'em', 'strong',\n      'ul', 'ol', 'li',\n      'a', 'img',\n      'blockquote', 'code', 'pre',\n    ],\n    allowedAttributes: {\n      'a': ['href', 'title', 'target'],\n      'img': ['src', 'alt', 'title', 'width', 'height'],\n      '*': ['class'],\n    },\n    allowedSchemes: ['http', 'https', 'mailto'],\n    forbiddenTags: ['script', 'object', 'embed', 'iframe', 'form', 'input', 'textarea', 'style'],\n    forbiddenAttributes: ['on*', 'javascript:', 'vbscript:', 'data:'],\n  },\n};\n\n/**\n * Comprehensive XSS patterns for detection\n */\nconst XSS_PATTERNS = [\n  // Script injection\n  /<script[\\s\\S]*?>[\\s\\S]*?<\\/script>/gi,\n  /javascript:/gi,\n  /vbscript:/gi,\n  /on\\w+\\s*=/gi,\n  \n  // Data URLs with executable content\n  /data:text\\/html/gi,\n  /data:text\\/javascript/gi,\n  /data:application\\/javascript/gi,\n  \n  // Expression and CSS injection\n  /expression\\s*\\(/gi,\n  /behaviour\\s*:/gi,\n  /-moz-binding\\s*:/gi,\n  \n  // Common XSS vectors\n  /<iframe[\\s\\S]*?>/gi,\n  /<object[\\s\\S]*?>/gi,\n  /<embed[\\s\\S]*?>/gi,\n  /<form[\\s\\S]*?>/gi,\n  /<input[\\s\\S]*?>/gi,\n  /<textarea[\\s\\S]*?>/gi,\n  \n  // SVG XSS vectors\n  /<svg[\\s\\S]*?on\\w+[\\s\\S]*?>/gi,\n  \n  // Meta refresh redirects\n  /<meta[\\s\\S]*?http-equiv[\\s\\S]*?refresh/gi,\n];\n\n/**\n * SQL Injection patterns for detection\n */\nconst SQL_INJECTION_PATTERNS = [\n  /(\\b(union|select|insert|update|delete|drop|create|alter|exec|execute)\\b)/gi,\n  /(\\b(or|and)\\b\\s+\\d+\\s*=\\s*\\d+)/gi,\n  /(['\"])\\s*;\\s*(drop|delete|insert|update)/gi,\n  /(\\bor\\b\\s+['\"]?\\d+['\"]?\\s*=\\s*['\"]?\\d+['\"]?)/gi,\n  /(\\/\\*[\\s\\S]*?\\*\\/)/gi,\n  /(--\\s*[\\r\\n])/gi,\n];\n\n/**\n * Path traversal patterns\n */\nconst PATH_TRAVERSAL_PATTERNS = [\n  /\\.\\.[\\\\/]/g,\n  /~[\\\\/]/g,\n  /\\%2e\\%2e[\\\\/]/gi,\n  /\\%252e\\%252e[\\\\/]/gi,\n];\n\n/**\n * Command injection patterns\n */\nconst COMMAND_INJECTION_PATTERNS = [\n  /[;&|`$()]/g,\n  /\\b(cat|ls|pwd|id|whoami|uname|wget|curl|nc|netcat)\\b/gi,\n];\n\n/**\n * Sanitize HTML content using DOMPurify with custom configuration\n */\nexport function sanitizeHTML(\n  input: string,\n  profile: keyof typeof SANITIZATION_CONFIGS = 'basic'\n): string {\n  if (typeof input !== 'string' || !input.trim()) {\n    return '';\n  }\n  \n  const config = SANITIZATION_CONFIGS[profile];\n  \n  // Configure DOMPurify\n  const cleanConfig = {\n    ALLOWED_TAGS: config.allowedTags,\n    ALLOWED_ATTR: Object.keys(config.allowedAttributes).reduce((acc, tag) => {\n      return [...acc, ...config.allowedAttributes[tag]];\n    }, [] as string[]),\n    ALLOWED_URI_REGEXP: config.allowedSchemes.length > 0 \n      ? new RegExp(`^(?:${config.allowedSchemes.join('|')}):`, 'i')\n      : /^$/,\n    FORBID_TAGS: config.forbiddenTags,\n    FORBID_ATTR: config.forbiddenAttributes,\n    ALLOW_DATA_ATTR: false,\n    ALLOW_UNKNOWN_PROTOCOLS: false,\n    SANITIZE_DOM: true,\n    KEEP_CONTENT: true,\n  };\n  \n  return DOMPurify.sanitize(input, cleanConfig);\n}\n\n/**\n * Sanitize plain text (escape HTML entities)\n */\nexport function sanitizeText(input: string): string {\n  if (typeof input !== 'string') {\n    return '';\n  }\n  \n  return input\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n}\n\n/**\n * Sanitize URLs to prevent javascript: and data: schemes\n */\nexport function sanitizeURL(url: string): string {\n  if (typeof url !== 'string' || !url.trim()) {\n    return '';\n  }\n  \n  const trimmedUrl = url.trim();\n  \n  // Block dangerous schemes\n  const dangerousSchemes = /^(javascript|vbscript|data|file|ftp):/i;\n  if (dangerousSchemes.test(trimmedUrl)) {\n    return '';\n  }\n  \n  // Only allow http, https, mailto, and relative URLs\n  const allowedSchemes = /^(https?|mailto):/i;\n  const isRelative = /^[\\/\\.\\w-]/.test(trimmedUrl);\n  \n  if (!allowedSchemes.test(trimmedUrl) && !isRelative) {\n    return '';\n  }\n  \n  return encodeURI(decodeURI(trimmedUrl));\n}\n\n/**\n * Detect XSS attempts in input\n */\nexport function detectXSS(input: string): {\n  isXSS: boolean;\n  patterns: string[];\n  severity: 'low' | 'medium' | 'high';\n} {\n  if (typeof input !== 'string') {\n    return { isXSS: false, patterns: [], severity: 'low' };\n  }\n  \n  const detectedPatterns: string[] = [];\n  \n  for (const pattern of XSS_PATTERNS) {\n    const matches = input.match(pattern);\n    if (matches) {\n      detectedPatterns.push(pattern.source);\n    }\n  }\n  \n  const severity = detectedPatterns.length > 2 ? 'high' : \n                  detectedPatterns.length > 0 ? 'medium' : 'low';\n  \n  return {\n    isXSS: detectedPatterns.length > 0,\n    patterns: detectedPatterns,\n    severity,\n  };\n}\n\n/**\n * Detect SQL injection attempts\n */\nexport function detectSQLInjection(input: string): {\n  isSQLI: boolean;\n  patterns: string[];\n  severity: 'low' | 'medium' | 'high';\n} {\n  if (typeof input !== 'string') {\n    return { isSQLI: false, patterns: [], severity: 'low' };\n  }\n  \n  const detectedPatterns: string[] = [];\n  \n  for (const pattern of SQL_INJECTION_PATTERNS) {\n    const matches = input.match(pattern);\n    if (matches) {\n      detectedPatterns.push(pattern.source);\n    }\n  }\n  \n  const severity = detectedPatterns.length > 2 ? 'high' : \n                  detectedPatterns.length > 0 ? 'medium' : 'low';\n  \n  return {\n    isSQLI: detectedPatterns.length > 0,\n    patterns: detectedPatterns,\n    severity,\n  };\n}\n\n/**\n * Detect path traversal attempts\n */\nexport function detectPathTraversal(input: string): boolean {\n  if (typeof input !== 'string') {\n    return false;\n  }\n  \n  return PATH_TRAVERSAL_PATTERNS.some(pattern => pattern.test(input));\n}\n\n/**\n * Detect command injection attempts\n */\nexport function detectCommandInjection(input: string): boolean {\n  if (typeof input !== 'string') {\n    return false;\n  }\n  \n  return COMMAND_INJECTION_PATTERNS.some(pattern => pattern.test(input));\n}\n\n/**\n * Comprehensive input validation and sanitization\n */\nexport function validateAndSanitizeInput(\n  input: unknown,\n  options: {\n    type?: 'text' | 'html' | 'url' | 'email' | 'phone' | 'number';\n    maxLength?: number;\n    allowEmpty?: boolean;\n    htmlProfile?: keyof typeof SANITIZATION_CONFIGS;\n    strict?: boolean;\n  } = {}\n): {\n  valid: boolean;\n  sanitized: string;\n  errors: string[];\n  warnings: string[];\n} {\n  const {\n    type = 'text',\n    maxLength = 10000,\n    allowEmpty = false,\n    htmlProfile = 'basic',\n    strict = false\n  } = options;\n  \n  const errors: string[] = [];\n  const warnings: string[] = [];\n  let sanitized = '';\n  \n  // Type validation\n  if (typeof input !== 'string') {\n    if (input === null || input === undefined) {\n      if (!allowEmpty) {\n        errors.push('Input is required');\n      }\n      return { valid: allowEmpty, sanitized: '', errors, warnings };\n    } else {\n      input = String(input);\n    }\n  }\n  \n  const stringInput = input as string;\n  \n  // Length validation\n  if (stringInput.length > maxLength) {\n    errors.push(`Input exceeds maximum length of ${maxLength} characters`);\n    return { valid: false, sanitized: '', errors, warnings };\n  }\n  \n  if (!allowEmpty && stringInput.trim().length === 0) {\n    errors.push('Input cannot be empty');\n    return { valid: false, sanitized: '', errors, warnings };\n  }\n  \n  // Security checks\n  const xssCheck = detectXSS(stringInput);\n  const sqliCheck = detectSQLInjection(stringInput);\n  const pathTraversalCheck = detectPathTraversal(stringInput);\n  const commandInjectionCheck = detectCommandInjection(stringInput);\n  \n  if (strict) {\n    if (xssCheck.isXSS) {\n      errors.push('Potential XSS content detected');\n    }\n    if (sqliCheck.isSQLI) {\n      errors.push('Potential SQL injection detected');\n    }\n    if (pathTraversalCheck) {\n      errors.push('Path traversal attempt detected');\n    }\n    if (commandInjectionCheck) {\n      errors.push('Command injection attempt detected');\n    }\n  } else {\n    // Non-strict mode: warn but sanitize\n    if (xssCheck.isXSS && xssCheck.severity === 'high') {\n      warnings.push('Potentially malicious content was sanitized');\n    }\n    if (sqliCheck.isSQLI) {\n      warnings.push('SQL-like patterns were detected and sanitized');\n    }\n  }\n  \n  // Type-specific sanitization\n  switch (type) {\n    case 'html':\n      sanitized = sanitizeHTML(stringInput, htmlProfile);\n      break;\n    case 'url':\n      sanitized = sanitizeURL(stringInput);\n      break;\n    case 'email':\n      // Basic email sanitization (additional validation should be done with schema)\n      sanitized = sanitizeText(stringInput.toLowerCase().trim());\n      break;\n    case 'phone':\n      // Remove all non-numeric characters except +, spaces, hyphens, parentheses\n      sanitized = stringInput.replace(/[^\\d\\s\\-\\(\\)\\+]/g, '');\n      break;\n    case 'number':\n      // Remove all non-numeric characters except decimal point and minus\n      sanitized = stringInput.replace(/[^\\d\\.\\-]/g, '');\n      break;\n    case 'text':\n    default:\n      sanitized = sanitizeText(stringInput);\n      break;\n  }\n  \n  return {\n    valid: errors.length === 0,\n    sanitized,\n    errors,\n    warnings,\n  };\n}\n\n/**\n * Sanitize form data object\n */\nexport function sanitizeFormData<T extends Record<string, unknown>>(\n  formData: T,\n  fieldConfigs: Partial<Record<keyof T, Parameters<typeof validateAndSanitizeInput>[1]>> = {}\n): {\n  valid: boolean;\n  sanitized: Partial<T>;\n  errors: Record<keyof T, string[]>;\n  warnings: Record<keyof T, string[]>;\n} {\n  const sanitized: Partial<T> = {};\n  const errors: Record<keyof T, string[]> = {} as Record<keyof T, string[]>;\n  const warnings: Record<keyof T, string[]> = {} as Record<keyof T, string[]>;\n  let valid = true;\n  \n  for (const [key, value] of Object.entries(formData)) {\n    const config = fieldConfigs[key as keyof T] || {};\n    const result = validateAndSanitizeInput(value, config);\n    \n    if (!result.valid) {\n      valid = false;\n      errors[key as keyof T] = result.errors;\n    }\n    \n    if (result.warnings.length > 0) {\n      warnings[key as keyof T] = result.warnings;\n    }\n    \n    sanitized[key as keyof T] = result.sanitized as T[keyof T];\n  }\n  \n  return { valid, sanitized, errors, warnings };\n}\n\n/**\n * Create a sanitization middleware for API routes\n */\nexport function createSanitizationMiddleware(\n  fieldConfigs: Record<string, Parameters<typeof validateAndSanitizeInput>[1]>\n) {\n  return (req: { headers: { get: (key: string) => string | null }; body?: unknown }, res: { status: (code: number) => { json: (data: unknown) => void }; setHeader: (key: string, value: string) => void }, next: () => void) => {\n    const contentType = req.headers.get('content-type') || '';\n    \n    if (contentType.includes('application/json') && req.body) {\n      const result = sanitizeFormData(req.body as Record<string, unknown>, fieldConfigs);\n      \n      if (!result.valid) {\n        res.status(400).json({\n          error: 'Invalid input data',\n          details: result.errors,\n        });\n        return;\n      }\n      \n      if (req.body) {\n        (req as { body: unknown }).body = result.sanitized;\n      }\n      \n      if (Object.keys(result.warnings).length > 0) {\n        res.setHeader('X-Input-Warnings', JSON.stringify(result.warnings));\n      }\n    }\n    \n    next();\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/validation/schemas.ts"],"sourcesContent":["/**\n * Form validation schemas using Zod with security enhancements\n * Integrated with security input sanitization system\n */\nimport { z } from 'zod';\nimport { sanitizeText, validateAndSanitizeInput } from '../security/input-sanitization';\n\n// Property validation schema\nexport const propertySchema = z.object({\n  name: z.string().min(1, 'Property name is required').max(100),\n  address: z.string().min(1, 'Address is required').max(200),\n  city: z.string().min(1, 'City is required').max(100),\n  state: z.string().min(2, 'State is required').max(2),\n  zipCode: z.string().min(5, 'ZIP code is required').max(10),\n  propertyType: z.enum(['SINGLE_FAMILY', 'APARTMENT', 'CONDO', 'TOWNHOUSE', 'OTHER']),\n  description: z.string().optional(),\n});\n\n// Tenant validation schema\nexport const tenantSchema = z.object({\n  firstName: z.string().min(1, 'First name is required').max(50),\n  lastName: z.string().min(1, 'Last name is required').max(50),\n  email: z.string().email('Valid email is required'),\n  phone: z.string().min(10, 'Phone number is required'),\n  dateOfBirth: z.date().optional(),\n  emergencyContact: z.object({\n    name: z.string().optional(),\n    phone: z.string().optional(),\n  }).optional(),\n});\n\n// Lease validation schema\nexport const leaseSchema = z.object({\n  tenantId: z.string().uuid('Valid tenant ID is required'),\n  propertyId: z.string().uuid('Valid property ID is required'),\n  unitId: z.string().uuid().optional(),\n  startDate: z.date(),\n  endDate: z.date(),\n  monthlyRent: z.number().positive('Monthly rent must be positive'),\n  securityDeposit: z.number().nonnegative('Security deposit cannot be negative'),\n  leaseTerms: z.string().optional(),\n});\n\n// Common field validation schemas to reduce duplication across the codebase\nexport const commonValidations = {\n  // Basic text fields\n  requiredString: (fieldName: string) =>\n    z.string().min(1, `${fieldName} is required`),\n\n  optionalString: z.string().optional(),\n\n  name: z\n    .string()\n    .min(1, 'Name is required')\n    .max(100, 'Name must be less than 100 characters')\n    .transform(val => sanitizeText(val))\n    .refine(val => {\n      const validation = validateAndSanitizeInput(val, { type: 'text', strict: true });\n      return validation.valid;\n    }, 'Name contains invalid characters'),\n\n  title: z\n    .string()\n    .min(1, 'Title is required')\n    .max(100, 'Title must be less than 100 characters'),\n\n  description: z\n    .string()\n    .min(10, 'Please provide a detailed description')\n    .max(1000, 'Description must be less than 1000 characters')\n    .transform(val => sanitizeText(val))\n    .refine(val => {\n      const validation = validateAndSanitizeInput(val, { type: 'text', strict: true });\n      return validation.valid;\n    }, 'Description contains invalid or potentially dangerous content'),\n\n  // Contact information\n  email: z\n    .string()\n    .min(1, 'Email is required')\n    .email('Please enter a valid email address')\n    .transform(val => val.toLowerCase().trim())\n    .refine(val => {\n      const validation = validateAndSanitizeInput(val, { type: 'email', strict: true });\n      return validation.valid;\n    }, 'Email contains invalid characters'),\n\n  phone: z\n    .string()\n    .min(1, 'Phone number is required')\n    .regex(/^\\+?[\\d\\s\\-()]+$/, 'Please enter a valid phone number'),\n\n  // Address fields\n  address: z.string().min(1, 'Address is required'),\n  city: z.string().min(1, 'City is required'),\n  state: z.string().min(1, 'State is required'),\n  zipCode: z\n    .string()\n    .min(1, 'ZIP code is required')\n    .regex(/^\\d{5}(-\\d{4})?$/, 'Please enter a valid ZIP code'),\n\n  // Numeric fields\n  positiveNumber: z.number().min(0, 'Must be a positive number'),\n  currency: z.number().min(0, 'Amount must be positive'),\n  percentage: z\n    .number()\n    .min(0)\n    .max(100, 'Percentage must be between 0 and 100'),\n\n  // Property-specific fields\n  propertyType: z.enum(['SINGLE_FAMILY', 'MULTI_FAMILY', 'APARTMENT', 'COMMERCIAL', 'OTHER']),\n  unitNumber: z\n    .string()\n    .min(1, 'Unit number is required')\n    .max(20, 'Unit number must be less than 20 characters'),\n  bedrooms: z.number().min(0).max(10),\n  bathrooms: z.number().min(0).max(10),\n  squareFeet: z.number().min(100).max(10000).optional(),\n  rent: z.number().min(0).max(100000),\n\n  // Status enums\n  unitStatus: z.enum(['VACANT', 'OCCUPIED', 'MAINTENANCE', 'UNAVAILABLE']),\n  maintenancePriority: z.enum(['LOW', 'MEDIUM', 'HIGH', 'URGENT']),\n  maintenanceCategory: z.enum(['PLUMBING', 'ELECTRICAL', 'HVAC', 'APPLIANCE', 'GENERAL', 'EMERGENCY']),\n\n  // Date fields\n  date: z.date(),\n  optionalDate: z.date().optional(),\n\n  // File upload with security validation\n  file: z.instanceof(File).optional().refine(async (file) => {\n    if (!file) return true;\n    const { validateFile } = await import('../security/file-upload-security');\n    const result = await validateFile(file, 'documents');\n    return result.valid;\n  }, 'File failed security validation')\n};\n\n// Common schema patterns for forms\nexport const createFormSchema = <T extends z.ZodRawShape>(shape: T) =>\n  z.object(shape);\n\n// Property form schema\nexport const propertyFormSchema = createFormSchema({\n  name: commonValidations.name,\n  description: commonValidations.description,\n  address: commonValidations.address,\n  city: commonValidations.city,\n  state: commonValidations.state,\n  zipCode: commonValidations.zipCode,\n  propertyType: commonValidations.propertyType,\n  numberOfUnits: commonValidations.positiveNumber\n});\n\n// Unit form schema\nexport const unitFormSchema = createFormSchema({\n  unitNumber: commonValidations.unitNumber,\n  propertyId: commonValidations.requiredString('Property ID'),\n  bedrooms: commonValidations.bedrooms,\n  bathrooms: commonValidations.bathrooms,\n  squareFeet: commonValidations.squareFeet,\n  rent: commonValidations.rent,\n  status: commonValidations.unitStatus\n});\n\n// Maintenance request schema\nexport const maintenanceRequestSchema = createFormSchema({\n  unitId: commonValidations.requiredString('Unit'),\n  title: commonValidations.title,\n  description: commonValidations.description,\n  category: commonValidations.maintenanceCategory,\n  priority: commonValidations.maintenancePriority\n});\n\n// Tenant form schema\nexport const tenantFormSchema = createFormSchema({\n  name: commonValidations.name,\n  email: commonValidations.email,\n  phone: commonValidations.phone,\n  emergencyContactName: commonValidations.name,\n  emergencyContactPhone: commonValidations.phone\n});\n\n// Payment form schema\nexport const paymentFormSchema = createFormSchema({\n  amount: commonValidations.currency,\n  dueDate: commonValidations.date,\n  description: commonValidations.description\n});\n\n// Lease form schema\nexport const leaseFormSchema = createFormSchema({\n  tenantId: commonValidations.requiredString('Tenant'),\n  unitId: commonValidations.requiredString('Unit'),\n  startDate: commonValidations.date,\n  endDate: commonValidations.date,\n  monthlyRent: commonValidations.currency,\n  securityDeposit: commonValidations.currency,\n  terms: commonValidations.description\n});\n\n// Auth schemas\nexport const loginSchema = createFormSchema({\n  email: commonValidations.email,\n  password: z.string().min(1, 'Password is required')\n});\n\nexport const signupSchema = createFormSchema({\n  email: commonValidations.email,\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(1, 'Please confirm your password'),\n  firstName: commonValidations.name,\n  lastName: commonValidations.name\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: ['confirmPassword']\n});\n\n// Profile update schema\nexport const profileUpdateSchema = createFormSchema({\n  firstName: commonValidations.name,\n  lastName: commonValidations.name,\n  phone: commonValidations.phone.optional(),\n  address: commonValidations.address.optional(),\n  city: commonValidations.city.optional(),\n  state: commonValidations.state.optional(),\n  zipCode: commonValidations.zipCode.optional()\n});\n\n// Type exports for use in components\n// Import from shared package to avoid duplication\nexport type { PropertyFormData, CreateTenantInput, UpdateTenantInput } from '@repo/shared';\nexport type UnitFormData = z.infer<typeof unitFormSchema>;\nexport type MaintenanceRequestData = z.infer<typeof maintenanceRequestSchema>;\nexport type TenantFormData = z.infer<typeof tenantFormSchema>;\nexport type PaymentFormData = z.infer<typeof paymentFormSchema>;\nexport type LeaseFormData = z.infer<typeof leaseFormSchema>;\nexport type LoginData = z.infer<typeof loginSchema>;\nexport type SignupData = z.infer<typeof signupSchema>;\nexport type ProfileUpdateData = z.infer<typeof profileUpdateSchema>;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/actions/auth-actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport { z } from 'zod';\nimport { auth, supabase } from '@/lib/supabase';\nimport type { AuthUser } from '@/lib/supabase';\nimport { trackServerSideEvent } from '@/lib/analytics/posthog-server';\nimport { commonValidations } from '@/lib/validation/schemas';\n\n// Auth form schemas using consolidated validations\nconst LoginSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst SignupSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n  fullName: commonValidations.name,\n  companyName: commonValidations.optionalString,\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nconst ResetPasswordSchema = z.object({\n  email: commonValidations.email,\n});\n\nconst UpdatePasswordSchema = z.object({\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nexport interface AuthFormState {\n  errors?: {\n    email?: string[];\n    password?: string[];\n    confirmPassword?: string[];\n    fullName?: string[];\n    companyName?: string[];\n    _form?: string[];\n  };\n  success?: boolean;\n  message?: string;\n  data?: {\n    user?: {\n      id: string;\n      email: string;\n      name?: string;\n    };\n    session?: {\n      access_token: string;\n      refresh_token: string;\n    };\n  };\n}\n\nexport async function loginAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n  };\n\n  const result = LoginSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signInWithPassword({\n      email: result.data.email,\n      password: result.data.password,\n    });\n\n    if (error) {\n      // Track failed login attempt\n      await trackServerSideEvent('user_login_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        method: 'email',\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful login\n    if (data.user) {\n      await trackServerSideEvent('user_signed_in', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        session_id: data.session?.access_token?.slice(-8), // Last 8 chars for identification\n      });\n    }\n\n    // Revalidate auth-related caches\n    revalidateTag('user');\n    revalidateTag('session');\n    \n    // Redirect to dashboard\n    redirect('/dashboard');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Login failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function signupAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n    fullName: formData.get('fullName'),\n    companyName: formData.get('companyName'),\n  };\n\n  const result = SignupSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signUp({\n      email: result.data.email,\n      password: result.data.password,\n      options: {\n        data: {\n          full_name: result.data.fullName,\n          company_name: result.data.companyName,\n        },\n      },\n    });\n\n    if (error) {\n      // Track failed signup attempt\n      await trackServerSideEvent('user_signup_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        has_company_name: !!result.data.companyName,\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful signup\n    if (data.user) {\n      await trackServerSideEvent('user_signed_up', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        has_company_name: !!result.data.companyName,\n        full_name: result.data.fullName,\n        needs_email_verification: !data.user.email_confirmed_at,\n      });\n    }\n\n    return {\n      success: true,\n      message: 'Account created! Please check your email to verify your account.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Signup failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function logoutAction(): Promise<AuthFormState> {\n  try {\n    // Get current user for tracking before logout\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    await auth.signOut();\n    \n    // Track logout event\n    if (user) {\n      await trackServerSideEvent('user_signed_out', user.id, {\n        user_id: user.id,\n        email: user.email,\n        logout_method: 'manual',\n      });\n    }\n    \n    // Clear all cached data\n    revalidateTag('user');\n    revalidateTag('session');\n    revalidateTag('properties');\n    revalidateTag('tenants');\n    revalidateTag('leases');\n    revalidateTag('maintenance');\n    \n    // Redirect to home page\n    redirect('/');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Unknown error';\n    console.error('Logout error:', message);\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function forgotPasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n  };\n\n  const result = ResetPasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.resetPasswordForEmail(result.data.email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/update-password`,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    return {\n      success: true,\n      message: 'Password reset email sent! Check your inbox for instructions.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to send reset email';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function updatePasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n  };\n\n  const result = UpdatePasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.updateUser({\n      password: result.data.password,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Revalidate user data\n    revalidateTag('user');\n    \n    return {\n      success: true,\n      message: 'Password updated successfully!',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to update password';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\n// Server-side auth helpers\nexport async function getCurrentUser(): Promise<AuthUser | null> {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) return null;\n\n    return {\n      id: user.id,\n      email: user.email!,\n      name: user.user_metadata?.full_name || user.email!,\n      avatar_url: user.user_metadata?.avatar_url,\n    };\n  } catch (error) {\n    console.error('Get current user error:', error);\n    return null;\n  }\n}\n\nexport async function requireAuth(): Promise<AuthUser> {\n  const user = await getCurrentUser();\n  \n  if (!user) {\n    redirect('/login');\n  }\n  \n  return user;\n}\n\n// OAuth actions\nexport async function signInWithGoogle(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating Google sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'google',\n    options: {\n      redirectTo,\n      queryParams: {\n        access_type: 'offline',\n        prompt: 'consent',\n      },\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] Google sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'google',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with Google. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'google',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to Google OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}\n\nexport async function signInWithGitHub(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating GitHub sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'github',\n    options: {\n      redirectTo,\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] GitHub sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'github',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with GitHub. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'github',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to GitHub OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}"],"names":[],"mappings":";;;;;;;;;;;;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;;;;;;;;;AAEA,mDAAmD;AACnD,MAAM,cAAc,6KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3B,OAAO,uJAAA,CAAA,oBAAiB,CAAC,KAAK;IAC9B,UAAU,6KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAEA,MAAM,eAAe,6KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5B,OAAO,uJAAA,CAAA,oBAAiB,CAAC,KAAK;IAC9B,UAAU,6KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,iBAAiB,6KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACnC,UAAU,uJAAA,CAAA,oBAAiB,CAAC,IAAI;IAChC,aAAa,uJAAA,CAAA,oBAAiB,CAAC,cAAc;AAC/C,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,KAAK,eAAe,EAAE;IAC1D,SAAS;IACT,MAAM;QAAC;KAAkB;AAC3B;AAEA,MAAM,sBAAsB,6KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,OAAO,uJAAA,CAAA,oBAAiB,CAAC,KAAK;AAChC;AAEA,MAAM,uBAAuB,6KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,UAAU,6KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,iBAAiB,6KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AACrC,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,KAAK,eAAe,EAAE;IAC1D,SAAS;IACT,MAAM;QAAC;KAAkB;AAC3B;AA0BO,eAAe,YACpB,SAAwB,EACxB,QAAkB;IAElB,MAAM,UAAU;QACd,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;IACzB;IAEA,MAAM,SAAS,YAAY,SAAS,CAAC;IAErC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO;YACL,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QAC5C;IACF;IAEA,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,0IAAA,CAAA,OAAI,CAAC,kBAAkB,CAAC;YACpD,OAAO,OAAO,IAAI,CAAC,KAAK;YACxB,UAAU,OAAO,IAAI,CAAC,QAAQ;QAChC;QAEA,IAAI,OAAO;YACT,6BAA6B;YAC7B,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,qBAAqB,WAAW;gBACzD,eAAe,MAAM,OAAO;gBAC5B,cAAc,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC7C,QAAQ;YACV;YAEA,OAAO;gBACL,QAAQ;oBACN,OAAO;wBAAC,MAAM,OAAO;qBAAC;gBACxB;YACF;QACF;QAEA,yBAAyB;QACzB,IAAI,KAAK,IAAI,EAAE;YACb,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,kBAAkB,KAAK,IAAI,CAAC,EAAE,EAAE;gBACzD,QAAQ;gBACR,OAAO,KAAK,IAAI,CAAC,KAAK;gBACtB,SAAS,KAAK,IAAI,CAAC,EAAE;gBACrB,YAAY,KAAK,OAAO,EAAE,cAAc,MAAM,CAAC;YACjD;QACF;QAEA,iCAAiC;QACjC,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QAEd,wBAAwB;QACxB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX,EAAE,OAAO,OAAgB;QACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACzD,OAAO;YACL,QAAQ;gBACN,OAAO;oBAAC;iBAAQ;YAClB;QACF;IACF;AACF;AAEO,eAAe,aACpB,SAAwB,EACxB,QAAkB;IAElB,MAAM,UAAU;QACd,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;QACvB,iBAAiB,SAAS,GAAG,CAAC;QAC9B,UAAU,SAAS,GAAG,CAAC;QACvB,aAAa,SAAS,GAAG,CAAC;IAC5B;IAEA,MAAM,SAAS,aAAa,SAAS,CAAC;IAEtC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO;YACL,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QAC5C;IACF;IAEA,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,0IAAA,CAAA,OAAI,CAAC,MAAM,CAAC;YACxC,OAAO,OAAO,IAAI,CAAC,KAAK;YACxB,UAAU,OAAO,IAAI,CAAC,QAAQ;YAC9B,SAAS;gBACP,MAAM;oBACJ,WAAW,OAAO,IAAI,CAAC,QAAQ;oBAC/B,cAAc,OAAO,IAAI,CAAC,WAAW;gBACvC;YACF;QACF;QAEA,IAAI,OAAO;YACT,8BAA8B;YAC9B,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,sBAAsB,WAAW;gBAC1D,eAAe,MAAM,OAAO;gBAC5B,cAAc,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC7C,kBAAkB,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW;YAC7C;YAEA,OAAO;gBACL,QAAQ;oBACN,OAAO;wBAAC,MAAM,OAAO;qBAAC;gBACxB;YACF;QACF;QAEA,0BAA0B;QAC1B,IAAI,KAAK,IAAI,EAAE;YACb,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,kBAAkB,KAAK,IAAI,CAAC,EAAE,EAAE;gBACzD,QAAQ;gBACR,OAAO,KAAK,IAAI,CAAC,KAAK;gBACtB,SAAS,KAAK,IAAI,CAAC,EAAE;gBACrB,kBAAkB,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW;gBAC3C,WAAW,OAAO,IAAI,CAAC,QAAQ;gBAC/B,0BAA0B,CAAC,KAAK,IAAI,CAAC,kBAAkB;YACzD;QACF;QAEA,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAgB;QACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACzD,OAAO;YACL,QAAQ;gBACN,OAAO;oBAAC;iBAAQ;YAClB;QACF;IACF;AACF;AAEO,eAAe;IACpB,IAAI;QACF,8CAA8C;QAC9C,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,0IAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,OAAO;QAEtD,MAAM,0IAAA,CAAA,OAAI,CAAC,OAAO;QAElB,qBAAqB;QACrB,IAAI,MAAM;YACR,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,mBAAmB,KAAK,EAAE,EAAE;gBACrD,SAAS,KAAK,EAAE;gBAChB,OAAO,KAAK,KAAK;gBACjB,eAAe;YACjB;QACF;QAEA,wBAAwB;QACxB,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QAEd,wBAAwB;QACxB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX,EAAE,OAAO,OAAgB;QACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACzD,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;YACL,QAAQ;gBACN,OAAO;oBAAC;iBAAQ;YAClB;QACF;IACF;AACF;AAEO,eAAe,qBACpB,SAAwB,EACxB,QAAkB;IAElB,MAAM,UAAU;QACd,OAAO,SAAS,GAAG,CAAC;IACtB;IAEA,MAAM,SAAS,oBAAoB,SAAS,CAAC;IAE7C,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO;YACL,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QAC5C;IACF;IAEA,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0IAAA,CAAA,OAAI,CAAC,qBAAqB,CAAC,OAAO,IAAI,CAAC,KAAK,EAAE;YACpE,YAAY,GAAG,QAAQ,GAAG,CAAC,oBAAoB,CAAC,qBAAqB,CAAC;QACxE;QAEA,IAAI,OAAO;YACT,OAAO;gBACL,QAAQ;oBACN,OAAO;wBAAC,MAAM,OAAO;qBAAC;gBACxB;YACF;QACF;QAEA,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAgB;QACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACzD,OAAO;YACL,QAAQ;gBACN,OAAO;oBAAC;iBAAQ;YAClB;QACF;IACF;AACF;AAEO,eAAe,qBACpB,SAAwB,EACxB,QAAkB;IAElB,MAAM,UAAU;QACd,UAAU,SAAS,GAAG,CAAC;QACvB,iBAAiB,SAAS,GAAG,CAAC;IAChC;IAEA,MAAM,SAAS,qBAAqB,SAAS,CAAC;IAE9C,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO;YACL,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QAC5C;IACF;IAEA,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0IAAA,CAAA,OAAI,CAAC,UAAU,CAAC;YACtC,UAAU,OAAO,IAAI,CAAC,QAAQ;QAChC;QAEA,IAAI,OAAO;YACT,OAAO;gBACL,QAAQ;oBACN,OAAO;wBAAC,MAAM,OAAO;qBAAC;gBACxB;YACF;QACF;QAEA,uBAAuB;QACvB,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QAEd,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAgB;QACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACzD,OAAO;YACL,QAAQ;gBACN,OAAO;oBAAC;iBAAQ;YAClB;QACF;IACF;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,0IAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,OAAO;QAEtD,IAAI,CAAC,MAAM,OAAO;QAElB,OAAO;YACL,IAAI,KAAK,EAAE;YACX,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,aAAa,EAAE,aAAa,KAAK,KAAK;YACjD,YAAY,KAAK,aAAa,EAAE;QAClC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,OAAO,MAAM;IAEnB,IAAI,CAAC,MAAM;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,OAAO;AACT;AAGO,eAAe;IACpB,oEAAoE;IACpE,MAAM,UAAU,QAAQ,GAAG,CAAC,oBAAoB,kEAEhC;IAChB,MAAM,aAAa,GAAG,QAAQ,cAAc,CAAC;IAE7C,QAAQ,GAAG,CAAC,6DAA6D;IAEzE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,0IAAA,CAAA,OAAI,CAAC,eAAe,CAAC;QACjD,UAAU;QACV,SAAS;YACP;YACA,aAAa;gBACX,aAAa;gBACb,QAAQ;YACV;QACF;IACF;IAEA,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wCAAwC;QACtD,6BAA6B;QAC7B,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,qBAAqB,WAAW;YACzD,UAAU;YACV,eAAe,MAAM,OAAO;YAC5B,QAAQ;QACV;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,yBAAyB;IACzB,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,wBAAwB,WAAW;QAC5D,UAAU;QACV,QAAQ;QACR,cAAc,KAAK,GAAG;IACxB;IAEA,IAAI,KAAK,GAAG,EAAE;QACZ,QAAQ,GAAG,CAAC,kDAAkD,KAAK,GAAG;QACtE,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,GAAG;IACnB,OAAO;QACL,QAAQ,KAAK,CAAC;QACd,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe;IACpB,oEAAoE;IACpE,MAAM,UAAU,QAAQ,GAAG,CAAC,oBAAoB,kEAEhC;IAChB,MAAM,aAAa,GAAG,QAAQ,cAAc,CAAC;IAE7C,QAAQ,GAAG,CAAC,6DAA6D;IAEzE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,0IAAA,CAAA,OAAI,CAAC,eAAe,CAAC;QACjD,UAAU;QACV,SAAS;YACP;QACF;IACF;IAEA,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wCAAwC;QACtD,6BAA6B;QAC7B,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,qBAAqB,WAAW;YACzD,UAAU;YACV,eAAe,MAAM,OAAO;YAC5B,QAAQ;QACV;QACA,MAAM,IAAI,MAAM;IAClB;IAEA,yBAAyB;IACzB,MAAM,CAAA,GAAA,gKAAA,CAAA,uBAAoB,AAAD,EAAE,wBAAwB,WAAW;QAC5D,UAAU;QACV,QAAQ;QACR,cAAc,KAAK,GAAG;IACxB;IAEA,IAAI,KAAK,GAAG,EAAE;QACZ,QAAQ,GAAG,CAAC,kDAAkD,KAAK,GAAG;QACtE,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,GAAG;IACnB,OAAO;QACL,QAAQ,KAAK,CAAC;QACd,MAAM,IAAI,MAAM;IAClB;AACF;;;IA9XsB;IAgEA;IAyEA;IAqCA;IA2CA;IAgDA;IAkBA;IAWA;IA+CA;;AArVA,+OAAA;AAgEA,+OAAA;AAyEA,+OAAA;AAqCA,+OAAA;AA2CA,+OAAA;AAgDA,+OAAA;AAkBA,+OAAA;AAWA,+OAAA;AA+CA,+OAAA","debugId":null}},
    {"offset": {"line": 1315, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/.next-internal/server/app/auth/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCurrentUser as '0050d7645596aebb8e3d6554e26d9a33bdf032a0bd'} from 'ACTIONS_MODULE0'\nexport {signInWithGitHub as '00bb70007f6623d69d6022c651b1464c3980bc081a'} from 'ACTIONS_MODULE0'\nexport {signInWithGoogle as '00e910cadf0b232473915927567d3b5848de83eb3b'} from 'ACTIONS_MODULE0'\nexport {requireAuth as '00ef4bd1908dd6b6594e03fefddfcf0b1ff7785d96'} from 'ACTIONS_MODULE0'\nexport {logoutAction as '00fa0b760d75df25ad2d603f356ae96344b3c04945'} from 'ACTIONS_MODULE0'\nexport {loginAction as '605022e81855ee76fa9060513f75c44a32bd82a619'} from 'ACTIONS_MODULE0'\nexport {signupAction as '605a7a62105d87fb6a9d39a26e514bdc1b92743e51'} from 'ACTIONS_MODULE0'\nexport {forgotPasswordAction as '60ac14ea594dede6a06caef4d99a4363766a425d17'} from 'ACTIONS_MODULE0'\nexport {updatePasswordAction as '60f6e0201b58a5db560fbfb16596a74c685e3ff508'} from 'ACTIONS_MODULE0'\nexport {shutdownPostHog as '00f55bb2cd605bfce032ffb4f7b3e59bba20cb882d'} from 'ACTIONS_MODULE1'\nexport {identifyUser as '60c917ae2b0150a3aa37e9921befdf89865200e333'} from 'ACTIONS_MODULE1'\nexport {trackServerSideEvent as '7013fbbc59ee8b15cc56e687f7e6e52b5f11159bd2'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AASA","debugId":null}},
    {"offset": {"line": 1403, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const LoginFormRefactored = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginFormRefactored() from the server but LoginFormRefactored is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/auth/login-form.tsx <module evaluation>\",\n    \"LoginFormRefactored\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/apps/frontend/src/components/auth/login-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/auth/login-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,kFACA;uCAEW,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoT,GACjV,kFACA","debugId":null}},
    {"offset": {"line": 1419, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const LoginFormRefactored = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginFormRefactored() from the server but LoginFormRefactored is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/auth/login-form.tsx\",\n    \"LoginFormRefactored\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/apps/frontend/src/components/auth/login-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/auth/login-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,8DACA;uCAEW,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 1435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1443, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/auth-redirect.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AuthRedirect = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthRedirect() from the server but AuthRedirect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/auth/auth-redirect.tsx <module evaluation>\",\n    \"AuthRedirect\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qFACA","debugId":null}},
    {"offset": {"line": 1455, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/auth-redirect.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AuthRedirect = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthRedirect() from the server but AuthRedirect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/auth/auth-redirect.tsx\",\n    \"AuthRedirect\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iEACA","debugId":null}},
    {"offset": {"line": 1467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1475, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/app/auth/login/page.tsx"],"sourcesContent":["/**\n * Login Page - Server Component\n * Handles authentication flow with proper server/client separation\n */\n\nimport type { Metadata } from '@/types/next.d'\nimport { Suspense } from 'react'\nimport { AuthLayout } from '@/components/auth/auth-layout'\nimport { LoginFormRefactored } from '@/components/auth/login-form'\nimport { getCurrentUser } from '@/lib/actions/auth-actions'\nimport { AuthRedirect } from '@/components/auth/auth-redirect'\n\nexport const metadata: Metadata = {\n  title: 'Sign In | TenantFlow',\n  description: 'Sign in to your TenantFlow account to access your property management dashboard.',\n}\n\ninterface LoginPageProps {\n  searchParams: Promise<{ redirect?: string; error?: string }>\n}\n\nexport default async function LoginPage({ searchParams }: LoginPageProps) {\n  // Await searchParams as required in Next.js 15\n  const params = await searchParams\n  \n  // Check if user is already authenticated\n  const user = await getCurrentUser()\n  \n  if (user) {\n    return <AuthRedirect to={params?.redirect || '/dashboard'} />\n  }\n\n  const redirectTo = params?.redirect || '/dashboard'\n\n  return (\n    <AuthLayout \n      title=\"Sign In\"\n      subtitle=\"Welcome back to TenantFlow\"\n      description=\"Enter your credentials to access your dashboard\"\n      side=\"left\"\n      image={{\n        src: \"/images/roi-up_to_the_right.jpg\",\n        alt: \"Modern property management dashboard\"\n      }}\n      heroContent={{\n        title: \"Streamline Your Property Management\",\n        description: \"Join thousands of property owners who save hours every week with our powerful, intuitive platform.\"\n      }}\n    >\n      <Suspense fallback={\n        <div className=\"h-[400px] animate-pulse bg-muted rounded-lg\" />\n      }>\n        <LoginFormRefactored \n          redirectTo={redirectTo}\n          error={params?.error}\n        />\n      </Suspense>\n    </AuthLayout>\n  )\n}"],"names":[],"mappings":"AAAA;;;CAGC;;;;;AAGD;AACA;AACA;AACA;AACA;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAMe,eAAe,UAAU,EAAE,YAAY,EAAkB;IACtE,+CAA+C;IAC/C,MAAM,SAAS,MAAM;IAErB,yCAAyC;IACzC,MAAM,OAAO,MAAM,CAAA,GAAA,4JAAA,CAAA,iBAAc,AAAD;IAEhC,IAAI,MAAM;QACR,qBAAO,8OAAC,kKAAA,CAAA,eAAY;YAAC,IAAI,QAAQ,YAAY;;;;;;IAC/C;IAEA,MAAM,aAAa,QAAQ,YAAY;IAEvC,qBACE,8OAAC,gKAAA,CAAA,aAAU;QACT,OAAM;QACN,UAAS;QACT,aAAY;QACZ,MAAK;QACL,OAAO;YACL,KAAK;YACL,KAAK;QACP;QACA,aAAa;YACX,OAAO;YACP,aAAa;QACf;kBAEA,cAAA,8OAAC,qMAAA,CAAA,WAAQ;YAAC,wBACR,8OAAC;gBAAI,WAAU;;;;;;sBAEf,cAAA,8OAAC,+JAAA,CAAA,sBAAmB;gBAClB,YAAY;gBACZ,OAAO,QAAQ;;;;;;;;;;;;;;;;AAKzB","debugId":null}}]
}