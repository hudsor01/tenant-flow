{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_7261fffb.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_7261fffb-module__FDFYPa__className\",\n  \"variable\": \"geist_7261fffb-module__FDFYPa__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_7261fffb.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22],%22display%22:%22swap%22,%22preload%22:true}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_b5dd9970.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_b5dd9970-module__erib8q__className\",\n  \"variable\": \"geist_mono_b5dd9970-module__erib8q__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_b5dd9970.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22],%22display%22:%22swap%22,%22preload%22:true}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/security/csp-nonce-meta.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CSPNonceMeta = registerClientReference(\n    function() { throw new Error(\"Attempted to call CSPNonceMeta() from the server but CSPNonceMeta is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/security/csp-nonce-meta.tsx <module evaluation>\",\n    \"CSPNonceMeta\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0FACA","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/security/csp-nonce-meta.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CSPNonceMeta = registerClientReference(\n    function() { throw new Error(\"Attempted to call CSPNonceMeta() from the server but CSPNonceMeta is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/security/csp-nonce-meta.tsx\",\n    \"CSPNonceMeta\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sEACA","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/seo/generate-metadata.ts"],"sourcesContent":["import type { Metadata } from '@/types/next';\nimport type { Locale } from '@/lib/i18n/config';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  keywords?: string[];\n  image?: string;\n  noindex?: boolean;\n  locale?: Locale;\n  alternateLocales?: Locale[];\n  canonical?: string;\n  type?: 'website' | 'article' | 'profile';\n}\n\nexport function generateMetadata({\n  title,\n  description,\n  keywords = [],\n  image,\n  noindex = false,\n  locale = 'en',\n  alternateLocales = ['en', 'es', 'fr', 'de'],\n  canonical,\n  type = 'website',\n}: SEOProps): Metadata {\n  const baseUrl = 'https://tenantflow.app';\n  const defaultTitle = 'TenantFlow - Property Management Platform';\n  const defaultDescription = 'Modern property management platform for landlords and tenants. Manage properties, track rent, handle maintenance requests, and streamline operations.';\n  const defaultKeywords = ['property management', 'landlord', 'tenant', 'rent collection', 'maintenance', 'real estate'];\n\n  const fullTitle = title ? `${title} | TenantFlow` : defaultTitle;\n  const finalDescription = description || defaultDescription;\n  const finalKeywords = [...defaultKeywords, ...keywords];\n  const ogImage = image || '/og-image.jpg';\n\n  const metadata: Metadata = {\n    title: fullTitle,\n    description: finalDescription,\n    keywords: finalKeywords,\n    creator: 'TenantFlow',\n    publisher: 'TenantFlow',\n    \n    // Canonical URL\n    ...(canonical && {\n      alternates: {\n        canonical: `${baseUrl}${canonical}`,\n      },\n    }),\n\n    // Robots\n    robots: {\n      index: !noindex,\n      follow: !noindex,\n    },\n\n    // Open Graph\n    openGraph: {\n      type,\n      locale,\n      url: canonical ? `${baseUrl}${canonical}` : baseUrl,\n      title: fullTitle,\n      description: finalDescription,\n      siteName: 'TenantFlow',\n      images: [\n        {\n          url: ogImage,\n          width: 1200,\n          height: 630,\n          alt: title || 'TenantFlow Property Management',\n        },\n      ],\n    },\n\n    // Note: No Twitter metadata as TenantFlow only uses Facebook and LinkedIn\n\n    // Additional SEO\n    other: {\n      'theme-color': '#ffffff',\n      'color-scheme': 'light',\n      'format-detection': 'telephone=no',\n      'apple-mobile-web-app-title': 'TenantFlow',\n      'application-name': 'TenantFlow',\n      'msapplication-TileColor': '#ffffff',\n    },\n  };\n\n  // Add alternate languages if provided\n  if (alternateLocales.length > 1) {\n    metadata.alternates = {\n      ...metadata.alternates,\n      languages: Object.fromEntries(\n        alternateLocales.map((lang) => [\n          lang,\n          canonical ? `${baseUrl}/${lang}${canonical}` : `${baseUrl}/${lang}`,\n        ])\n      ),\n    };\n  }\n\n  return metadata;\n}\n\n// JSON-LD structured data generators\nexport function generateOrganizationSchema() {\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'Organization',\n    name: 'TenantFlow',\n    url: 'https://tenantflow.app',\n    logo: 'https://tenantflow.app/logo.png',\n    description: 'Modern property management platform for landlords and tenants',\n    contactPoint: {\n      '@type': 'ContactPoint',\n      telephone: '+1-555-123-4567',\n      contactType: 'Customer Service',\n      availableLanguage: ['English', 'Spanish'],\n    },\n    sameAs: [\n      'https://www.facebook.com/tenantflow',\n      'https://linkedin.com/company/tenantflow',\n    ],\n  };\n}\n\nexport function generateWebsiteSchema() {\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'WebSite',\n    name: 'TenantFlow',\n    url: 'https://tenantflow.app',\n    description: 'Property management platform for landlords and tenants',\n    potentialAction: {\n      '@type': 'SearchAction',\n      target: 'https://tenantflow.app/search?q={search_term_string}',\n      'query-input': 'required name=search_term_string',\n    },\n  };\n}\n\nexport function generateSoftwareApplicationSchema() {\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'SoftwareApplication',\n    name: 'TenantFlow',\n    operatingSystem: 'Web Browser',\n    applicationCategory: 'BusinessApplication',\n    description: 'Comprehensive property management platform for landlords, property managers, and tenants. Features include rent collection, maintenance tracking, lease management, and financial reporting.',\n    url: 'https://tenantflow.app',\n    screenshot: 'https://tenantflow.app/images/dashboard-screenshot.png',\n    featureList: [\n      'Property Management',\n      'Tenant Management', \n      'Rent Collection',\n      'Maintenance Tracking',\n      'Lease Management',\n      'Financial Reporting',\n      'Communication Tools',\n      'Document Management'\n    ],\n    applicationSubCategory: 'Property Management Software',\n    aggregateRating: {\n      '@type': 'AggregateRating',\n      ratingValue: '4.8',\n      ratingCount: '1250',\n      bestRating: '5',\n      worstRating: '1'\n    },\n    offers: [\n      {\n        '@type': 'Offer',\n        name: 'Basic Plan',\n        priceCurrency: 'USD',\n        price: '29',\n        pricePer: 'month',\n        priceValidUntil: '2025-12-31',\n        description: 'Perfect for small landlords managing up to 50 units'\n      },\n      {\n        '@type': 'Offer', \n        name: 'Professional Plan',\n        priceCurrency: 'USD',\n        price: '79',\n        pricePer: 'month',\n        priceValidUntil: '2025-12-31',\n        description: 'Ideal for property management companies with advanced features'\n      }\n    ],\n    creator: {\n      '@type': 'Organization',\n      name: 'TenantFlow Inc.',\n      url: 'https://tenantflow.app'\n    },\n    datePublished: '2024-01-01',\n    dateModified: '2025-01-01'\n  };\n}\n\n// Additional schema generators for enhanced SEO\nexport function generateBreadcrumbSchema(items: Array<{name: string, url: string}>) {\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'BreadcrumbList',\n    itemListElement: items.map((item, index) => ({\n      '@type': 'ListItem',\n      position: index + 1,\n      name: item.name,\n      item: item.url\n    }))\n  };\n}\n\nexport function generateFAQSchema(faqs: Array<{question: string, answer: string}>) {\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'FAQPage',\n    mainEntity: faqs.map(faq => ({\n      '@type': 'Question',\n      name: faq.question,\n      acceptedAnswer: {\n        '@type': 'Answer',\n        text: faq.answer\n      }\n    }))\n  };\n}\n\nexport function generateLocalBusinessSchema() {\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'ProfessionalService',\n    name: 'TenantFlow Property Management Services',\n    description: 'Professional property management software and services for landlords and property managers',\n    url: 'https://tenantflow.app',\n    telephone: '+1-555-TENANT (555-836-2681)',\n    email: 'support@tenantflow.app',\n    address: {\n      '@type': 'PostalAddress',\n      addressLocality: 'San Francisco',\n      addressRegion: 'CA',\n      addressCountry: 'US'\n    },\n    geo: {\n      '@type': 'GeoCoordinates',\n      latitude: '37.7749',\n      longitude: '-122.4194'\n    },\n    openingHours: [\n      'Mo-Fr 09:00-17:00',\n      'Sa 10:00-16:00'\n    ],\n    priceRange: '$29-$199',\n    serviceType: 'Property Management Software',\n    areaServed: {\n      '@type': 'Country',\n      name: 'United States'\n    }\n  };\n}\n\nexport function generateProductSchema() {\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'Product',\n    name: 'TenantFlow Property Management Platform',\n    description: 'All-in-one property management solution with rent collection, maintenance tracking, and tenant communication',\n    brand: {\n      '@type': 'Brand',\n      name: 'TenantFlow'\n    },\n    category: 'Software > Business Software > Property Management',\n    aggregateRating: {\n      '@type': 'AggregateRating',\n      ratingValue: '4.8',\n      ratingCount: '1250',\n      bestRating: '5',\n      worstRating: '1'\n    },\n    offers: {\n      '@type': 'AggregateOffer',\n      lowPrice: '29',\n      highPrice: '199', \n      priceCurrency: 'USD',\n      offerCount: '3',\n      availability: 'https://schema.org/InStock',\n      seller: {\n        '@type': 'Organization',\n        name: 'TenantFlow Inc.'\n      }\n    },\n    features: [\n      'Multi-tenant property management',\n      'Automated rent collection',\n      'Maintenance request tracking',\n      'Financial reporting and analytics',\n      'Tenant screening and background checks',\n      'Lease agreement management',\n      'Real-time notifications',\n      'Mobile-responsive dashboard'\n    ]\n  };\n}"],"names":[],"mappings":";;;;;;;;;;AAeO,SAAS,iBAAiB,EAC/B,KAAK,EACL,WAAW,EACX,WAAW,EAAE,EACb,KAAK,EACL,UAAU,KAAK,EACf,SAAS,IAAI,EACb,mBAAmB;IAAC;IAAM;IAAM;IAAM;CAAK,EAC3C,SAAS,EACT,OAAO,SAAS,EACP;IACT,MAAM,UAAU;IAChB,MAAM,eAAe;IACrB,MAAM,qBAAqB;IAC3B,MAAM,kBAAkB;QAAC;QAAuB;QAAY;QAAU;QAAmB;QAAe;KAAc;IAEtH,MAAM,YAAY,QAAQ,GAAG,MAAM,aAAa,CAAC,GAAG;IACpD,MAAM,mBAAmB,eAAe;IACxC,MAAM,gBAAgB;WAAI;WAAoB;KAAS;IACvD,MAAM,UAAU,SAAS;IAEzB,MAAM,WAAqB;QACzB,OAAO;QACP,aAAa;QACb,UAAU;QACV,SAAS;QACT,WAAW;QAEX,gBAAgB;QAChB,GAAI,aAAa;YACf,YAAY;gBACV,WAAW,GAAG,UAAU,WAAW;YACrC;QACF,CAAC;QAED,SAAS;QACT,QAAQ;YACN,OAAO,CAAC;YACR,QAAQ,CAAC;QACX;QAEA,aAAa;QACb,WAAW;YACT;YACA;YACA,KAAK,YAAY,GAAG,UAAU,WAAW,GAAG;YAC5C,OAAO;YACP,aAAa;YACb,UAAU;YACV,QAAQ;gBACN;oBACE,KAAK;oBACL,OAAO;oBACP,QAAQ;oBACR,KAAK,SAAS;gBAChB;aACD;QACH;QAEA,0EAA0E;QAE1E,iBAAiB;QACjB,OAAO;YACL,eAAe;YACf,gBAAgB;YAChB,oBAAoB;YACpB,8BAA8B;YAC9B,oBAAoB;YACpB,2BAA2B;QAC7B;IACF;IAEA,sCAAsC;IACtC,IAAI,iBAAiB,MAAM,GAAG,GAAG;QAC/B,SAAS,UAAU,GAAG;YACpB,GAAG,SAAS,UAAU;YACtB,WAAW,OAAO,WAAW,CAC3B,iBAAiB,GAAG,CAAC,CAAC,OAAS;oBAC7B;oBACA,YAAY,GAAG,QAAQ,CAAC,EAAE,OAAO,WAAW,GAAG,GAAG,QAAQ,CAAC,EAAE,MAAM;iBACpE;QAEL;IACF;IAEA,OAAO;AACT;AAGO,SAAS;IACd,OAAO;QACL,YAAY;QACZ,SAAS;QACT,MAAM;QACN,KAAK;QACL,MAAM;QACN,aAAa;QACb,cAAc;YACZ,SAAS;YACT,WAAW;YACX,aAAa;YACb,mBAAmB;gBAAC;gBAAW;aAAU;QAC3C;QACA,QAAQ;YACN;YACA;SACD;IACH;AACF;AAEO,SAAS;IACd,OAAO;QACL,YAAY;QACZ,SAAS;QACT,MAAM;QACN,KAAK;QACL,aAAa;QACb,iBAAiB;YACf,SAAS;YACT,QAAQ;YACR,eAAe;QACjB;IACF;AACF;AAEO,SAAS;IACd,OAAO;QACL,YAAY;QACZ,SAAS;QACT,MAAM;QACN,iBAAiB;QACjB,qBAAqB;QACrB,aAAa;QACb,KAAK;QACL,YAAY;QACZ,aAAa;YACX;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACD,wBAAwB;QACxB,iBAAiB;YACf,SAAS;YACT,aAAa;YACb,aAAa;YACb,YAAY;YACZ,aAAa;QACf;QACA,QAAQ;YACN;gBACE,SAAS;gBACT,MAAM;gBACN,eAAe;gBACf,OAAO;gBACP,UAAU;gBACV,iBAAiB;gBACjB,aAAa;YACf;YACA;gBACE,SAAS;gBACT,MAAM;gBACN,eAAe;gBACf,OAAO;gBACP,UAAU;gBACV,iBAAiB;gBACjB,aAAa;YACf;SACD;QACD,SAAS;YACP,SAAS;YACT,MAAM;YACN,KAAK;QACP;QACA,eAAe;QACf,cAAc;IAChB;AACF;AAGO,SAAS,yBAAyB,KAAyC;IAChF,OAAO;QACL,YAAY;QACZ,SAAS;QACT,iBAAiB,MAAM,GAAG,CAAC,CAAC,MAAM,QAAU,CAAC;gBAC3C,SAAS;gBACT,UAAU,QAAQ;gBAClB,MAAM,KAAK,IAAI;gBACf,MAAM,KAAK,GAAG;YAChB,CAAC;IACH;AACF;AAEO,SAAS,kBAAkB,IAA+C;IAC/E,OAAO;QACL,YAAY;QACZ,SAAS;QACT,YAAY,KAAK,GAAG,CAAC,CAAA,MAAO,CAAC;gBAC3B,SAAS;gBACT,MAAM,IAAI,QAAQ;gBAClB,gBAAgB;oBACd,SAAS;oBACT,MAAM,IAAI,MAAM;gBAClB;YACF,CAAC;IACH;AACF;AAEO,SAAS;IACd,OAAO;QACL,YAAY;QACZ,SAAS;QACT,MAAM;QACN,aAAa;QACb,KAAK;QACL,WAAW;QACX,OAAO;QACP,SAAS;YACP,SAAS;YACT,iBAAiB;YACjB,eAAe;YACf,gBAAgB;QAClB;QACA,KAAK;YACH,SAAS;YACT,UAAU;YACV,WAAW;QACb;QACA,cAAc;YACZ;YACA;SACD;QACD,YAAY;QACZ,aAAa;QACb,YAAY;YACV,SAAS;YACT,MAAM;QACR;IACF;AACF;AAEO,SAAS;IACd,OAAO;QACL,YAAY;QACZ,SAAS;QACT,MAAM;QACN,aAAa;QACb,OAAO;YACL,SAAS;YACT,MAAM;QACR;QACA,UAAU;QACV,iBAAiB;YACf,SAAS;YACT,aAAa;YACb,aAAa;YACb,YAAY;YACZ,aAAa;QACf;QACA,QAAQ;YACN,SAAS;YACT,UAAU;YACV,WAAW;YACX,eAAe;YACf,YAAY;YACZ,cAAc;YACd,QAAQ;gBACN,SAAS;gBACT,MAAM;YACR;QACF;QACA,UAAU;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;AACF","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/app/layout.constants.ts"],"sourcesContent":["import type { Metadata, Viewport } from '@/types/next'\n\nexport const LAYOUT_CONSTANTS = {\n  SIDEBAR_WIDTH: 256,\n  HEADER_HEIGHT: 64,\n  MOBILE_BREAKPOINT: 768,\n  DESKTOP_BREAKPOINT: 1024,\n} as const\n\nexport type LayoutConstants = typeof LAYOUT_CONSTANTS\n\nexport const metadata: Metadata = {\n  title: 'TenantFlow',\n  description: 'Modern property management platform',\n}\n\nexport const viewport: Viewport = {\n  width: 'device-width',\n  initialScale: 1,\n}"],"names":[],"mappings":";;;;;AAEO,MAAM,mBAAmB;IAC9B,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,oBAAoB;AACtB;AAIO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,cAAc;AAChB","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/app/layout.tsx"],"sourcesContent":["import { Geist, Geist_Mono } from \"next/font/google\";\nimport Script from \"next/script\";\nimport { CSPNonceMeta } from \"@/components/security/csp-nonce-meta\";\nimport { generateOrganizationSchema, generateWebsiteSchema, generateSoftwareApplicationSchema } from \"@/lib/seo/generate-metadata\";\nimport \"./globals.css\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n  display: \"swap\",\n  preload: true,\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n  display: \"swap\",\n  preload: true,\n});\n\nexport { viewport, metadata } from \"./layout.constants\";\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <head>\n        {/* CSP Nonce Meta Tag for Client Access */}\n        <CSPNonceMeta />\n        \n        {/* Preconnect to critical domains */}\n        <link\n          rel=\"preconnect\"\n          href=\"https://api.tenantflow.app\"\n          crossOrigin=\"anonymous\"\n        />\n        <link\n          rel=\"dns-prefetch\"\n          href=\"https://api.tenantflow.app\"\n        />\n        <link\n          rel=\"preconnect\"\n          href=\"https://fonts.gstatic.com\"\n          crossOrigin=\"anonymous\"\n        />\n        \n        {/* Structured data for SEO */}\n        <Script\n          id=\"organization-schema\"\n          type=\"application/ld+json\"\n          dangerouslySetInnerHTML={{\n            __html: JSON.stringify(generateOrganizationSchema()),\n          }}\n        />\n        <Script\n          id=\"website-schema\"\n          type=\"application/ld+json\"\n          dangerouslySetInnerHTML={{\n            __html: JSON.stringify(generateWebsiteSchema()),\n          }}\n        />\n        <Script\n          id=\"software-schema\"\n          type=\"application/ld+json\"\n          dangerouslySetInnerHTML={{\n            __html: JSON.stringify(generateSoftwareApplicationSchema()),\n          }}\n        />\n      </head>\n      <body className={`${geistSans.variable} ${geistMono.variable} antialiased bg-white`}>\n        {children}\n        \n        {/* Web Vitals Monitoring */}\n        {/* <WebVitalsReporter /> */}\n        \n        {/* PostHog Analytics - Single Source of Truth */}\n        {process.env.NODE_ENV === 'production' && process.env.NEXT_PUBLIC_POSTHOG_KEY && (\n          <Script\n            src=\"/js/posthog.js\"\n            strategy=\"afterInteractive\"\n          />\n        )}\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;AAiBA;;;;;;;;;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;;0BACtC,8OAAC;;kCAEC,8OAAC,0KAAA,CAAA,eAAY;;;;;kCAGb,8OAAC;wBACC,KAAI;wBACJ,MAAK;wBACL,aAAY;;;;;;kCAEd,8OAAC;wBACC,KAAI;wBACJ,MAAK;;;;;;kCAEP,8OAAC;wBACC,KAAI;wBACJ,MAAK;wBACL,aAAY;;;;;;kCAId,8OAAC,8HAAA,CAAA,UAAM;wBACL,IAAG;wBACH,MAAK;wBACL,yBAAyB;4BACvB,QAAQ,KAAK,SAAS,CAAC,CAAA,GAAA,6JAAA,CAAA,6BAA0B,AAAD;wBAClD;;;;;;kCAEF,8OAAC,8HAAA,CAAA,UAAM;wBACL,IAAG;wBACH,MAAK;wBACL,yBAAyB;4BACvB,QAAQ,KAAK,SAAS,CAAC,CAAA,GAAA,6JAAA,CAAA,wBAAqB,AAAD;wBAC7C;;;;;;kCAEF,8OAAC,8HAAA,CAAA,UAAM;wBACL,IAAG;wBACH,MAAK;wBACL,yBAAyB;4BACvB,QAAQ,KAAK,SAAS,CAAC,CAAA,GAAA,6JAAA,CAAA,oCAAiC,AAAD;wBACzD;;;;;;;;;;;;0BAGJ,8OAAC;gBAAK,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC;;oBAChF;oBAMA,oDAAyB,qHACxB,8OAAC,8HAAA,CAAA,UAAM;wBACL,KAAI;wBACJ,UAAS;;;;;;;;;;;;;;;;;;AAMrB","debugId":null}},
    {"offset": {"line": 563, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/node_modules/next/dist/client/script.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/node_modules/next/dist/client/script.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/node_modules/next/src/client/script.tsx"],"sourcesContent":["'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/node_modules/next/script.js"],"sourcesContent":["module.exports = require('./dist/client/script')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}