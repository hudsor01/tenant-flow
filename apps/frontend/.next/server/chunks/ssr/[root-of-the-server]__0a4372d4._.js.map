{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/supabase-auth-processor.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SupabaseAuthProcessor = registerClientReference(\n    function() { throw new Error(\"Attempted to call SupabaseAuthProcessor() from the server but SupabaseAuthProcessor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/auth/supabase-auth-processor.tsx <module evaluation>\",\n    \"SupabaseAuthProcessor\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,+FACA","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/supabase-auth-processor.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SupabaseAuthProcessor = registerClientReference(\n    function() { throw new Error(\"Attempted to call SupabaseAuthProcessor() from the server but SupabaseAuthProcessor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/components/auth/supabase-auth-processor.tsx\",\n    \"SupabaseAuthProcessor\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,2EACA","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/providers/query-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const QueryProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call QueryProvider() from the server but QueryProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/providers/query-provider.tsx <module evaluation>\",\n    \"QueryProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gFACA","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/providers/query-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const QueryProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call QueryProvider() from the server but QueryProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/frontend/src/providers/query-provider.tsx\",\n    \"QueryProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,4DACA","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/app/auth/callback/page.tsx"],"sourcesContent":["import { SupabaseAuthProcessor } from '@/components/auth/supabase-auth-processor'\nimport { QueryProvider } from '@/providers/query-provider'\n\n// Force dynamic rendering for OAuth callback processing\n// This prevents Next.js from statically generating this page at build time,\n// which is required for handling dynamic OAuth code parameters\nexport const dynamic = 'force-dynamic'\n\ninterface AuthCallbackPageProps {\n  searchParams: { [key: string]: string | string[] | undefined }\n}\n\nexport default function AuthCallbackPage({ searchParams }: AuthCallbackPageProps) {\n  // Access to searchParams makes this page dynamic automatically\n  // This ensures OAuth codes in URL parameters are properly handled\n  return (\n    <QueryProvider>\n      <SupabaseAuthProcessor />\n    </QueryProvider>\n  )\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAKO,MAAM,UAAU;AAMR,SAAS,iBAAiB,EAAE,YAAY,EAAyB;IAC9E,+DAA+D;IAC/D,kEAAkE;IAClE,qBACE,8OAAC,0JAAA,CAAA,gBAAa;kBACZ,cAAA,8OAAC,+KAAA,CAAA,wBAAqB;;;;;;;;;;AAG5B","debugId":null}}]
}