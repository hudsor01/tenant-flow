{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/framer-motion.ts"],"sourcesContent":["// Client-side framer-motion wrapper\n'use client'\n\nimport { \n  motion, \n  AnimatePresence, \n  LazyMotion, \n  domAnimation, \n  m,\n  type TargetAndTransition\n} from 'framer-motion'\n\nexport { \n  motion, \n  AnimatePresence, \n  LazyMotion, \n  domAnimation, \n  m\n}\n\nexport type { \n  Transition, \n  TargetAndTransition,\n  HTMLMotionProps\n} from 'framer-motion'\n\nexport type Variants = {\n  [key: string]: TargetAndTransition | ((custom?: unknown) => TargetAndTransition)\n}\n\nexport const fadeInVariants: Variants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 },\n}\n\nexport const slideInVariants: Variants = {\n  hidden: { x: -20, opacity: 0 },\n  visible: { x: 0, opacity: 1 },\n}\n\nexport const slideUpVariants: Variants = {\n  hidden: { y: 20, opacity: 0 },\n  visible: { y: 0, opacity: 1 },\n}\n\nexport const scaleInVariants: Variants = {\n  hidden: { scale: 0.95, opacity: 0 },\n  visible: { scale: 1, opacity: 1 },\n}\n\nexport const staggerContainerVariants: Variants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n}\n\nexport const staggerItemVariants: Variants = {\n  hidden: { y: 20, opacity: 0 },\n  visible: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 24,\n    },\n  },\n}\n\n// Page transition variants\nexport const pageTransitionVariants: Variants = {\n  initial: { opacity: 0, y: 20 },\n  in: { opacity: 1, y: 0 },\n  out: { opacity: 0, y: -20 },\n}\n\n// Modal/Dialog variants\nexport const modalVariants: Variants = {\n  hidden: { opacity: 0, scale: 0.75 },\n  visible: { \n    opacity: 1, \n    scale: 1,\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 30,\n    },\n  },\n  exit: { \n    opacity: 0, \n    scale: 0.75,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\nexport const modalOverlayVariants: Variants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 },\n  exit: { opacity: 0 },\n}\n\n// Sidebar variants\nexport const sidebarVariants: Variants = {\n  open: { \n    x: 0,\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 30,\n    },\n  },\n  closed: { \n    x: '-100%',\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 30,\n    },\n  },\n}\n\n// Card hover variants\nexport const cardHoverVariants: Variants = {\n  rest: { scale: 1 },\n  hover: { \n    scale: 1.02,\n    transition: {\n      duration: 0.2,\n      type: 'tween',\n      ease: 'easeInOut',\n    },\n  },\n  tap: { scale: 0.98 },\n}\n\n// Button variants\nexport const buttonVariants: Variants = {\n  rest: { scale: 1 },\n  hover: { scale: 1.05 },\n  tap: { scale: 0.95 },\n}\n\n// Loading spinner variants\nexport const spinnerVariants: Variants = {\n  start: {\n    rotate: 0,\n  },\n  end: {\n    rotate: 360,\n    transition: {\n      duration: 1,\n      ease: 'linear',\n      repeat: Infinity,\n    },\n  },\n}\n\n// Notification variants\nexport const notificationVariants: Variants = {\n  hidden: { \n    x: 300, \n    opacity: 0,\n    scale: 0.8,\n  },\n  visible: { \n    x: 0, \n    opacity: 1,\n    scale: 1,\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 30,\n    },\n  },\n  exit: { \n    x: 300, \n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\n// Dropdown variants\nexport const dropdownVariants: Variants = {\n  hidden: { \n    opacity: 0, \n    y: -10, \n    scale: 0.95,\n  },\n  visible: { \n    opacity: 1, \n    y: 0, \n    scale: 1,\n    transition: {\n      type: 'spring',\n      stiffness: 300,\n      damping: 30,\n    },\n  },\n  exit: { \n    opacity: 0, \n    y: -10, \n    scale: 0.95,\n    transition: {\n      duration: 0.15,\n    },\n  },\n}\n\n// Tab content variants\nexport const tabContentVariants: Variants = {\n  hidden: { opacity: 0, x: 10 },\n  visible: { \n    opacity: 1, \n    x: 0,\n    transition: {\n      duration: 0.3,\n      ease: 'easeInOut',\n    },\n  },\n  exit: { \n    opacity: 0, \n    x: -10,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\n// Common transition presets\nexport const transitions = {\n  default: {\n    type: 'spring' as const,\n    stiffness: 300,\n    damping: 30,\n  },\n  fast: {\n    type: 'tween' as const,\n    duration: 0.2,\n  },\n  slow: {\n    type: 'tween' as const,\n    duration: 0.5,\n  },\n  bounce: {\n    type: 'spring' as const,\n    stiffness: 400,\n    damping: 25,\n  },\n}\n\n// Utility function to get reduced motion variants\nexport const getReducedMotionVariants = (variants: Variants, respectMotion = true): Variants => {\n  if (!respectMotion) return variants\n  \n  // Check if user prefers reduced motion\n  const prefersReducedMotion = typeof window !== 'undefined' \n    ? window.matchMedia('(prefers-reduced-motion: reduce)').matches\n    : false\n\n  if (!prefersReducedMotion) return variants\n\n  // Return simplified variants for reduced motion\n  const reducedVariants: Variants = {}\n  Object.keys(variants).forEach(key => {\n    const variant = variants[key]\n    if (typeof variant === 'object' && variant !== null) {\n      reducedVariants[key] = {\n        ...variant,\n        transition: { duration: 0.01 }, // Near-instant transitions\n      }\n    } else {\n      reducedVariants[key] = variant\n    }\n  })\n  \n  return reducedVariants\n}\n\n// Utility function to create staggered list animations\nexport const createStaggeredListVariants = (staggerDelay = 0.1): Variants => ({\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: staggerDelay,\n    },\n  },\n})\n\nexport const createStaggeredItemVariants = (direction: 'up' | 'down' | 'left' | 'right' = 'up'): Variants => {\n  const directionMap = {\n    up: { y: 20 },\n    down: { y: -20 },\n    left: { x: 20 },\n    right: { x: -20 },\n  }\n\n  return {\n    hidden: { \n      opacity: 0,\n      ...directionMap[direction],\n    },\n    visible: {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: {\n        type: 'spring',\n        stiffness: 300,\n        damping: 24,\n      },\n    },\n  }\n}\n\n// Pre-configured motion components with common variants\nexport const motionPresets = {\n  fadeIn: { \n    variants: fadeInVariants,\n    initial: 'hidden',\n    animate: 'visible',\n    exit: 'hidden',\n  },\n  slideIn: { \n    variants: slideInVariants,\n    initial: 'hidden',\n    animate: 'visible',\n    exit: 'hidden',\n  },\n  slideUp: { \n    variants: slideUpVariants,\n    initial: 'hidden',\n    animate: 'visible',\n    exit: 'hidden',\n  },\n  scaleIn: { \n    variants: scaleInVariants,\n    initial: 'hidden',\n    animate: 'visible',\n    exit: 'hidden',\n  },\n  staggerContainer: {\n    variants: staggerContainerVariants,\n    initial: 'hidden',\n    animate: 'visible',\n  },\n  staggerItem: {\n    variants: staggerItemVariants,\n  },\n}\n\nconst framerMotionExports = {\n  variants: {\n    fadeIn: fadeInVariants,\n    slideIn: slideInVariants,\n    slideUp: slideUpVariants,\n    scaleIn: scaleInVariants,\n    staggerContainer: staggerContainerVariants,\n    staggerItem: staggerItemVariants,\n    pageTransition: pageTransitionVariants,\n    modal: modalVariants,\n    modalOverlay: modalOverlayVariants,\n    sidebar: sidebarVariants,\n    cardHover: cardHoverVariants,\n    button: buttonVariants,\n    spinner: spinnerVariants,\n    notification: notificationVariants,\n    dropdown: dropdownVariants,\n    tabContent: tabContentVariants,\n  },\n  transitions,\n  presets: motionPresets,\n  utils: {\n    getReducedMotionVariants,\n    createStaggeredListVariants,\n    createStaggeredItemVariants,\n  },\n}\n\nexport default framerMotionExports"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/clients/env.ts"],"sourcesContent":["/**\n * Environment variables for client-side usage\n * Validation is handled centrally in config.ts\n */\nexport const env = {\n  NEXT_PUBLIC_SUPABASE_URL: process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  NEXT_PUBLIC_SUPABASE_ANON_KEY: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n  NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL!,\n  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY!,\n  NEXT_PUBLIC_POSTHOG_KEY: process.env.NEXT_PUBLIC_POSTHOG_KEY!,\n  NEXT_PUBLIC_POSTHOG_HOST: process.env.NEXT_PUBLIC_POSTHOG_HOST!,\n}\n\n// Individual exports for backward compatibility\nexport const supabaseUrl = env.NEXT_PUBLIC_SUPABASE_URL\nexport const supabaseAnonKey = env.NEXT_PUBLIC_SUPABASE_ANON_KEY"],"names":[],"mappings":"AAAA;;;CAGC;;;;;AAE2B;AADrB,MAAM,MAAM;IACjB,wBAAwB;IACxB,6BAA6B;IAC7B,mBAAmB;IACnB,kCAAkC;IAClC,uBAAuB;IACvB,wBAAwB;AAC1B;AAGO,MAAM,cAAc,IAAI,wBAAwB;AAChD,MAAM,kBAAkB,IAAI,6BAA6B","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/clients/supabase-client.ts"],"sourcesContent":["import { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { supabaseUrl, supabaseAnonKey } from './env';\n\nlet _supabase: SupabaseClient | null = null;\nlet _supabaseAnon: SupabaseClient | null = null;\n\nconst getSupabase = () => {\n  if (_supabase) return _supabase;\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Supabase environment variables are not set.');\n  }\n  _supabase = createClient(supabaseUrl, supabaseAnonKey);\n  return _supabase;\n};\n\nconst getSupabaseAnon = () => {\n  if (_supabaseAnon) return _supabaseAnon;\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Supabase environment variables are not set for anon client.');\n  }\n  _supabaseAnon = createClient(supabaseUrl, supabaseAnonKey, {\n    auth: { persistSession: false, autoRefreshToken: false, detectSessionInUrl: false },\n  });\n  return _supabaseAnon;\n};\n\nconst supabaseSingleton = { get client() { return getSupabase(); } };\nconst supabaseAnonSingleton = { get client() { return getSupabaseAnon(); } };\n\nexport const supabase = supabaseSingleton.client;\nexport const supabaseAnon = supabaseAnonSingleton.client;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,IAAI,YAAmC;AACvC,IAAI,gBAAuC;AAE3C,MAAM,cAAc;IAClB,IAAI,WAAW,OAAO;IACtB,IAAI,CAAC,mJAAA,CAAA,cAAW,IAAI,CAAC,mJAAA,CAAA,kBAAe,EAAE;QACpC,MAAM,IAAI,MAAM;IAClB;IACA,YAAY,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,mJAAA,CAAA,cAAW,EAAE,mJAAA,CAAA,kBAAe;IACrD,OAAO;AACT;AAEA,MAAM,kBAAkB;IACtB,IAAI,eAAe,OAAO;IAC1B,IAAI,CAAC,mJAAA,CAAA,cAAW,IAAI,CAAC,mJAAA,CAAA,kBAAe,EAAE;QACpC,MAAM,IAAI,MAAM;IAClB;IACA,gBAAgB,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,mJAAA,CAAA,cAAW,EAAE,mJAAA,CAAA,kBAAe,EAAE;QACzD,MAAM;YAAE,gBAAgB;YAAO,kBAAkB;YAAO,oBAAoB;QAAM;IACpF;IACA,OAAO;AACT;AAEA,MAAM,oBAAoB;IAAE,IAAI,UAAS;QAAE,OAAO;IAAe;AAAE;AACnE,MAAM,wBAAwB;IAAE,IAAI,UAAS;QAAE,OAAO;IAAmB;AAAE;AAEpE,MAAM,WAAW,kBAAkB,MAAM;AACzC,MAAM,eAAe,sBAAsB,MAAM","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/clients/supabase-safe.ts"],"sourcesContent":["import { supabase, supabaseAnon } from './supabase-client'\nimport type { SupabaseClient } from '@supabase/supabase-js'\n\n/**\n * Safe Supabase client wrapper that throws meaningful errors when client is null\n * This prevents runtime null reference errors and makes missing env vars obvious\n */\nclass SupabaseSafeWrapper {\n  private get client(): SupabaseClient {\n    if (!supabase) {\n      throw new Error(\n        'Supabase client is not initialized. Please check that NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY environment variables are set.'\n      )\n    }\n    return supabase\n  }\n\n  private get anonClient(): SupabaseClient {\n    if (!supabaseAnon) {\n      throw new Error(\n        'Supabase anonymous client is not initialized. Please check that NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY environment variables are set.'\n      )\n    }\n    return supabaseAnon\n  }\n\n  // Auth methods\n  get auth() {\n    return this.client.auth\n  }\n\n  // Database methods\n  from(table: string) {\n    return this.client.from(table)\n  }\n\n  // Storage methods\n  get storage() {\n    return this.client.storage\n  }\n\n  // Realtime methods\n  channel(name: string) {\n    return this.client.channel(name)\n  }\n\n  // Anonymous client access\n  get anon() {\n    return {\n      from: (table: string) => {\n        return this.anonClient.from(table)\n      },\n      auth: this.anonClient.auth,\n      storage: this.anonClient.storage\n    }\n  }\n\n  // Check if client is available\n  get isAvailable(): boolean {\n    return supabase !== null\n  }\n\n  // Get raw client (with null check)\n  getRawClient(): SupabaseClient {\n    return this.client\n  }\n\n  // Get raw anon client (with null check)\n  getRawAnonClient(): SupabaseClient {\n    return this.anonClient\n  }\n}\n\nexport const supabaseSafe = new SupabaseSafeWrapper()\nexport default supabaseSafe"],"names":[],"mappings":";;;;AAAA;;AAGA;;;CAGC,GACD,MAAM;IACJ,IAAY,SAAyB;QACnC,IAAI,CAAC,kKAAA,CAAA,WAAQ,EAAE;YACb,MAAM,IAAI,MACR;QAEJ;QACA,OAAO,kKAAA,CAAA,WAAQ;IACjB;IAEA,IAAY,aAA6B;QACvC,IAAI,CAAC,kKAAA,CAAA,eAAY,EAAE;YACjB,MAAM,IAAI,MACR;QAEJ;QACA,OAAO,kKAAA,CAAA,eAAY;IACrB;IAEA,eAAe;IACf,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;IACzB;IAEA,mBAAmB;IACnB,KAAK,KAAa,EAAE;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAC1B;IAEA,kBAAkB;IAClB,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO;IAC5B;IAEA,mBAAmB;IACnB,QAAQ,IAAY,EAAE;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IAC7B;IAEA,0BAA0B;IAC1B,IAAI,OAAO;QACT,OAAO;YACL,MAAM,CAAC;gBACL,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YAC9B;YACA,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI;YAC1B,SAAS,IAAI,CAAC,UAAU,CAAC,OAAO;QAClC;IACF;IAEA,+BAA+B;IAC/B,IAAI,cAAuB;QACzB,OAAO,kKAAA,CAAA,WAAQ,KAAK;IACtB;IAEA,mCAAmC;IACnC,eAA+B;QAC7B,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,wCAAwC;IACxC,mBAAmC;QACjC,OAAO,IAAI,CAAC,UAAU;IACxB;AACF;AAEO,MAAM,eAAe,IAAI;uCACjB","debugId":null}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/clients/index.ts"],"sourcesContent":["/**\n * Centralized API clients for TenantFlow frontend\n */\n\nimport { QueryClient } from '@tanstack/react-query'\n\n// Create QueryClient instance\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      gcTime: 10 * 60 * 1000, // 10 minutes\n      retry: (failureCount, error) => {\n        // Don't retry on 4xx errors\n        const httpError = error as { message?: string }\n        if (httpError?.message?.includes('40') || httpError?.message?.includes('Unauthorized')) {\n          return false\n        }\n        return failureCount < 3\n      },\n      retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n    },\n    mutations: {\n      retry: false, // Don't retry mutations by default\n    }\n  }\n})\n\n// Supabase clients for authentication and database\nexport { supabase, supabaseAnon } from './supabase-client'\nexport { default as supabaseSafe } from './supabase-safe'\n\n// NOTE: Generic HTTP client removed - use axios-client from /lib/api/ instead"],"names":[],"mappings":"AAAA;;CAEC;;;AAED;AAwBA,mDAAmD;AACnD;AACA,sRAEA,8EAA8E;;AAzBvE,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW,CAAC;IACzC,gBAAgB;QACd,SAAS;YACP,WAAW,IAAI,KAAK;YACpB,QAAQ,KAAK,KAAK;YAClB,OAAO,CAAC,cAAc;oBAGhB,oBAAsC;gBAF1C,4BAA4B;gBAC5B,MAAM,YAAY;gBAClB,IAAI,CAAA,sBAAA,iCAAA,qBAAA,UAAW,OAAO,cAAlB,yCAAA,mBAAoB,QAAQ,CAAC,WAAS,sBAAA,iCAAA,sBAAA,UAAW,OAAO,cAAlB,0CAAA,oBAAoB,QAAQ,CAAC,kBAAiB;oBACtF,OAAO;gBACT;gBACA,OAAO,eAAe;YACxB;YACA,YAAY,CAAC,eAAiB,KAAK,GAAG,CAAC,OAAO,KAAK,cAAc;QACnE;QACA,WAAW;YACT,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 645, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/toast-messages.ts"],"sourcesContent":["export const toastMessages = {\n  auth: {\n    signInSuccess: 'Successfully signed in!',\n    signInError: 'Failed to sign in. Please check your credentials.',\n    signOutSuccess: 'Successfully signed out!',\n    signOutError: 'Failed to sign out. Please try again.',\n    sessionExpired: 'Your session has expired. Please sign in again.',\n    emailConfirmed: 'Email confirmed successfully!',\n    passwordUpdated: 'Password updated successfully!',\n    profileUpdated: 'Profile updated successfully!',\n  },\n  subscription: {\n    created: 'Subscription created successfully!',\n    updated: 'Subscription updated successfully!',\n    cancelled: 'Subscription cancelled successfully!',\n    error: 'Failed to process subscription. Please try again.',\n  },\n  general: {\n    success: 'Operation completed successfully!',\n    error: 'An error occurred. Please try again.',\n    loading: 'Loading...',\n    saved: 'Changes saved successfully!',\n    deleted: 'Deleted successfully!',\n    created: 'Created successfully!',\n    updated: 'Updated successfully!',\n  },\n  property: {\n    created: 'Property created successfully!',\n    updated: 'Property updated successfully!',\n    deleted: 'Property deleted successfully!',\n    error: 'Failed to process property. Please try again.',\n  },\n  tenant: {\n    created: 'Tenant created successfully!',\n    updated: 'Tenant updated successfully!',\n    deleted: 'Tenant deleted successfully!',\n    error: 'Failed to process tenant. Please try again.',\n  },\n  maintenance: {\n    created: 'Maintenance request created successfully!',\n    updated: 'Maintenance request updated successfully!',\n    deleted: 'Maintenance request deleted successfully!',\n    error: 'Failed to process maintenance request. Please try again.',\n  },\n  lease: {\n    created: 'Lease created successfully!',\n    updated: 'Lease updated successfully!',\n    deleted: 'Lease deleted successfully!',\n    error: 'Failed to process lease. Please try again.',\n  },\n  unit: {\n    success: 'Unit operation completed successfully!',\n    error: 'Failed to process unit. Please try again.',\n    created: 'Unit created successfully!',\n    updated: 'Unit updated successfully!',\n    deleted: 'Unit deleted successfully!',\n  },\n}"],"names":[],"mappings":";;;AAAO,MAAM,gBAAgB;IAC3B,MAAM;QACJ,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,iBAAiB;QACjB,gBAAgB;IAClB;IACA,cAAc;QACZ,SAAS;QACT,SAAS;QACT,WAAW;QACX,OAAO;IACT;IACA,SAAS;QACP,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;QACP,SAAS;QACT,SAAS;QACT,SAAS;IACX;IACA,UAAU;QACR,SAAS;QACT,SAAS;QACT,SAAS;QACT,OAAO;IACT;IACA,QAAQ;QACN,SAAS;QACT,SAAS;QACT,SAAS;QACT,OAAO;IACT;IACA,aAAa;QACX,SAAS;QACT,SAAS;QACT,SAAS;QACT,OAAO;IACT;IACA,OAAO;QACL,SAAS;QACT,SAAS;QACT,SAAS;QACT,OAAO;IACT;IACA,MAAM;QACJ,SAAS;QACT,OAAO;QACP,SAAS;QACT,SAAS;QACT,SAAS;IACX;AACF","debugId":null}},
    {"offset": {"line": 715, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/debug-auth.ts"],"sourcesContent":["interface SupabaseSession {\n  user?: {\n    id: string;\n    email?: string;\n  };\n  expires_at?: number;\n}\n\ninterface SupabaseError {\n  message?: string;\n  status?: number;\n  code?: string;\n}\n\nexport const debugSupabaseAuth = {\n  enabled: process.env.NODE_ENV === 'development',\n  \n  log: (message: string, data?: unknown) => {\n    if (debugSupabaseAuth.enabled) {\n      console.log(`[Supabase Auth] ${message}`, data || '')\n    }\n  },\n  \n  error: (message: string, error?: unknown) => {\n    if (debugSupabaseAuth.enabled) {\n      console.error(`[Supabase Auth Error] ${message}`, error || '')\n    }\n  },\n  \n  warn: (message: string, data?: unknown) => {\n    if (debugSupabaseAuth.enabled) {\n      console.warn(`[Supabase Auth Warning] ${message}`, data || '')\n    }\n  },\n  \n  info: (message: string, data?: unknown) => {\n    if (debugSupabaseAuth.enabled) {\n      console.info(`[Supabase Auth Info] ${message}`, data || '')\n    }\n  },\n  \n  // Helper to log session state\n  logSession: (session: SupabaseSession | null) => {\n    if (debugSupabaseAuth.enabled) {\n      console.log('[Supabase Auth] Session State:', {\n        hasSession: !!session,\n        userId: session?.user?.id,\n        email: session?.user?.email,\n        expiresAt: session?.expires_at,\n      })\n    }\n  },\n  \n  // Helper to log auth errors\n  logError: (error: SupabaseError | unknown) => {\n    if (debugSupabaseAuth.enabled) {\n      const authError = error as SupabaseError;\n      console.error('[Supabase Auth] Auth Error:', {\n        message: authError?.message,\n        status: authError?.status,\n        code: authError?.code,\n        details: error,\n      })\n    }\n  },\n}"],"names":[],"mappings":";;;AAeW;AADJ,MAAM,oBAAoB;IAC/B,SAAS,oDAAyB;IAElC,KAAK,CAAC,SAAiB;QACrB,IAAI,kBAAkB,OAAO,EAAE;YAC7B,QAAQ,GAAG,CAAC,AAAC,mBAA0B,OAAR,UAAW,QAAQ;QACpD;IACF;IAEA,OAAO,CAAC,SAAiB;QACvB,IAAI,kBAAkB,OAAO,EAAE;YAC7B,QAAQ,KAAK,CAAC,AAAC,yBAAgC,OAAR,UAAW,SAAS;QAC7D;IACF;IAEA,MAAM,CAAC,SAAiB;QACtB,IAAI,kBAAkB,OAAO,EAAE;YAC7B,QAAQ,IAAI,CAAC,AAAC,2BAAkC,OAAR,UAAW,QAAQ;QAC7D;IACF;IAEA,MAAM,CAAC,SAAiB;QACtB,IAAI,kBAAkB,OAAO,EAAE;YAC7B,QAAQ,IAAI,CAAC,AAAC,wBAA+B,OAAR,UAAW,QAAQ;QAC1D;IACF;IAEA,8BAA8B;IAC9B,YAAY,CAAC;QACX,IAAI,kBAAkB,OAAO,EAAE;gBAGnB,eACD;YAHT,QAAQ,GAAG,CAAC,kCAAkC;gBAC5C,YAAY,CAAC,CAAC;gBACd,MAAM,EAAE,oBAAA,+BAAA,gBAAA,QAAS,IAAI,cAAb,oCAAA,cAAe,EAAE;gBACzB,KAAK,EAAE,oBAAA,+BAAA,iBAAA,QAAS,IAAI,cAAb,qCAAA,eAAe,KAAK;gBAC3B,SAAS,EAAE,oBAAA,8BAAA,QAAS,UAAU;YAChC;QACF;IACF;IAEA,4BAA4B;IAC5B,UAAU,CAAC;QACT,IAAI,kBAAkB,OAAO,EAAE;YAC7B,MAAM,YAAY;YAClB,QAAQ,KAAK,CAAC,+BAA+B;gBAC3C,OAAO,EAAE,sBAAA,gCAAA,UAAW,OAAO;gBAC3B,MAAM,EAAE,sBAAA,gCAAA,UAAW,MAAM;gBACzB,IAAI,EAAE,sBAAA,gCAAA,UAAW,IAAI;gBACrB,SAAS;YACX;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/supabase-auth-processor.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { motion } from '@/lib/framer-motion'\nimport { CheckCircle, XCircle, Loader2 } from 'lucide-react'\nimport { supabase } from '@/lib/clients'\nimport { toast } from 'sonner'\nimport { useQueryClient } from '@tanstack/react-query'\nimport { toastMessages } from '@/lib/toast-messages'\nimport { debugSupabaseAuth } from '@/lib/debug-auth'\nimport type { Session, AuthError } from '@supabase/supabase-js'\n\ntype ProcessingState = 'loading' | 'success' | 'error'\n\ninterface ProcessingStatus {\n  state: ProcessingState\n  message: string\n  details?: string\n}\n\n/**\n * Simplified Supabase authentication processor\n * Handles Supabase auth callbacks and lets Supabase manage sessions\n */\nexport function SupabaseAuthProcessor() {\n  const router = useRouter()\n  const queryClient = useQueryClient()\n  const [status, setStatus] = useState<ProcessingStatus>({\n    state: 'loading',\n    message: 'Processing authentication...',\n  })\n\n  useEffect(() => {\n    let mounted = true\n    \n    const processAuthentication = async () => {\n      // Log authentication processing start\n      debugSupabaseAuth.log('Starting authentication processing')\n      \n      try {\n        if (!supabase) {\n          throw new Error('Authentication service not available')\n        }\n\n        // Check URL hash first for email confirmation tokens\n        const hashParams = new URLSearchParams(window.location.hash.substring(1))\n        const accessToken = hashParams.get('access_token')\n        const refreshToken = hashParams.get('refresh_token')\n        const type = hashParams.get('type')\n        const error = hashParams.get('error')\n        const errorCode = hashParams.get('error_code')\n        const errorDescription = hashParams.get('error_description')\n        \n        // Check if there's an error in the hash\n        if (error || errorCode) {\n          \n          // Even if there's an error, check if we have a valid session\n          // This can happen when the email link expires but the user is already logged in\n          const { data: { session } } = await supabase.auth.getSession()\n          \n          if (session?.user) {\n            \n            // Invalidate auth queries to ensure fresh user data\n            await queryClient.invalidateQueries({ queryKey: ['auth'] })\n            \n            setStatus({\n              state: 'success',\n              message: 'Already authenticated!',\n              details: 'Redirecting to dashboard...',\n            })\n            \n            toast.success('Welcome back! You are already signed in.')\n            \n            // Clear the error hash from URL\n            window.history.replaceState(null, '', window.location.pathname + window.location.search)\n            \n            setTimeout(() => {\n              void router.push('/dashboard')\n            }, 500)\n            return\n          }\n          \n          // If we have an OTP expired error, show specific message\n          if (errorCode === 'otp_expired') {\n            setStatus({\n              state: 'error',\n              message: 'Email link expired',\n              details: 'Please request a new confirmation email',\n            })\n            \n            toast.error('Email confirmation link has expired. Please sign up again.')\n            \n            setTimeout(() => {\n              void router.push('/auth/login')\n            }, 3000)\n            return\n          }\n          \n          // Other errors\n          throw new Error(errorDescription || error || 'Authentication failed')\n        }\n        \n        if (accessToken && refreshToken) {\n          // Email confirmation tokens found\n          setStatus({\n            state: 'loading',\n            message: type === 'signup' ? 'Confirming your email...' : 'Completing sign in...',\n            details: 'Setting up your session',\n          })\n          \n          const sessionStart = performance.now()\n          \n          try {\n            // Add a timeout to setSession to prevent hanging\n            const setSessionPromise = supabase.auth.setSession({\n              access_token: accessToken,\n              refresh_token: refreshToken\n            })\n            \n            const timeoutPromise = new Promise((_, reject) => \n              setTimeout(() => reject(new Error('Session setup timeout')), 10000)\n            )\n            \n            const { data, error } = await Promise.race([\n              setSessionPromise,\n              timeoutPromise\n            ]) as { data: { session: Session | null } | null; error: AuthError | null }\n            \n            const setSessionTime = performance.now() - sessionStart\n            \n            if (setSessionTime > 5000) {\n              console.warn('[Auth] Session setup is taking unusually long!', setSessionTime)\n            }\n            \n            if (error) {\n              console.error('[Auth] SetSession error:', error)\n              throw error\n            }\n            \n            if (data?.session && mounted) {\n              // Verify the session was actually stored\n              const { data: { session: verifiedSession } } = await supabase.auth.getSession()\n              console.log('[Auth] Verified session stored:', !!verifiedSession)\n              \n              // Invalidate auth queries to ensure fresh user data\n              await queryClient.invalidateQueries({ queryKey: ['auth'] })\n              \n              setStatus({\n                state: 'success',\n                message: type === 'signup' ? 'Email confirmed!' : 'Authentication successful!',\n                details: 'Welcome to TenantFlow!',\n              })\n              \n              toast.success(type === 'signup' ? toastMessages.auth.emailConfirmed : toastMessages.auth.signInSuccess)\n              \n              // Clear the hash from URL to prevent reprocessing\n              window.history.replaceState(null, '', window.location.pathname + window.location.search)\n              \n              // Navigate to dashboard\n              setTimeout(() => {\n                void router.push('/dashboard')\n              }, 500)\n              return\n            } else {\n              console.warn('[Auth] No session returned from setSession')\n            }\n          } catch (err) {\n            console.error('[Auth] Error setting session from tokens:', err)\n            \n            // If setSession fails but we have valid tokens, try to proceed anyway\n            // The tokens in the URL are valid, Supabase client should pick them up\n            if (accessToken && refreshToken && type === 'signup') {\n              setStatus({\n                state: 'success',\n                message: 'Email confirmed!',\n                details: 'Redirecting to dashboard...',\n              })\n              \n              toast.success('Email confirmed! Welcome to TenantFlow!')\n              \n              // Clear the hash to prevent reprocessing\n              window.history.replaceState(null, '', window.location.pathname + window.location.search)\n              \n              setTimeout(() => {\n                void router.push('/dashboard')\n              }, 1000)\n              return\n            }\n            \n            throw err\n          }\n        }\n        \n        // Check for OAuth code in URL params (OAuth callback)\n        const params = new URLSearchParams(window.location.search)\n        const code = params.get('code')\n        \n        if (code) {\n          // We have an auth code, exchange it for session\n          setStatus({\n            state: 'loading',\n            message: 'Completing sign in...',\n            details: 'Exchanging authentication code',\n          })\n          \n          try {\n            const { data, error } = await supabase.auth.exchangeCodeForSession(code)\n            \n            if (error) throw error\n            \n            if (data.session && mounted) {\n              // Invalidate auth queries to ensure fresh user data\n              await queryClient.invalidateQueries({ queryKey: ['auth'] })\n              \n              setStatus({\n                state: 'success',\n                message: 'Authentication successful!',\n                details: 'Welcome back!',\n              })\n              \n              toast.success(toastMessages.auth.signInSuccess)\n              void router.push('/dashboard')\n              return\n            }\n          } catch (err) {\n            // Handle PKCE cross-browser error gracefully\n            if (err instanceof Error && err.message.includes('code verifier')) {\n              console.error('[Auth] PKCE error - user likely clicked email link in different browser')\n              setStatus({\n                state: 'error',\n                message: 'Authentication error',\n                details: 'Please sign in again or use the same browser you signed up with',\n              })\n              toast.error('Please use the same browser you signed up with')\n              setTimeout(() => void router.push('/auth/login'), 3000)\n              return\n            }\n            throw err\n          }\n        }\n\n        // Check if this might be an email confirmation without tokens\n        // When Supabase has \"Confirm email\" enabled in auth settings, it redirects\n        // to the callback URL after email confirmation but WITHOUT auth tokens\n        const searchParams = new URLSearchParams(window.location.search)\n        const isEmailConfirmation = searchParams.has('type') && searchParams.get('type') === 'signup'\n        \n        // Check for existing session\n        const { data: { session }, error: sessionError } = await supabase.auth.getSession()\n\n        if (sessionError) {\n          throw sessionError\n        }\n\n        if (!mounted) return\n\n        if (session?.user) {\n          // Invalidate auth queries to ensure fresh user data\n          await queryClient.invalidateQueries({ queryKey: ['auth'] })\n          \n          // Success! User is authenticated\n          setStatus({\n            state: 'success',\n            message: 'Authentication successful!',\n            details: 'Welcome back!',\n          })\n          \n          toast.success(toastMessages.auth.signInSuccess)\n          void router.push('/dashboard')\n        } else if (isEmailConfirmation) {\n          // This is likely an email confirmation that succeeded but didn't include tokens\n          // Show success message and redirect to login with a helpful message\n          setStatus({\n            state: 'success',\n            message: 'Email confirmed successfully!',\n            details: 'Please sign in with your credentials',\n          })\n          \n          toast.success('Email confirmed! Please sign in to continue.')\n          \n          setTimeout(() => {\n            void router.push('/auth/login?emailConfirmed=true')\n          }, 2000)\n        } else {\n          // No session found - redirect to login\n          setStatus({\n            state: 'error',\n            message: 'Authentication required',\n            details: 'Please sign in to continue',\n          })\n\n          setTimeout(() => {\n            void router.push('/auth/login')\n          }, 2000)\n        }\n      } catch (error) {\n        if (!mounted) return\n        \n        console.error('Auth processing error:', error)\n        \n        setStatus({\n          state: 'error',\n          message: 'Authentication error',\n          details: error instanceof Error ? error.message : 'Please try signing in again',\n        })\n        \n        toast.error('Authentication failed')\n\n        setTimeout(() => {\n          void router.push('/auth/login')\n        }, 2000)\n      }\n    }\n\n    // Start processing immediately\n    void processAuthentication()\n    \n    // Add a timeout to prevent hanging\n    const timeoutId = setTimeout(() => {\n      if (mounted && status.state === 'loading') {\n        setStatus({\n          state: 'error',\n          message: 'Authentication timeout',\n          details: 'Taking too long, please try again',\n        })\n        toast.error('Authentication timeout')\n        void router.push('/auth/login')\n      }\n    }, 30000) // 30 second timeout - increased for slow connections\n    \n    // Cleanup\n    return () => {\n      mounted = false\n      clearTimeout(timeoutId)\n    }\n  }, [queryClient, status.state, router])\n\n  const getIcon = () => {\n    switch (status.state) {\n      case 'loading':\n        return <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n      case 'success':\n        return <CheckCircle className=\"h-12 w-12 text-green-500\" />\n      case 'error':\n        return <XCircle className=\"h-12 w-12 text-red-500\" />\n      default:\n        return <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n    }\n  }\n\n  const getColorClasses = () => {\n    switch (status.state) {\n      case 'loading':\n        return 'border-primary/20 bg-primary/5'\n      case 'success':\n        return 'border-green-200 bg-green-50'\n      case 'error':\n        return 'border-red-200 bg-red-50'\n      default:\n        return 'border-gray-200 bg-gray-50'\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-purple-50 px-4\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.95 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.3 }}\n        className={`w-full max-w-md rounded-2xl border-2 p-8 text-center shadow-xl backdrop-blur-sm ${getColorClasses()}`}\n      >\n        <motion.div\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          transition={{ delay: 0.1, type: 'spring', stiffness: 200 }}\n          className=\"mb-6 flex justify-center\"\n        >\n          {getIcon()}\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n        >\n          <h1 className=\"mb-2 text-2xl font-bold text-foreground\">\n            {status.message}\n          </h1>\n\n          {status.details && (\n            <p className=\"text-muted-foreground\">\n              {status.details}\n            </p>\n          )}\n\n          {status.state === 'loading' && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.4 }}\n              className=\"mt-4\"\n            >\n              <div className=\"h-1 w-full bg-gray-200 rounded-full overflow-hidden\">\n                <motion.div\n                  className=\"h-full bg-primary rounded-full\"\n                  initial={{ width: 0 }}\n                  animate={{ width: '100%' }}\n                  transition={{ duration: 2, ease: 'easeInOut' }}\n                />\n              </div>\n            </motion.div>\n          )}\n\n          {status.state === 'error' && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.4 }}\n              className=\"mt-4\"\n            >\n              <button\n                onClick={() => void router.push('/auth/login')}\n                className=\"text-primary hover:text-primary/80 font-semibold underline transition-colors\"\n              >\n                Return to login\n              </button>\n            </motion.div>\n          )}\n        </motion.div>\n      </motion.div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1318, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/react-query/query-client.ts"],"sourcesContent":["/**\n * React Query Client Configuration\n * Centralized configuration for optimal caching and performance\n */\nimport { QueryClient } from '@tanstack/react-query'\nimport { toast } from 'sonner'\n\n/**\n * Global error handler for React Query\n */\nfunction queryErrorHandler(error: unknown): void {\n  const message = error instanceof Error \n    ? error.message \n    : 'An unexpected error occurred'\n  \n  // Only show errors for user-initiated actions\n  if (message !== 'Network error' && !message.includes('401')) {\n    toast.error(message)\n  }\n}\n\n/**\n * Create and configure QueryClient with optimized defaults\n */\nexport function createQueryClient(): QueryClient {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        // Data considered fresh for 5 minutes\n        staleTime: 5 * 60 * 1000,\n        // Keep cache for 10 minutes\n        gcTime: 10 * 60 * 1000,\n        // Retry failed requests 3 times with exponential backoff\n        retry: (failureCount, error) => {\n          if (failureCount >= 3) return false\n          if (error instanceof Error) {\n            // Don't retry on 4xx errors except 408 (timeout) and 429 (rate limit)\n            if (error.message.includes('40') && \n                !error.message.includes('408') && \n                !error.message.includes('429')) {\n              return false\n            }\n          }\n          return true\n        },\n        // Exponential backoff\n        retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n        // Refetch on window focus in production only\n        refetchOnWindowFocus: process.env.NODE_ENV === 'production',\n        // Don't refetch on reconnect by default\n        refetchOnReconnect: 'always',\n      },\n      mutations: {\n        // Use global error handler\n        onError: queryErrorHandler,\n        // Retry mutations once\n        retry: 1,\n        retryDelay: 1000,\n      },\n    },\n  })\n}\n\n/**\n * Query key factory for consistent key generation\n */\nexport const queryKeys = {\n  all: ['tenantflow'] as const,\n  \n  // Auth\n  auth: () => [...queryKeys.all, 'auth'] as const,\n  session: () => [...queryKeys.auth(), 'session'] as const,\n  user: () => [...queryKeys.auth(), 'user'] as const,\n  \n  // Properties\n  properties: () => [...queryKeys.all, 'properties'] as const,\n  propertyList: (filters?: Record<string, unknown>) => \n    [...queryKeys.properties(), 'list', filters] as const,\n  propertyDetail: (id: string) => \n    [...queryKeys.properties(), 'detail', id] as const,\n  propertyStats: () => \n    [...queryKeys.properties(), 'stats'] as const,\n  \n  // Tenants\n  tenants: () => [...queryKeys.all, 'tenants'] as const,\n  tenantList: (filters?: Record<string, unknown>) => \n    [...queryKeys.tenants(), 'list', filters] as const,\n  tenantDetail: (id: string) => \n    [...queryKeys.tenants(), 'detail', id] as const,\n  \n  // Leases\n  leases: () => [...queryKeys.all, 'leases'] as const,\n  leaseList: (filters?: Record<string, unknown>) => \n    [...queryKeys.leases(), 'list', filters] as const,\n  leaseDetail: (id: string) => \n    [...queryKeys.leases(), 'detail', id] as const,\n  leasesByProperty: (propertyId: string) => \n    [...queryKeys.leases(), 'by-property', propertyId] as const,\n  \n  // Units\n  units: () => [...queryKeys.all, 'units'] as const,\n  unitList: (filters?: Record<string, unknown>) => \n    [...queryKeys.units(), 'list', filters] as const,\n  unitDetail: (id: string) => \n    [...queryKeys.units(), 'detail', id] as const,\n  unitsByProperty: (propertyId: string) => \n    [...queryKeys.units(), 'by-property', propertyId] as const,\n  \n  // Maintenance\n  maintenance: () => [...queryKeys.all, 'maintenance'] as const,\n  maintenanceList: (filters?: Record<string, unknown>) => \n    [...queryKeys.maintenance(), 'list', filters] as const,\n  maintenanceDetail: (id: string) => \n    [...queryKeys.maintenance(), 'detail', id] as const,\n  \n  // Dashboard\n  dashboard: () => [...queryKeys.all, 'dashboard'] as const,\n  dashboardStats: () => \n    [...queryKeys.dashboard(), 'stats'] as const,\n  dashboardOverview: () => \n    [...queryKeys.dashboard(), 'overview'] as const,\n  dashboardActivity: () => \n    [...queryKeys.dashboard(), 'activity'] as const,\n  \n  // Billing\n  billing: () => [...queryKeys.all, 'billing'] as const,\n  subscription: () => \n    [...queryKeys.billing(), 'subscription'] as const,\n  invoices: () => \n    [...queryKeys.billing(), 'invoices'] as const,\n  paymentMethods: () => \n    [...queryKeys.billing(), 'payment-methods'] as const,\n} as const\n\n/**\n * Mutation key factory for consistent mutation identification\n */\nexport const mutationKeys = {\n  // Properties\n  createProperty: ['create-property'] as const,\n  updateProperty: ['update-property'] as const,\n  deleteProperty: ['delete-property'] as const,\n  \n  // Tenants\n  createTenant: ['create-tenant'] as const,\n  updateTenant: ['update-tenant'] as const,\n  deleteTenant: ['delete-tenant'] as const,\n  \n  // Leases\n  createLease: ['create-lease'] as const,\n  updateLease: ['update-lease'] as const,\n  deleteLease: ['delete-lease'] as const,\n  \n  // Units\n  createUnit: ['create-unit'] as const,\n  updateUnit: ['update-unit'] as const,\n  deleteUnit: ['delete-unit'] as const,\n  \n  // Maintenance\n  createMaintenanceRequest: ['create-maintenance'] as const,\n  updateMaintenanceRequest: ['update-maintenance'] as const,\n  deleteMaintenanceRequest: ['delete-maintenance'] as const,\n  \n  // Auth\n  login: ['login'] as const,\n  logout: ['logout'] as const,\n  signup: ['signup'] as const,\n  forgotPassword: ['forgot-password'] as const,\n  resetPassword: ['reset-password'] as const,\n  \n  // Billing\n  createCheckoutSession: ['create-checkout'] as const,\n  cancelSubscription: ['cancel-subscription'] as const,\n  updatePaymentMethod: ['update-payment-method'] as const,\n} as const\n\n// Export singleton instance for SSR\nlet browserQueryClient: QueryClient | undefined\n\nexport function getQueryClient(): QueryClient {\n  if (typeof window === 'undefined') {\n    // Server: always create new instance\n    return createQueryClient()\n  }\n  // Browser: reuse instance\n  if (!browserQueryClient) {\n    browserQueryClient = createQueryClient()\n  }\n  return browserQueryClient\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1616, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/providers/query-provider.tsx"],"sourcesContent":["/**\n * React Query provider\n * Provides React Query context for data fetching\n */\n'use client';\n\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { type ReactNode, useState } from 'react';\nimport { getQueryClient } from '@/lib/react-query/query-client';\n\nexport function QueryProvider({ children }: { children: ReactNode }) {\n  // Use the centralized QueryClient configuration\n  const [queryClient] = useState(() => getQueryClient());\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  );\n}"],"names":[],"mappings":"AAAA;;;CAGC;;;;AAGD;AACA;AACA;;;AAJA;;;;AAMO,SAAS,cAAc,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;;IAC5B,gDAAgD;IAChD,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;kCAAE,IAAM,CAAA,GAAA,sKAAA,CAAA,iBAAc,AAAD;;IAElD,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC1B;;;;;;AAGP;GATgB;KAAA","debugId":null}}]
}