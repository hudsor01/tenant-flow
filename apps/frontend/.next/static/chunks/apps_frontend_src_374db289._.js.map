{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/ui/variants.ts"],"sourcesContent":["/**\n * Design System Variant Library\n * \n * Centralized variant definitions using CVA (class-variance-authority)\n * for consistent styling across all components.\n * \n * Architecture:\n * - Base variants for common UI patterns\n * - Extendable variants for custom components\n * - Type-safe variant props\n */\n\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\n// ============================================================================\n// CONTAINER VARIANTS\n// ============================================================================\n\nexport const containerVariants = cva(\n  \"w-full mx-auto px-4\", // Base container styles\n  {\n    variants: {\n      size: {\n        sm: \"max-w-sm\",\n        md: \"max-w-md\", \n        lg: \"max-w-lg\",\n        xl: \"max-w-xl\",\n        \"2xl\": \"max-w-2xl\",\n        \"4xl\": \"max-w-4xl\",\n        \"6xl\": \"max-w-6xl\",\n        \"7xl\": \"max-w-7xl\",\n        full: \"max-w-none\"\n      },\n      padding: {\n        none: \"px-0\",\n        sm: \"px-4\",\n        md: \"px-4 sm:px-6\",\n        lg: \"px-4 sm:px-6 lg:px-8\",\n        xl: \"px-6 sm:px-8 lg:px-12\"\n      }\n    },\n    defaultVariants: {\n      size: \"7xl\",\n      padding: \"lg\"\n    }\n  }\n)\n\n// ============================================================================\n// SECTION VARIANTS  \n// ============================================================================\n\nexport const sectionVariants = cva(\n  \"w-full\", // Base section styles\n  {\n    variants: {\n      spacing: {\n        none: \"py-0\",\n        sm: \"py-8 md:py-12\",\n        md: \"py-12 md:py-16\",\n        lg: \"py-16 md:py-20\", \n        xl: \"py-20 md:py-24\",\n        \"2xl\": \"py-24 md:py-32\"\n      },\n      background: {\n        transparent: \"bg-transparent\",\n        muted: \"bg-muted/30\",\n        card: \"bg-card\",\n        gradient: \"bg-gradient-subtle\"\n      }\n    },\n    defaultVariants: {\n      spacing: \"lg\",\n      background: \"transparent\"\n    }\n  }\n)\n\n// ============================================================================\n// CARD VARIANTS\n// ============================================================================\n\nexport const cardVariants = cva(\n  \"bg-card text-card-foreground rounded-xl border shadow-sm transition-all duration-300\",\n  {\n    variants: {\n      variant: {\n        default: \"border-border\",\n        elevated: \"shadow-md hover:shadow-lg\",\n        interactive: \"hover:shadow-md hover:border-primary/20 cursor-pointer\",\n        accent: \"border-accent/20 bg-gradient-subtle\",\n        gradient: \"border-0 bg-gradient-primary text-primary-foreground\"\n      },\n      size: {\n        sm: \"p-4\",\n        md: \"p-6\", \n        lg: \"p-8\",\n        xl: \"p-10\"\n      },\n      spacing: {\n        compact: \"gap-3\",\n        comfortable: \"gap-6\",\n        spacious: \"gap-8\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n      spacing: \"comfortable\"\n    }\n  }\n)\n\n// ============================================================================\n// STAT CARD VARIANTS\n// ============================================================================\n\nexport const statCardVariants = cva(\n  \"rounded-lg p-3 transition-colors\",\n  {\n    variants: {\n      variant: {\n        primary: \"bg-blue-50 text-blue-700\",\n        success: \"bg-green-50 text-green-700\",\n        warning: \"bg-orange-50 text-orange-700\", \n        error: \"bg-red-50 text-red-700\",\n        accent: \"bg-purple-50 text-purple-700\",\n        muted: \"bg-muted text-muted-foreground\"\n      },\n      size: {\n        sm: \"p-2\",\n        md: \"p-3\",\n        lg: \"p-4\"\n      }\n    },\n    defaultVariants: {\n      variant: \"muted\",\n      size: \"md\"\n    }\n  }\n)\n\n// ============================================================================\n// FORM VARIANTS\n// ============================================================================\n\nexport const formGroupVariants = cva(\n  \"space-y-2\",\n  {\n    variants: {\n      orientation: {\n        vertical: \"space-y-2\",\n        horizontal: \"flex items-center space-y-0 space-x-4\"\n      },\n      size: {\n        sm: \"space-y-1\",\n        md: \"space-y-2\",\n        lg: \"space-y-3\"\n      }\n    },\n    defaultVariants: {\n      orientation: \"vertical\",\n      size: \"md\"\n    }\n  }\n)\n\n// ============================================================================\n// GRID VARIANTS\n// ============================================================================\n\nexport const gridVariants = cva(\n  \"grid gap-4\",\n  {\n    variants: {\n      cols: {\n        1: \"grid-cols-1\",\n        2: \"grid-cols-1 md:grid-cols-2\", \n        3: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3\",\n        4: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\",\n        auto: \"grid-cols-[repeat(auto-fit,minmax(250px,1fr))]\"\n      },\n      gap: {\n        sm: \"gap-2\",\n        md: \"gap-4\",\n        lg: \"gap-6\",\n        xl: \"gap-8\"\n      }\n    },\n    defaultVariants: {\n      cols: 3,\n      gap: \"md\"\n    }\n  }\n)\n\n// ============================================================================\n// LAYOUT STACK VARIANTS\n// ============================================================================\n\nexport const stackVariants = cva(\n  \"flex\",\n  {\n    variants: {\n      direction: {\n        vertical: \"flex-col\",\n        horizontal: \"flex-row\"\n      },\n      align: {\n        start: \"items-start\",\n        center: \"items-center\", \n        end: \"items-end\",\n        stretch: \"items-stretch\"\n      },\n      justify: {\n        start: \"justify-start\",\n        center: \"justify-center\",\n        end: \"justify-end\",\n        between: \"justify-between\",\n        around: \"justify-around\"\n      },\n      spacing: {\n        none: \"gap-0\",\n        xs: \"gap-1\",\n        sm: \"gap-2\",\n        md: \"gap-4\",\n        lg: \"gap-6\",\n        xl: \"gap-8\",\n        \"2xl\": \"gap-12\"\n      },\n      wrap: {\n        true: \"flex-wrap\",\n        false: \"flex-nowrap\"\n      }\n    },\n    defaultVariants: {\n      direction: \"vertical\",\n      align: \"stretch\",\n      justify: \"start\",\n      spacing: \"md\",\n      wrap: false\n    }\n  }\n)\n\n// ============================================================================\n// BADGE VARIANTS\n// ============================================================================\n\nexport const badgeVariants = cva(\n  \"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium transition-colors\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary/10 text-primary border border-primary/20\",\n        secondary: \"bg-secondary/10 text-secondary border border-secondary/20\",\n        success: \"bg-green-50 text-green-700 border border-green-200\",\n        warning: \"bg-orange-50 text-orange-700 border border-orange-200\",\n        error: \"bg-red-50 text-red-700 border border-red-200\",\n        outline: \"border border-border text-foreground\",\n        gradient: \"bg-gradient-primary text-primary-foreground border-0\"\n      },\n      size: {\n        sm: \"px-2 py-0.5 text-xs\",\n        md: \"px-2.5 py-0.5 text-xs\", \n        lg: \"px-3 py-1 text-sm\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\"\n    }\n  }\n)\n\n// ============================================================================\n// ACTION VARIANTS (for dropdowns, menus)\n// ============================================================================\n\nexport const actionVariants = cva(\n  \"flex items-center gap-2 transition-colors rounded-md\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-accent hover:text-accent-foreground\",\n        destructive: \"text-red-600 hover:bg-red-50 hover:text-red-700\",\n        success: \"text-green-600 hover:bg-green-50 hover:text-green-700\"\n      },\n      size: {\n        sm: \"px-2 py-1.5 text-sm\",\n        md: \"px-3 py-2 text-sm\",\n        lg: \"px-4 py-2.5 text-base\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\", \n      size: \"md\"\n    }\n  }\n)\n\n// ============================================================================\n// ENHANCED BUTTON VARIANTS (extending existing)\n// ============================================================================\n\nexport const enhancedButtonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors duration-200 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow-sm hover:bg-primary/90\",\n        destructive: \"bg-destructive text-white shadow-sm hover:bg-destructive/90\",\n        outline: \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        gradient: \"bg-gradient-to-r from-primary to-primary/90 text-primary-foreground shadow-sm hover:from-primary/90 hover:to-primary/80\",\n        cta: \"bg-primary text-primary-foreground shadow-lg hover:shadow-xl transform hover:scale-[1.02] transition-all duration-200\",\n        loading: \"bg-primary/70 text-primary-foreground cursor-not-allowed opacity-70\"\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        xl: \"h-12 rounded-lg px-8 has-[>svg]:px-6 text-base\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\"\n      },\n      fullWidth: {\n        true: \"w-full\",\n        false: \"\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      fullWidth: false\n    }\n  }\n)\n\n// ============================================================================\n// TYPE EXPORTS\n// ============================================================================\n\nexport type ContainerVariants = VariantProps<typeof containerVariants>\nexport type SectionVariants = VariantProps<typeof sectionVariants>\nexport type CardVariants = VariantProps<typeof cardVariants>\nexport type StatCardVariants = VariantProps<typeof statCardVariants>\nexport type FormGroupVariants = VariantProps<typeof formGroupVariants>\nexport type GridVariants = VariantProps<typeof gridVariants>\nexport type StackVariants = VariantProps<typeof stackVariants>\nexport type BadgeVariants = VariantProps<typeof badgeVariants>\nexport type ActionVariants = VariantProps<typeof actionVariants>\nexport type EnhancedButtonVariants = VariantProps<typeof enhancedButtonVariants>"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;;;;;;;;;AAED;;AAMO,MAAM,oBAAoB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACjC,uBACA;IACE,UAAU;QACR,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,OAAO;YACP,OAAO;YACP,OAAO;YACP,OAAO;YACP,MAAM;QACR;QACA,SAAS;YACP,MAAM;YACN,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,MAAM;QACN,SAAS;IACX;AACF;AAOK,MAAM,kBAAkB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAC/B,UACA;IACE,UAAU;QACR,SAAS;YACP,MAAM;YACN,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,OAAO;QACT;QACA,YAAY;YACV,aAAa;YACb,OAAO;YACP,MAAM;YACN,UAAU;QACZ;IACF;IACA,iBAAiB;QACf,SAAS;QACT,YAAY;IACd;AACF;AAOK,MAAM,eAAe,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAC5B,wFACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,UAAU;YACV,aAAa;YACb,QAAQ;YACR,UAAU;QACZ;QACA,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;QACA,SAAS;YACP,SAAS;YACT,aAAa;YACb,UAAU;QACZ;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,SAAS;IACX;AACF;AAOK,MAAM,mBAAmB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAChC,oCACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,SAAS;YACT,SAAS;YACT,OAAO;YACP,QAAQ;YACR,OAAO;QACT;QACA,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAOK,MAAM,oBAAoB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACjC,aACA;IACE,UAAU;QACR,aAAa;YACX,UAAU;YACV,YAAY;QACd;QACA,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,aAAa;QACb,MAAM;IACR;AACF;AAOK,MAAM,eAAe,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAC5B,cACA;IACE,UAAU;QACR,MAAM;YACJ,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,MAAM;QACR;QACA,KAAK;YACH,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,MAAM;QACN,KAAK;IACP;AACF;AAOK,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAC7B,QACA;IACE,UAAU;QACR,WAAW;YACT,UAAU;YACV,YAAY;QACd;QACA,OAAO;YACL,OAAO;YACP,QAAQ;YACR,KAAK;YACL,SAAS;QACX;QACA,SAAS;YACP,OAAO;YACP,QAAQ;YACR,KAAK;YACL,SAAS;YACT,QAAQ;QACV;QACA,SAAS;YACP,MAAM;YACN,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,OAAO;QACT;QACA,MAAM;YACJ,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,WAAW;QACX,OAAO;QACP,SAAS;QACT,SAAS;QACT,MAAM;IACR;AACF;AAOK,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAC7B,6FACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,SAAS;YACT,SAAS;YACT,OAAO;YACP,SAAS;YACT,UAAU;QACZ;QACA,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAOK,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAC9B,wDACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;QACX;QACA,MAAM;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAOK,MAAM,yBAAyB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtC,yWACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;YACN,UAAU;YACV,KAAK;YACL,SAAS;QACX;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;QACA,WAAW;YACT,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,WAAW;IACb;AACF","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/ui/button.tsx"],"sourcesContent":["/**\n * Button Components\n * \n * Core button components with variants and patterns\n * used throughout the application.\n */\n\n\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { motion } from \"framer-motion\"\nimport { cn } from \"@/lib/utils\"\nimport { enhancedButtonVariants, type EnhancedButtonVariants } from \"./variants\"\nimport { Loader2 } from \"lucide-react\"\n\n// ============================================================================\n// BUTTON COMPONENT\n// ============================================================================\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    EnhancedButtonVariants {\n  asChild?: boolean\n  loading?: boolean\n  loadingText?: string\n  leftIcon?: React.ReactNode\n  rightIcon?: React.ReactNode\n  animate?: boolean\n  success?: boolean // Added from animated-button\n  loadingVariant?: 'spinner' | 'dots' | 'shimmer' // Added from LoadingButton\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ \n    className, \n    variant, \n    size, \n    fullWidth,\n    asChild = false, \n    loading = false,\n    loadingText,\n    leftIcon,\n    rightIcon,\n    animate = false,\n    success = false,\n    loadingVariant: _loadingVariant = 'spinner', // Prefixed with _ to indicate intentionally unused\n    children,\n    disabled,\n    onDrag, // Extract onDrag to exclude from motion.button props\n    onDragStart, // Extract onDragStart to exclude from motion.button props\n    onDragEnd, // Extract onDragEnd to exclude from motion.button props\n    onAnimationStart, // Extract onAnimationStart to exclude from motion.button props\n    onAnimationEnd, // Extract onAnimationEnd to exclude from motion.button props\n    ...props \n  }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    const isDisabled = disabled || loading\n\n    const buttonContent = (\n      <>\n        {loading ? (\n          <Loader2 className=\"h-4 w-4 animate-spin\" />\n        ) : (\n          leftIcon && <span className=\"shrink-0\">{leftIcon}</span>\n        )}\n        \n        <span className={cn(loading && loadingText && \"sr-only\")}>\n          {children}\n        </span>\n        \n        {loading && loadingText && (\n          <span>{loadingText}</span>\n        )}\n        \n        {!loading && rightIcon && (\n          <span className=\"shrink-0\">{rightIcon}</span>\n        )}\n      </>\n    )\n\n    // Enhanced animation logic incorporating success state\n    if ((animate || success) && !asChild) {\n      return (\n        <motion.button\n          ref={ref}\n          className={cn(\n            enhancedButtonVariants({ variant, size, fullWidth }),\n            className\n          )}\n          disabled={isDisabled}\n          whileHover={!isDisabled ? { scale: 1.02 } : undefined}\n          whileTap={!isDisabled ? { scale: 0.98 } : undefined}\n          animate={success ? {\n            backgroundColor: [\"var(--primary)\", \"var(--success)\", \"var(--primary)\"],\n            transition: { duration: 0.5 }\n          } : undefined}\n          transition={{\n            type: \"spring\",\n            stiffness: 400,\n            damping: 30,\n            duration: animate ? 0.1 : undefined\n          }}\n          {...props}\n        >\n          {buttonContent}\n        </motion.button>\n      )\n    }\n\n    const buttonElement = (\n      <Comp\n        ref={ref}\n        className={cn(\n          enhancedButtonVariants({ variant, size, fullWidth }),\n          className\n        )}\n        disabled={isDisabled}\n        {...props}\n      >\n        {asChild ? <span className=\"inline-flex items-center gap-2\">{buttonContent}</span> : buttonContent}\n      </Comp>\n    )\n\n    return buttonElement\n  }\n)\nButton.displayName = \"Button\"\n\n// ============================================================================\n// BUTTON GROUP COMPONENT\n// ============================================================================\n\ninterface ButtonGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: 'horizontal' | 'vertical'\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'outline' | 'ghost'\n  attach?: boolean\n}\n\nexport function ButtonGroup({\n  children,\n  className,\n  orientation = 'horizontal',\n  attach = false,\n  ...props\n}: ButtonGroupProps) {\n  return (\n    <div\n      className={cn(\n        \"inline-flex\",\n        orientation === 'horizontal' ? \"flex-row\" : \"flex-col\",\n        attach ? (\n          orientation === 'horizontal' \n            ? \"[&>*:not(:first-child)]:ml-[-1px] [&>*:not(:first-child):not(:last-child)]:rounded-none [&>*:first-child]:rounded-r-none [&>*:last-child]:rounded-l-none\"\n            : \"[&>*:not(:first-child)]:mt-[-1px] [&>*:not(:first-child):not(:last-child)]:rounded-none [&>*:first-child]:rounded-b-none [&>*:last-child]:rounded-t-none\"\n        ) : (\n          orientation === 'horizontal' ? \"space-x-2\" : \"space-y-2\"\n        ),\n        className\n      )}\n      role=\"group\"\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\n// ============================================================================\n// ICON BUTTON COMPONENT\n// ============================================================================\n\ninterface IconButtonProps extends Omit<ButtonProps, 'leftIcon' | 'rightIcon'> {\n  icon: React.ReactNode\n  label: string\n  tooltip?: string\n  rotate?: boolean\n}\n\nexport const IconButton = React.forwardRef<HTMLButtonElement, IconButtonProps>(\n  ({ icon, label, className, rotate = false, animate = true, ...props }, ref) => {\n    return (\n      <Button\n        ref={ref}\n        className={className}\n        aria-label={label}\n        title={props.tooltip || label}\n        animate={animate}\n        {...props}\n      >\n        {rotate ? (\n          <motion.div\n            animate={{ rotate: 360 }}\n            transition={{ duration: 0.5 }}\n          >\n            {icon}\n          </motion.div>\n        ) : (\n          icon\n        )}\n        <span className=\"sr-only\">{label}</span>\n      </Button>\n    )\n  }\n)\nIconButton.displayName = \"IconButton\"\n\n// ============================================================================\n// CTA BUTTON COMPONENT\n// ============================================================================\n\ninterface CTAButtonProps extends ButtonProps {\n  priority?: 'primary' | 'secondary'\n  glow?: boolean\n  pulse?: boolean\n}\n\nexport const CTAButton = React.forwardRef<HTMLButtonElement, CTAButtonProps>(\n  ({ \n    priority = 'primary',\n    glow = false,\n    pulse = false,\n    className,\n    variant,\n    ...props \n  }, ref) => {\n    return (\n      <Button\n        ref={ref}\n        variant={variant || (priority === 'primary' ? 'cta' : 'outline')}\n        className={cn(\n          glow && \"relative overflow-visible shadow-lg\",\n          glow && \"before:absolute before:inset-[-2px] before:bg-gradient-to-r before:from-primary before:to-accent before:rounded-[inherit] before:opacity-60 before:blur-sm before:z-[-1]\",\n          pulse && \"animate-pulse\",\n          className\n        )}\n        animate={true}\n        {...props}\n      />\n    )\n  }\n)\nCTAButton.displayName = \"CTAButton\"\n\n// ============================================================================\n// LOADING BUTTON COMPONENT\n// ============================================================================\n\ninterface LoadingButtonProps extends ButtonProps {\n  loadingVariant?: 'spinner' | 'dots' | 'shimmer'\n}\n\nexport const LoadingButton = React.forwardRef<HTMLButtonElement, LoadingButtonProps>(\n  ({ \n    loading,\n    loadingVariant = 'spinner',\n    children,\n    className,\n    ...props \n  }, ref) => {\n    const loadingContent = {\n      spinner: (\n        <motion.div\n          animate={{ rotate: 360 }}\n          transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n          className=\"mr-2\"\n        >\n          <Loader2 className=\"h-4 w-4\" />\n        </motion.div>\n      ),\n      dots: (\n        <div className=\"flex space-x-1 mr-2\">\n          <div className=\"w-1 h-1 bg-current rounded-full animate-bounce [animation-delay:-0.3s]\" />\n          <div className=\"w-1 h-1 bg-current rounded-full animate-bounce [animation-delay:-0.15s]\" />\n          <div className=\"w-1 h-1 bg-current rounded-full animate-bounce\" />\n        </div>\n      ),\n      shimmer: (\n        <div className=\"h-4 w-16 bg-current/20 rounded animate-pulse mr-2\" />\n      )\n    }\n\n    return (\n      <Button\n        ref={ref}\n        className={cn(\n          loading && \"cursor-not-allowed\",\n          className\n        )}\n        disabled={loading}\n        loading={loading}\n        loadingVariant={loadingVariant}\n        {...props}\n      >\n        {loading ? (\n          <>\n            {loadingContent[loadingVariant]}\n            {typeof children === 'string' ? children : null}\n          </>\n        ) : (\n          children\n        )}\n      </Button>\n    )\n  }\n)\nLoadingButton.displayName = \"LoadingButton\"\n\n// ============================================================================\n// SPLIT BUTTON COMPONENT\n// ============================================================================\n\ninterface SplitButtonProps extends Omit<ButtonProps, 'children'> {\n  mainAction: {\n    label: string\n    onClick: () => void\n  }\n  dropdownActions: {\n    label: string\n    onClick: () => void\n    icon?: React.ReactNode\n    destructive?: boolean\n  }[]\n}\n\nexport function SplitButton({\n  mainAction,\n  dropdownActions,\n  variant = 'default',\n  size = 'default',\n  className,\n  ...props\n}: SplitButtonProps) {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <div className=\"relative inline-flex\">\n      <Button\n        variant={variant}\n        size={size}\n        className={cn(\"rounded-r-none border-r-0\", className)}\n        onClick={mainAction.onClick}\n        {...props}\n      >\n        {mainAction.label}\n      </Button>\n      \n      <Button\n        variant={variant}\n        size={size}\n        className=\"rounded-l-none px-2\"\n        onClick={() => setIsOpen(!isOpen)}\n        {...props}\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </Button>\n\n      {isOpen && (\n        <div className=\"absolute top-full left-0 z-50 mt-1 w-48 rounded-md border bg-popover p-1 text-popover-foreground shadow-lg\">\n          {dropdownActions.map((action, index) => (\n            <button\n              key={index}\n              className={cn(\n                \"flex w-full items-center rounded-sm px-2 py-1.5 text-sm transition-colors\",\n                \"hover:bg-accent hover:text-accent-foreground\",\n                action.destructive && \"text-red-600 hover:bg-red-50 hover:text-red-700\"\n              )}\n              onClick={() => {\n                action.onClick()\n                setIsOpen(false)\n              }}\n            >\n              {action.icon && (\n                <span className=\"mr-2\">{action.icon}</span>\n              )}\n              {action.label}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\n// ============================================================================\n// FLOATING ACTION BUTTON\n// ============================================================================\n\ninterface FABProps extends ButtonProps {\n  position?: 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left'\n  offset?: string\n}\n\nexport const FloatingActionButton = React.forwardRef<HTMLButtonElement, FABProps>(\n  ({ \n    position = 'bottom-right',\n    offset = '2rem',\n    className,\n    size = 'lg',\n    variant = 'default',\n    animate = true,\n    onDrag, // Extract onDrag to exclude from motion.button props\n    onDragStart, // Extract onDragStart to exclude from motion.button props\n    onDragEnd, // Extract onDragEnd to exclude from motion.button props\n    onAnimationStart, // Extract onAnimationStart to exclude from motion.button props\n    onAnimationEnd, // Extract onAnimationEnd to exclude from motion.button props\n    ...props \n  }, ref) => {\n    const positions = {\n      'bottom-right': `fixed bottom-[${offset}] right-[${offset}]`,\n      'bottom-left': `fixed bottom-[${offset}] left-[${offset}]`,\n      'top-right': `fixed top-[${offset}] right-[${offset}]`,\n      'top-left': `fixed top-[${offset}] left-[${offset}]`\n    }\n\n    // Use motion.button directly for enhanced animations\n    return (\n      <motion.button\n        ref={ref}\n        className={cn(\n          enhancedButtonVariants({ variant, size, fullWidth: false }),\n          positions[position],\n          \"z-50 rounded-full shadow-lg hover:shadow-xl transition-all duration-200\",\n          className\n        )}\n        initial={{ scale: 0, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        whileHover={animate ? { scale: 1.1 } : undefined}\n        whileTap={animate ? { scale: 0.9 } : undefined}\n        transition={{\n          type: \"spring\",\n          stiffness: 400,\n          damping: 30\n        }}\n        {...props}\n      />\n    )\n  }\n)\nFloatingActionButton.displayName = \"FloatingActionButton\"\n\n// Export components and variants\nexport { Button, Button as EnhancedButton }\nexport { enhancedButtonVariants as buttonVariants }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 771, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/hooks/use-accessibility.ts"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from 'react'\nimport { atom, useAtom } from 'jotai'\n\n// Accessibility preferences atom\nexport const accessibilityPreferencesAtom = atom({\n  reducedMotion: false,\n  highContrast: false,\n  fontSize: 'medium' as 'small' | 'medium' | 'large',\n  announcements: true,\n})\n\n// Screen reader detection atom\nexport const screenReaderActiveAtom = atom(false)\n\n// Focus management atom\nexport const focusTrapActiveAtom = atom(false)\n\nexport interface AccessibilityOptions {\n  announceChanges?: boolean\n  trapFocus?: boolean\n  respectReducedMotion?: boolean\n}\n\n/**\n * Hook for managing accessibility features and preferences\n */\nexport function useAccessibility(options: AccessibilityOptions = {}) {\n  const [preferences, setPreferences] = useAtom(accessibilityPreferencesAtom)\n  const [screenReaderActive, setScreenReaderActive] = useAtom(screenReaderActiveAtom)\n  const [focusTrapActive, setFocusTrapActive] = useAtom(focusTrapActiveAtom)\n  const [isClient, setIsClient] = useState(false)\n\n  // Initialize client-side only features\n  useEffect(() => {\n    setIsClient(true)\n    \n    if (typeof window === 'undefined') return\n\n    // Detect reduced motion preference\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)')\n    const handleChange = (e: MediaQueryListEvent) => {\n      setPreferences(prev => ({ ...prev, reducedMotion: e.matches }))\n    }\n    \n    setPreferences(prev => ({ ...prev, reducedMotion: mediaQuery.matches }))\n    mediaQuery.addEventListener('change', handleChange)\n\n    // Detect high contrast preference\n    const highContrastQuery = window.matchMedia('(prefers-contrast: high)')\n    const handleContrastChange = (e: MediaQueryListEvent) => {\n      setPreferences(prev => ({ ...prev, highContrast: e.matches }))\n    }\n    \n    setPreferences(prev => ({ ...prev, highContrast: highContrastQuery.matches }))\n    highContrastQuery.addEventListener('change', handleContrastChange)\n\n    // Simple screen reader detection\n    const detectScreenReader = () => {\n      // Check for common screen reader indicators\n      const hasAriaLive = document.querySelector('[aria-live]')\n      const hasAriaLabel = document.querySelector('[aria-label]')\n      const hasScreenReaderText = document.querySelector('.sr-only, .screen-reader-text')\n      \n      setScreenReaderActive(!!(hasAriaLive || hasAriaLabel || hasScreenReaderText))\n    }\n\n    // Run detection after a short delay to allow DOM to populate\n    setTimeout(detectScreenReader, 1000)\n\n    return () => {\n      mediaQuery.removeEventListener('change', handleChange)\n      highContrastQuery.removeEventListener('change', handleContrastChange)\n    }\n  }, [setPreferences, setScreenReaderActive])\n\n  // Announce function for screen readers\n  const announce = useCallback((message: string, priority: 'polite' | 'assertive' = 'polite') => {\n    if (!isClient || !options.announceChanges) return\n\n    const announcement = document.createElement('div')\n    announcement.setAttribute('aria-live', priority)\n    announcement.setAttribute('aria-atomic', 'true')\n    announcement.setAttribute('class', 'sr-only')\n    announcement.style.cssText = `\n      position: absolute !important;\n      width: 1px !important;\n      height: 1px !important;\n      padding: 0 !important;\n      margin: -1px !important;\n      overflow: hidden !important;\n      clip: rect(0, 0, 0, 0) !important;\n      border: 0 !important;\n    `\n    \n    document.body.appendChild(announcement)\n    \n    // Add message after a brief delay to ensure it's announced\n    setTimeout(() => {\n      announcement.textContent = message\n    }, 100)\n    \n    // Clean up after announcement\n    setTimeout(() => {\n      document.body.removeChild(announcement)\n    }, 5000)\n  }, [isClient, options.announceChanges])\n\n  // Focus trap management\n  const enableFocusTrap = useCallback((container: HTMLElement | null) => {\n    if (!container || !options.trapFocus) return\n\n    setFocusTrapActive(true)\n\n    const focusableElements = container.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    ) as NodeListOf<HTMLElement>\n\n    if (focusableElements.length === 0) return\n\n    const firstElement = focusableElements[0]\n    const lastElement = focusableElements[focusableElements.length - 1]\n\n    const trapFocus = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab') return\n\n      if (e.shiftKey) {\n        if (document.activeElement === firstElement) {\n          lastElement.focus()\n          e.preventDefault()\n        }\n      } else {\n        if (document.activeElement === lastElement) {\n          firstElement.focus()\n          e.preventDefault()\n        }\n      }\n    }\n\n    container.addEventListener('keydown', trapFocus)\n    firstElement.focus()\n\n    return () => {\n      container.removeEventListener('keydown', trapFocus)\n      setFocusTrapActive(false)\n    }\n  }, [options.trapFocus, setFocusTrapActive])\n\n  // Disable focus trap\n  const disableFocusTrap = useCallback(() => {\n    setFocusTrapActive(false)\n  }, [setFocusTrapActive])\n\n  // Update font size\n  const setFontSize = useCallback((size: 'small' | 'medium' | 'large') => {\n    setPreferences(prev => ({ ...prev, fontSize: size }))\n    \n    if (isClient) {\n      document.documentElement.style.setProperty(\n        '--font-size-multiplier',\n        size === 'small' ? '0.875' : size === 'large' ? '1.125' : '1'\n      )\n    }\n  }, [setPreferences, isClient])\n\n  // Toggle high contrast\n  const toggleHighContrast = useCallback(() => {\n    setPreferences(prev => {\n      const newHighContrast = !prev.highContrast\n      \n      if (isClient) {\n        document.documentElement.classList.toggle('high-contrast', newHighContrast)\n      }\n      \n      return { ...prev, highContrast: newHighContrast }\n    })\n  }, [setPreferences, isClient])\n\n  // Skip to content function\n  const skipToContent = useCallback(() => {\n    const mainContent = document.querySelector('main, [role=\"main\"], #main-content')\n    if (mainContent instanceof HTMLElement) {\n      mainContent.focus()\n      announce('Skipped to main content')\n    }\n  }, [announce])\n\n  return {\n    // State\n    preferences,\n    screenReaderActive,\n    focusTrapActive,\n    isClient,\n    \n    // Functions\n    announce,\n    enableFocusTrap,\n    disableFocusTrap,\n    setFontSize,\n    toggleHighContrast,\n    skipToContent,\n    \n    // Utilities\n    respectsReducedMotion: options.respectReducedMotion && preferences.reducedMotion,\n  }\n}\n\n/**\n * Hook specifically for keyboard navigation detection\n */\nexport function useKeyboardUser() {\n  const [isKeyboardUser, setIsKeyboardUser] = useState(false)\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        setIsKeyboardUser(true)\n        document.body.classList.add('keyboard-navigation')\n      }\n    }\n\n    const handleMouseDown = () => {\n      setIsKeyboardUser(false)\n      document.body.classList.remove('keyboard-navigation')\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    document.addEventListener('mousedown', handleMouseDown)\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n      document.removeEventListener('mousedown', handleMouseDown)\n    }\n  }, [])\n\n  return { isKeyboardUser }\n}\n\n/**\n * Hook for keyboard navigation through items\n */\nexport function useKeyboardNavigation<T>(\n  items: T[],\n  options: {\n    loop?: boolean\n    orientation?: 'vertical' | 'horizontal'\n    onActivate?: (item: T, index: number) => void\n  } = {}\n) {\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const { loop = false, orientation = 'vertical', onActivate } = options\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const isNext = orientation === 'vertical' ? e.key === 'ArrowDown' : e.key === 'ArrowRight'\n      const isPrev = orientation === 'vertical' ? e.key === 'ArrowUp' : e.key === 'ArrowLeft'\n\n      if (isNext) {\n        e.preventDefault()\n        setCurrentIndex(prev => {\n          const next = prev + 1\n          if (next >= items.length) {\n            return loop ? 0 : prev\n          }\n          return next\n        })\n      } else if (isPrev) {\n        e.preventDefault()\n        setCurrentIndex(prev => {\n          const next = prev - 1\n          if (next < 0) {\n            return loop ? items.length - 1 : prev\n          }\n          return next\n        })\n      } else if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        if (onActivate && items[currentIndex]) {\n          onActivate(items[currentIndex], currentIndex)\n        }\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [items, currentIndex, loop, orientation, onActivate])\n\n  return { currentIndex, setCurrentIndex }\n}\n\n/**\n * Hook for managing focus restoration\n */\nexport function useFocusRestore() {\n  const restoreFocus = useCallback(() => {\n    const lastFocusedElement = document.activeElement as HTMLElement\n    \n    return () => {\n      if (lastFocusedElement && lastFocusedElement.focus) {\n        // Restore focus after a brief delay to ensure the element is still in DOM\n        setTimeout(() => {\n          lastFocusedElement.focus()\n        }, 100)\n      }\n    }\n  }, [])\n\n  return { restoreFocus }\n}\n\n/**\n * Hook for generating accessible IDs\n */\nexport function useA11yId(prefix = 'a11y') {\n  const [id] = useState(() => {\n    if (typeof window === 'undefined') {\n      return `${prefix}-${Math.random().toString(36).substr(2, 9)}`\n    }\n    return `${prefix}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n  })\n\n  return id\n}\n\n/**\n * Hook for managing focus with proper restoration\n */\nexport function useFocusManagement(isOpen: boolean, restoreFocus = true) {\n  const previousFocusRef = useRef<HTMLElement | null>(null)\n  const containerRef = useRef<HTMLElement>(null)\n\n  useEffect(() => {\n    if (isOpen) {\n      // Store current focus\n      previousFocusRef.current = document.activeElement as HTMLElement\n      \n      // Focus first focusable element in container\n      if (containerRef.current) {\n        const focusable = containerRef.current.querySelector<HTMLElement>(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )\n        focusable?.focus()\n      }\n    } else if (restoreFocus && previousFocusRef.current) {\n      // Restore focus when closing\n      previousFocusRef.current.focus()\n      previousFocusRef.current = null\n    }\n  }, [isOpen, restoreFocus])\n\n  return containerRef\n}\n\n/**\n * Hook for announcing messages to screen readers\n */\nexport function useAnnounce() {\n  const announceRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    // Create live region for announcements\n    const announcer = document.createElement('div')\n    announcer.setAttribute('aria-live', 'polite')\n    announcer.setAttribute('aria-atomic', 'true')\n    announcer.setAttribute('role', 'status')\n    announcer.style.position = 'absolute'\n    announcer.style.left = '-10000px'\n    announcer.style.width = '1px'\n    announcer.style.height = '1px'\n    announcer.style.overflow = 'hidden'\n    document.body.appendChild(announcer)\n    announceRef.current = announcer\n\n    return () => {\n      if (announceRef.current && document.body.contains(announceRef.current)) {\n        document.body.removeChild(announceRef.current)\n      }\n    }\n  }, [])\n\n  const announce = useCallback((message: string, priority: 'polite' | 'assertive' = 'polite') => {\n    if (announceRef.current) {\n      announceRef.current.setAttribute('aria-live', priority)\n      announceRef.current.textContent = message\n      // Clear after announcement\n      setTimeout(() => {\n        if (announceRef.current) {\n          announceRef.current.textContent = ''\n        }\n      }, 1000)\n    }\n  }, [])\n\n  return announce\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1353, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/ui/input.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { AnimatePresence } from \"framer-motion\"\nimport { AlertCircle, CheckCircle2, Eye, EyeOff } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { useA11yId } from \"@/hooks/use-accessibility\"\n\ninterface InputProps extends React.ComponentProps<\"input\"> {\n  label?: string\n  error?: string\n  success?: string\n  floatingLabel?: boolean\n  showValidation?: boolean\n  characterCount?: boolean\n  maxLength?: number\n  // Accessibility props\n  'aria-label'?: string\n  'aria-describedby'?: string\n  'aria-required'?: boolean\n  'aria-invalid'?: boolean\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ \n    className, \n    type,\n    label,\n    error,\n    success,\n    floatingLabel = false,\n    showValidation = true,\n    characterCount = false,\n    maxLength,\n    id,\n    placeholder,\n    value,\n    onChange,\n    onFocus,\n    onBlur,\n    'aria-label': ariaLabel,\n    'aria-describedby': ariaDescribedBy,\n    'aria-required': ariaRequired,\n    'aria-invalid': ariaInvalid,\n    ...props \n  }, ref) => {\n    const [isFocused, setIsFocused] = React.useState(false)\n    const [showPassword, setShowPassword] = React.useState(false)\n    const [internalValue, setInternalValue] = React.useState(value || \"\")\n    const generatedId = useA11yId('input')\n    const actualId = id || generatedId\n    const errorId = useA11yId('error')\n    const successId = useA11yId('success')\n    const helpTextId = useA11yId('help')\n    \n    // Track internal value for character count and floating label\n    React.useEffect(() => {\n      if (value !== undefined) {\n        setInternalValue(value)\n      }\n    }, [value])\n\n    const hasValue = String(internalValue).length > 0\n    const shouldFloat = floatingLabel && (isFocused || hasValue)\n    const actualType = type === 'password' && showPassword ? 'text' : type\n    const isPasswordField = type === 'password'\n    const hasError = !!error\n    const hasSuccess = !!success && !hasError\n    \n    // Build aria-describedby attribute\n    const describedByIds: string[] = []\n    if (ariaDescribedBy) describedByIds.push(ariaDescribedBy)\n    if (hasError) describedByIds.push(errorId)\n    if (hasSuccess && !hasError) describedByIds.push(successId)\n    if (characterCount && maxLength) describedByIds.push(helpTextId)\n    const describedBy = describedByIds.length > 0 ? describedByIds.join(' ') : undefined\n\n    const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n      setIsFocused(true)\n      onFocus?.(e)\n    }\n\n    const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n      setIsFocused(false)\n      onBlur?.(e)\n    }\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = e.target.value\n      setInternalValue(newValue)\n      onChange?.(e)\n    }\n\n    const baseInputClasses = cn(\n      \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-all duration-200 outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n      // Focus states with smooth transitions\n      \"focus:border-ring focus:ring-ring/50 focus:ring-[3px] focus:shadow-sm\",\n      // Validation states\n      hasError && \"border-destructive ring-destructive/20 dark:ring-destructive/40 animate-shake\",\n      hasSuccess && \"border-green-500 ring-green-500/20 dark:ring-green-500/40\",\n      // Floating label adjustments\n      floatingLabel && \"pt-6 pb-1\",\n      // Password field padding adjustment\n      isPasswordField && \"pr-10\",\n      className\n    )\n\n    if (floatingLabel) {\n      return (\n        <div className=\"relative\">\n          <input\n            ref={ref}\n            id={actualId}\n            type={actualType}\n            value={internalValue}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            className={baseInputClasses}\n            placeholder={isFocused ? placeholder : \"\"}\n            maxLength={maxLength}\n            aria-label={ariaLabel || (label && !floatingLabel ? label : undefined)}\n            aria-describedby={describedBy}\n            aria-required={ariaRequired}\n            aria-invalid={ariaInvalid ?? hasError}\n            {...props}\n          />\n          \n          {label && (\n            <label\n              htmlFor={actualId}\n              className={cn(\n                \"absolute left-3 top-2 text-muted-foreground transition-all duration-200 pointer-events-none origin-left\",\n                shouldFloat && \"top-1 text-xs scale-85 text-foreground\",\n                hasError && \"text-destructive\",\n                hasSuccess && \"text-green-600\"\n              )}\n              style={{\n                transform: shouldFloat ? 'translateY(-0.5rem) scale(0.85)' : undefined\n              }}\n            >\n              {label}\n            </label>\n          )}\n\n          {/* Password visibility toggle */}\n          {isPasswordField && (\n            <button\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n              className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground transition-colors duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring rounded-sm\"\n              tabIndex={0}\n              aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n              aria-pressed={showPassword}\n              aria-controls={actualId}\n            >\n              {showPassword ? (\n                <EyeOff className=\"w-4 h-4\" aria-hidden=\"true\" />\n              ) : (\n                <Eye className=\"w-4 h-4\" aria-hidden=\"true\" />\n              )}\n            </button>\n          )}\n\n          {/* Validation icons */}\n          {showValidation && !isPasswordField && (hasError || hasSuccess) && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n              {hasError && (\n                <AlertCircle className=\"w-4 h-4 text-destructive animate-fade-in\" />\n              )}\n              {hasSuccess && (\n                <CheckCircle2 className=\"w-4 h-4 text-green-500 animate-success\" />\n              )}\n            </div>\n          )}\n\n          {/* Character count */}\n          {characterCount && maxLength && (\n            <div \n              id={helpTextId}\n              className={cn(\n                \"absolute right-2 top-full mt-1 text-xs text-muted-foreground transition-colors duration-200\",\n                String(internalValue).length > maxLength * 0.8 && \"text-orange-500\",\n                String(internalValue).length >= maxLength && \"text-destructive\"\n              )}\n              aria-live=\"polite\"\n            >\n              {String(internalValue).length}/{maxLength}\n            </div>\n          )}\n\n          {/* Error/Success message */}\n          <AnimatePresence mode=\"wait\">\n            {(error || success) && (\n              <div className=\"mt-1 text-sm animate-fade-in\">\n                {error && (\n                  <p \n                    id={errorId}\n                    className=\"text-destructive flex items-center gap-1\"\n                    role=\"alert\"\n                    aria-live=\"assertive\"\n                  >\n                    <AlertCircle className=\"w-3 h-3\" aria-hidden=\"true\" />\n                    {error}\n                  </p>\n                )}\n                {success && !error && (\n                  <p \n                    id={successId}\n                    className=\"text-green-600 flex items-center gap-1\"\n                    role=\"status\"\n                    aria-live=\"polite\"\n                  >\n                    <CheckCircle2 className=\"w-3 h-3\" aria-hidden=\"true\" />\n                    {success}\n                  </p>\n                )}\n              </div>\n            )}\n          </AnimatePresence>\n        </div>\n      )\n    }\n\n    // Standard input without floating label\n    return (\n      <div className=\"relative\">\n        <input\n          ref={ref}\n          id={actualId}\n          type={actualType}\n          value={internalValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          className={baseInputClasses}\n          placeholder={placeholder}\n          maxLength={maxLength}\n          aria-label={ariaLabel || label}\n          aria-describedby={describedBy}\n          aria-required={ariaRequired}\n          aria-invalid={ariaInvalid ?? hasError}\n          {...props}\n        />\n\n        {/* Password visibility toggle */}\n        {isPasswordField && (\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground transition-colors duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring rounded-sm\"\n            tabIndex={0}\n            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n            aria-pressed={showPassword}\n            aria-controls={actualId}\n          >\n            {showPassword ? (\n              <EyeOff className=\"w-4 h-4\" aria-hidden=\"true\" />\n            ) : (\n              <Eye className=\"w-4 h-4\" aria-hidden=\"true\" />\n            )}\n          </button>\n        )}\n\n        {/* Validation icons */}\n        {showValidation && !isPasswordField && (hasError || hasSuccess) && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            {hasError && (\n              <AlertCircle className=\"w-4 h-4 text-destructive animate-fade-in\" />\n            )}\n            {hasSuccess && (\n              <CheckCircle2 className=\"w-4 h-4 text-green-500 animate-success\" />\n            )}\n          </div>\n        )}\n\n        {/* Character count */}\n        {characterCount && maxLength && (\n          <div \n            id={helpTextId}\n            className={cn(\n              \"absolute right-2 top-full mt-1 text-xs text-muted-foreground transition-colors duration-200\",\n              String(internalValue).length > maxLength * 0.8 && \"text-orange-500\",\n              String(internalValue).length >= maxLength && \"text-destructive\"\n            )}\n            aria-live=\"polite\"\n          >\n            {String(internalValue).length}/{maxLength}\n          </div>\n        )}\n\n        {/* Error/Success message */}\n        <AnimatePresence mode=\"wait\">\n          {(error || success) && (\n            <div className=\"mt-1 text-sm animate-fade-in\">\n              {error && (\n                <p \n                  id={errorId}\n                  className=\"text-destructive flex items-center gap-1\"\n                  role=\"alert\"\n                  aria-live=\"assertive\"\n                >\n                  <AlertCircle className=\"w-3 h-3\" aria-hidden=\"true\" />\n                  {error}\n                </p>\n              )}\n              {success && !error && (\n                <p \n                  id={successId}\n                  className=\"text-green-600 flex items-center gap-1\"\n                  role=\"status\"\n                  aria-live=\"polite\"\n                >\n                  <CheckCircle2 className=\"w-3 h-3\" aria-hidden=\"true\" />\n                  {success}\n                </p>\n              )}\n            </div>\n          )}\n        </AnimatePresence>\n      </div>\n    )\n  }\n)\n\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1776, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,KAGoC;QAHpC,EACb,SAAS,EACT,GAAG,OAC8C,GAHpC;IAIb,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 1811, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,KAGoC;QAHpC,EAChB,SAAS,EACT,GAAG,OACiD,GAHpC;IAIhB,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,6LAAC,2MAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B;KArBS","debugId":null}},
    {"offset": {"line": 1863, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/actions/auth-actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport { z } from 'zod';\nimport { auth, supabase } from '@/lib/supabase';\nimport type { AuthUser } from '@/lib/supabase';\nimport { trackServerSideEvent } from '@/lib/analytics/posthog-server';\nimport { commonValidations } from '@/lib/validation/schemas';\n\n// Auth form schemas using consolidated validations\nconst LoginSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst SignupSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n  fullName: commonValidations.name,\n  companyName: commonValidations.optionalString,\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nconst ResetPasswordSchema = z.object({\n  email: commonValidations.email,\n});\n\nconst UpdatePasswordSchema = z.object({\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nexport interface AuthFormState {\n  errors?: {\n    email?: string[];\n    password?: string[];\n    confirmPassword?: string[];\n    fullName?: string[];\n    companyName?: string[];\n    _form?: string[];\n  };\n  success?: boolean;\n  message?: string;\n  data?: {\n    user?: {\n      id: string;\n      email: string;\n      name?: string;\n    };\n    session?: {\n      access_token: string;\n      refresh_token: string;\n    };\n  };\n}\n\nexport async function loginAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n  };\n\n  const result = LoginSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signInWithPassword({\n      email: result.data.email,\n      password: result.data.password,\n    });\n\n    if (error) {\n      // Track failed login attempt\n      await trackServerSideEvent('user_login_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        method: 'email',\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful login\n    if (data.user) {\n      await trackServerSideEvent('user_signed_in', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        session_id: data.session?.access_token?.slice(-8), // Last 8 chars for identification\n      });\n    }\n\n    // Revalidate auth-related caches\n    revalidateTag('user');\n    revalidateTag('session');\n    \n    // Redirect to dashboard\n    redirect('/dashboard');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Login failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function signupAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n    fullName: formData.get('fullName'),\n    companyName: formData.get('companyName'),\n  };\n\n  const result = SignupSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signUp({\n      email: result.data.email,\n      password: result.data.password,\n      options: {\n        data: {\n          full_name: result.data.fullName,\n          company_name: result.data.companyName,\n        },\n      },\n    });\n\n    if (error) {\n      // Track failed signup attempt\n      await trackServerSideEvent('user_signup_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        has_company_name: !!result.data.companyName,\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful signup\n    if (data.user) {\n      await trackServerSideEvent('user_signed_up', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        has_company_name: !!result.data.companyName,\n        full_name: result.data.fullName,\n        needs_email_verification: !data.user.email_confirmed_at,\n      });\n    }\n\n    return {\n      success: true,\n      message: 'Account created! Please check your email to verify your account.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Signup failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function logoutAction(): Promise<AuthFormState> {\n  try {\n    // Get current user for tracking before logout\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    await auth.signOut();\n    \n    // Track logout event\n    if (user) {\n      await trackServerSideEvent('user_signed_out', user.id, {\n        user_id: user.id,\n        email: user.email,\n        logout_method: 'manual',\n      });\n    }\n    \n    // Clear all cached data\n    revalidateTag('user');\n    revalidateTag('session');\n    revalidateTag('properties');\n    revalidateTag('tenants');\n    revalidateTag('leases');\n    revalidateTag('maintenance');\n    \n    // Redirect to home page\n    redirect('/');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Unknown error';\n    console.error('Logout error:', message);\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function forgotPasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n  };\n\n  const result = ResetPasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.resetPasswordForEmail(result.data.email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/update-password`,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    return {\n      success: true,\n      message: 'Password reset email sent! Check your inbox for instructions.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to send reset email';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function updatePasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n  };\n\n  const result = UpdatePasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.updateUser({\n      password: result.data.password,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Revalidate user data\n    revalidateTag('user');\n    \n    return {\n      success: true,\n      message: 'Password updated successfully!',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to update password';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\n// Server-side auth helpers\nexport async function getCurrentUser(): Promise<AuthUser | null> {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) return null;\n\n    return {\n      id: user.id,\n      email: user.email!,\n      name: user.user_metadata?.full_name || user.email!,\n      avatar_url: user.user_metadata?.avatar_url,\n    };\n  } catch (error) {\n    console.error('Get current user error:', error);\n    return null;\n  }\n}\n\nexport async function requireAuth(): Promise<AuthUser> {\n  const user = await getCurrentUser();\n  \n  if (!user) {\n    redirect('/login');\n  }\n  \n  return user;\n}\n\n// OAuth actions\nexport async function signInWithGoogle(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating Google sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'google',\n    options: {\n      redirectTo,\n      queryParams: {\n        access_type: 'offline',\n        prompt: 'consent',\n      },\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] Google sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'google',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with Google. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'google',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to Google OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}\n\nexport async function signInWithGitHub(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating GitHub sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'github',\n    options: {\n      redirectTo,\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] GitHub sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'github',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with GitHub. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'github',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to GitHub OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}"],"names":[],"mappings":";;;;;;IA+DsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1879, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/actions/auth-actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport { z } from 'zod';\nimport { auth, supabase } from '@/lib/supabase';\nimport type { AuthUser } from '@/lib/supabase';\nimport { trackServerSideEvent } from '@/lib/analytics/posthog-server';\nimport { commonValidations } from '@/lib/validation/schemas';\n\n// Auth form schemas using consolidated validations\nconst LoginSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst SignupSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n  fullName: commonValidations.name,\n  companyName: commonValidations.optionalString,\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nconst ResetPasswordSchema = z.object({\n  email: commonValidations.email,\n});\n\nconst UpdatePasswordSchema = z.object({\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nexport interface AuthFormState {\n  errors?: {\n    email?: string[];\n    password?: string[];\n    confirmPassword?: string[];\n    fullName?: string[];\n    companyName?: string[];\n    _form?: string[];\n  };\n  success?: boolean;\n  message?: string;\n  data?: {\n    user?: {\n      id: string;\n      email: string;\n      name?: string;\n    };\n    session?: {\n      access_token: string;\n      refresh_token: string;\n    };\n  };\n}\n\nexport async function loginAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n  };\n\n  const result = LoginSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signInWithPassword({\n      email: result.data.email,\n      password: result.data.password,\n    });\n\n    if (error) {\n      // Track failed login attempt\n      await trackServerSideEvent('user_login_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        method: 'email',\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful login\n    if (data.user) {\n      await trackServerSideEvent('user_signed_in', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        session_id: data.session?.access_token?.slice(-8), // Last 8 chars for identification\n      });\n    }\n\n    // Revalidate auth-related caches\n    revalidateTag('user');\n    revalidateTag('session');\n    \n    // Redirect to dashboard\n    redirect('/dashboard');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Login failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function signupAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n    fullName: formData.get('fullName'),\n    companyName: formData.get('companyName'),\n  };\n\n  const result = SignupSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signUp({\n      email: result.data.email,\n      password: result.data.password,\n      options: {\n        data: {\n          full_name: result.data.fullName,\n          company_name: result.data.companyName,\n        },\n      },\n    });\n\n    if (error) {\n      // Track failed signup attempt\n      await trackServerSideEvent('user_signup_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        has_company_name: !!result.data.companyName,\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful signup\n    if (data.user) {\n      await trackServerSideEvent('user_signed_up', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        has_company_name: !!result.data.companyName,\n        full_name: result.data.fullName,\n        needs_email_verification: !data.user.email_confirmed_at,\n      });\n    }\n\n    return {\n      success: true,\n      message: 'Account created! Please check your email to verify your account.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Signup failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function logoutAction(): Promise<AuthFormState> {\n  try {\n    // Get current user for tracking before logout\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    await auth.signOut();\n    \n    // Track logout event\n    if (user) {\n      await trackServerSideEvent('user_signed_out', user.id, {\n        user_id: user.id,\n        email: user.email,\n        logout_method: 'manual',\n      });\n    }\n    \n    // Clear all cached data\n    revalidateTag('user');\n    revalidateTag('session');\n    revalidateTag('properties');\n    revalidateTag('tenants');\n    revalidateTag('leases');\n    revalidateTag('maintenance');\n    \n    // Redirect to home page\n    redirect('/');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Unknown error';\n    console.error('Logout error:', message);\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function forgotPasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n  };\n\n  const result = ResetPasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.resetPasswordForEmail(result.data.email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/update-password`,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    return {\n      success: true,\n      message: 'Password reset email sent! Check your inbox for instructions.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to send reset email';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function updatePasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n  };\n\n  const result = UpdatePasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.updateUser({\n      password: result.data.password,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Revalidate user data\n    revalidateTag('user');\n    \n    return {\n      success: true,\n      message: 'Password updated successfully!',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to update password';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\n// Server-side auth helpers\nexport async function getCurrentUser(): Promise<AuthUser | null> {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) return null;\n\n    return {\n      id: user.id,\n      email: user.email!,\n      name: user.user_metadata?.full_name || user.email!,\n      avatar_url: user.user_metadata?.avatar_url,\n    };\n  } catch (error) {\n    console.error('Get current user error:', error);\n    return null;\n  }\n}\n\nexport async function requireAuth(): Promise<AuthUser> {\n  const user = await getCurrentUser();\n  \n  if (!user) {\n    redirect('/login');\n  }\n  \n  return user;\n}\n\n// OAuth actions\nexport async function signInWithGoogle(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating Google sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'google',\n    options: {\n      redirectTo,\n      queryParams: {\n        access_type: 'offline',\n        prompt: 'consent',\n      },\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] Google sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'google',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with Google. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'google',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to Google OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}\n\nexport async function signInWithGitHub(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating GitHub sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'github',\n    options: {\n      redirectTo,\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] GitHub sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'github',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with GitHub. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'github',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to GitHub OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}"],"names":[],"mappings":";;;;;;IA+HsB,eAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1895, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/actions/auth-actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport { z } from 'zod';\nimport { auth, supabase } from '@/lib/supabase';\nimport type { AuthUser } from '@/lib/supabase';\nimport { trackServerSideEvent } from '@/lib/analytics/posthog-server';\nimport { commonValidations } from '@/lib/validation/schemas';\n\n// Auth form schemas using consolidated validations\nconst LoginSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst SignupSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n  fullName: commonValidations.name,\n  companyName: commonValidations.optionalString,\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nconst ResetPasswordSchema = z.object({\n  email: commonValidations.email,\n});\n\nconst UpdatePasswordSchema = z.object({\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nexport interface AuthFormState {\n  errors?: {\n    email?: string[];\n    password?: string[];\n    confirmPassword?: string[];\n    fullName?: string[];\n    companyName?: string[];\n    _form?: string[];\n  };\n  success?: boolean;\n  message?: string;\n  data?: {\n    user?: {\n      id: string;\n      email: string;\n      name?: string;\n    };\n    session?: {\n      access_token: string;\n      refresh_token: string;\n    };\n  };\n}\n\nexport async function loginAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n  };\n\n  const result = LoginSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signInWithPassword({\n      email: result.data.email,\n      password: result.data.password,\n    });\n\n    if (error) {\n      // Track failed login attempt\n      await trackServerSideEvent('user_login_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        method: 'email',\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful login\n    if (data.user) {\n      await trackServerSideEvent('user_signed_in', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        session_id: data.session?.access_token?.slice(-8), // Last 8 chars for identification\n      });\n    }\n\n    // Revalidate auth-related caches\n    revalidateTag('user');\n    revalidateTag('session');\n    \n    // Redirect to dashboard\n    redirect('/dashboard');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Login failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function signupAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n    fullName: formData.get('fullName'),\n    companyName: formData.get('companyName'),\n  };\n\n  const result = SignupSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signUp({\n      email: result.data.email,\n      password: result.data.password,\n      options: {\n        data: {\n          full_name: result.data.fullName,\n          company_name: result.data.companyName,\n        },\n      },\n    });\n\n    if (error) {\n      // Track failed signup attempt\n      await trackServerSideEvent('user_signup_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        has_company_name: !!result.data.companyName,\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful signup\n    if (data.user) {\n      await trackServerSideEvent('user_signed_up', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        has_company_name: !!result.data.companyName,\n        full_name: result.data.fullName,\n        needs_email_verification: !data.user.email_confirmed_at,\n      });\n    }\n\n    return {\n      success: true,\n      message: 'Account created! Please check your email to verify your account.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Signup failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function logoutAction(): Promise<AuthFormState> {\n  try {\n    // Get current user for tracking before logout\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    await auth.signOut();\n    \n    // Track logout event\n    if (user) {\n      await trackServerSideEvent('user_signed_out', user.id, {\n        user_id: user.id,\n        email: user.email,\n        logout_method: 'manual',\n      });\n    }\n    \n    // Clear all cached data\n    revalidateTag('user');\n    revalidateTag('session');\n    revalidateTag('properties');\n    revalidateTag('tenants');\n    revalidateTag('leases');\n    revalidateTag('maintenance');\n    \n    // Redirect to home page\n    redirect('/');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Unknown error';\n    console.error('Logout error:', message);\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function forgotPasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n  };\n\n  const result = ResetPasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.resetPasswordForEmail(result.data.email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/update-password`,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    return {\n      success: true,\n      message: 'Password reset email sent! Check your inbox for instructions.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to send reset email';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function updatePasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n  };\n\n  const result = UpdatePasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.updateUser({\n      password: result.data.password,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Revalidate user data\n    revalidateTag('user');\n    \n    return {\n      success: true,\n      message: 'Password updated successfully!',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to update password';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\n// Server-side auth helpers\nexport async function getCurrentUser(): Promise<AuthUser | null> {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) return null;\n\n    return {\n      id: user.id,\n      email: user.email!,\n      name: user.user_metadata?.full_name || user.email!,\n      avatar_url: user.user_metadata?.avatar_url,\n    };\n  } catch (error) {\n    console.error('Get current user error:', error);\n    return null;\n  }\n}\n\nexport async function requireAuth(): Promise<AuthUser> {\n  const user = await getCurrentUser();\n  \n  if (!user) {\n    redirect('/login');\n  }\n  \n  return user;\n}\n\n// OAuth actions\nexport async function signInWithGoogle(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating Google sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'google',\n    options: {\n      redirectTo,\n      queryParams: {\n        access_type: 'offline',\n        prompt: 'consent',\n      },\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] Google sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'google',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with Google. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'google',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to Google OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}\n\nexport async function signInWithGitHub(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating GitHub sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'github',\n    options: {\n      redirectTo,\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] GitHub sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'github',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with GitHub. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'github',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to GitHub OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}"],"names":[],"mappings":";;;;;;IA6OsB,uBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1911, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/actions/auth-actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport { z } from 'zod';\nimport { auth, supabase } from '@/lib/supabase';\nimport type { AuthUser } from '@/lib/supabase';\nimport { trackServerSideEvent } from '@/lib/analytics/posthog-server';\nimport { commonValidations } from '@/lib/validation/schemas';\n\n// Auth form schemas using consolidated validations\nconst LoginSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst SignupSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n  fullName: commonValidations.name,\n  companyName: commonValidations.optionalString,\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nconst ResetPasswordSchema = z.object({\n  email: commonValidations.email,\n});\n\nconst UpdatePasswordSchema = z.object({\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nexport interface AuthFormState {\n  errors?: {\n    email?: string[];\n    password?: string[];\n    confirmPassword?: string[];\n    fullName?: string[];\n    companyName?: string[];\n    _form?: string[];\n  };\n  success?: boolean;\n  message?: string;\n  data?: {\n    user?: {\n      id: string;\n      email: string;\n      name?: string;\n    };\n    session?: {\n      access_token: string;\n      refresh_token: string;\n    };\n  };\n}\n\nexport async function loginAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n  };\n\n  const result = LoginSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signInWithPassword({\n      email: result.data.email,\n      password: result.data.password,\n    });\n\n    if (error) {\n      // Track failed login attempt\n      await trackServerSideEvent('user_login_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        method: 'email',\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful login\n    if (data.user) {\n      await trackServerSideEvent('user_signed_in', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        session_id: data.session?.access_token?.slice(-8), // Last 8 chars for identification\n      });\n    }\n\n    // Revalidate auth-related caches\n    revalidateTag('user');\n    revalidateTag('session');\n    \n    // Redirect to dashboard\n    redirect('/dashboard');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Login failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function signupAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n    fullName: formData.get('fullName'),\n    companyName: formData.get('companyName'),\n  };\n\n  const result = SignupSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signUp({\n      email: result.data.email,\n      password: result.data.password,\n      options: {\n        data: {\n          full_name: result.data.fullName,\n          company_name: result.data.companyName,\n        },\n      },\n    });\n\n    if (error) {\n      // Track failed signup attempt\n      await trackServerSideEvent('user_signup_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        has_company_name: !!result.data.companyName,\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful signup\n    if (data.user) {\n      await trackServerSideEvent('user_signed_up', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        has_company_name: !!result.data.companyName,\n        full_name: result.data.fullName,\n        needs_email_verification: !data.user.email_confirmed_at,\n      });\n    }\n\n    return {\n      success: true,\n      message: 'Account created! Please check your email to verify your account.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Signup failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function logoutAction(): Promise<AuthFormState> {\n  try {\n    // Get current user for tracking before logout\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    await auth.signOut();\n    \n    // Track logout event\n    if (user) {\n      await trackServerSideEvent('user_signed_out', user.id, {\n        user_id: user.id,\n        email: user.email,\n        logout_method: 'manual',\n      });\n    }\n    \n    // Clear all cached data\n    revalidateTag('user');\n    revalidateTag('session');\n    revalidateTag('properties');\n    revalidateTag('tenants');\n    revalidateTag('leases');\n    revalidateTag('maintenance');\n    \n    // Redirect to home page\n    redirect('/');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Unknown error';\n    console.error('Logout error:', message);\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function forgotPasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n  };\n\n  const result = ResetPasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.resetPasswordForEmail(result.data.email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/update-password`,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    return {\n      success: true,\n      message: 'Password reset email sent! Check your inbox for instructions.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to send reset email';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function updatePasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n  };\n\n  const result = UpdatePasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.updateUser({\n      password: result.data.password,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Revalidate user data\n    revalidateTag('user');\n    \n    return {\n      success: true,\n      message: 'Password updated successfully!',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to update password';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\n// Server-side auth helpers\nexport async function getCurrentUser(): Promise<AuthUser | null> {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) return null;\n\n    return {\n      id: user.id,\n      email: user.email!,\n      name: user.user_metadata?.full_name || user.email!,\n      avatar_url: user.user_metadata?.avatar_url,\n    };\n  } catch (error) {\n    console.error('Get current user error:', error);\n    return null;\n  }\n}\n\nexport async function requireAuth(): Promise<AuthUser> {\n  const user = await getCurrentUser();\n  \n  if (!user) {\n    redirect('/login');\n  }\n  \n  return user;\n}\n\n// OAuth actions\nexport async function signInWithGoogle(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating Google sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'google',\n    options: {\n      redirectTo,\n      queryParams: {\n        access_type: 'offline',\n        prompt: 'consent',\n      },\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] Google sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'google',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with Google. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'google',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to Google OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}\n\nexport async function signInWithGitHub(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating GitHub sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'github',\n    options: {\n      redirectTo,\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] GitHub sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'github',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with GitHub. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'github',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to GitHub OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}"],"names":[],"mappings":";;;;;;IAqWsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1927, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/lib/actions/auth-actions.ts"],"sourcesContent":["'use server';\n\nimport { revalidateTag } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport { z } from 'zod';\nimport { auth, supabase } from '@/lib/supabase';\nimport type { AuthUser } from '@/lib/supabase';\nimport { trackServerSideEvent } from '@/lib/analytics/posthog-server';\nimport { commonValidations } from '@/lib/validation/schemas';\n\n// Auth form schemas using consolidated validations\nconst LoginSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst SignupSchema = z.object({\n  email: commonValidations.email,\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n  fullName: commonValidations.name,\n  companyName: commonValidations.optionalString,\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nconst ResetPasswordSchema = z.object({\n  email: commonValidations.email,\n});\n\nconst UpdatePasswordSchema = z.object({\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n  confirmPassword: z.string().min(8, 'Password must be at least 8 characters'),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nexport interface AuthFormState {\n  errors?: {\n    email?: string[];\n    password?: string[];\n    confirmPassword?: string[];\n    fullName?: string[];\n    companyName?: string[];\n    _form?: string[];\n  };\n  success?: boolean;\n  message?: string;\n  data?: {\n    user?: {\n      id: string;\n      email: string;\n      name?: string;\n    };\n    session?: {\n      access_token: string;\n      refresh_token: string;\n    };\n  };\n}\n\nexport async function loginAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n  };\n\n  const result = LoginSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signInWithPassword({\n      email: result.data.email,\n      password: result.data.password,\n    });\n\n    if (error) {\n      // Track failed login attempt\n      await trackServerSideEvent('user_login_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        method: 'email',\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful login\n    if (data.user) {\n      await trackServerSideEvent('user_signed_in', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        session_id: data.session?.access_token?.slice(-8), // Last 8 chars for identification\n      });\n    }\n\n    // Revalidate auth-related caches\n    revalidateTag('user');\n    revalidateTag('session');\n    \n    // Redirect to dashboard\n    redirect('/dashboard');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Login failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function signupAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n    fullName: formData.get('fullName'),\n    companyName: formData.get('companyName'),\n  };\n\n  const result = SignupSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { data, error } = await auth.signUp({\n      email: result.data.email,\n      password: result.data.password,\n      options: {\n        data: {\n          full_name: result.data.fullName,\n          company_name: result.data.companyName,\n        },\n      },\n    });\n\n    if (error) {\n      // Track failed signup attempt\n      await trackServerSideEvent('user_signup_failed', undefined, {\n        error_message: error.message,\n        email_domain: result.data.email.split('@')[1],\n        has_company_name: !!result.data.companyName,\n      });\n      \n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Track successful signup\n    if (data.user) {\n      await trackServerSideEvent('user_signed_up', data.user.id, {\n        method: 'email',\n        email: data.user.email,\n        user_id: data.user.id,\n        has_company_name: !!result.data.companyName,\n        full_name: result.data.fullName,\n        needs_email_verification: !data.user.email_confirmed_at,\n      });\n    }\n\n    return {\n      success: true,\n      message: 'Account created! Please check your email to verify your account.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Signup failed';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function logoutAction(): Promise<AuthFormState> {\n  try {\n    // Get current user for tracking before logout\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    await auth.signOut();\n    \n    // Track logout event\n    if (user) {\n      await trackServerSideEvent('user_signed_out', user.id, {\n        user_id: user.id,\n        email: user.email,\n        logout_method: 'manual',\n      });\n    }\n    \n    // Clear all cached data\n    revalidateTag('user');\n    revalidateTag('session');\n    revalidateTag('properties');\n    revalidateTag('tenants');\n    revalidateTag('leases');\n    revalidateTag('maintenance');\n    \n    // Redirect to home page\n    redirect('/');\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Unknown error';\n    console.error('Logout error:', message);\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function forgotPasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    email: formData.get('email'),\n  };\n\n  const result = ResetPasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.resetPasswordForEmail(result.data.email, {\n      redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/update-password`,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    return {\n      success: true,\n      message: 'Password reset email sent! Check your inbox for instructions.',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to send reset email';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\nexport async function updatePasswordAction(\n  prevState: AuthFormState,\n  formData: FormData\n): Promise<AuthFormState> {\n  const rawData = {\n    password: formData.get('password'),\n    confirmPassword: formData.get('confirmPassword'),\n  };\n\n  const result = UpdatePasswordSchema.safeParse(rawData);\n\n  if (!result.success) {\n    return {\n      errors: result.error.flatten().fieldErrors,\n    };\n  }\n\n  try {\n    const { error } = await auth.updateUser({\n      password: result.data.password,\n    });\n\n    if (error) {\n      return {\n        errors: {\n          _form: [error.message],\n        },\n      };\n    }\n\n    // Revalidate user data\n    revalidateTag('user');\n    \n    return {\n      success: true,\n      message: 'Password updated successfully!',\n    };\n  } catch (error: unknown) {\n    const message = error instanceof Error ? error.message : 'Failed to update password';\n    return {\n      errors: {\n        _form: [message],\n      },\n    };\n  }\n}\n\n// Server-side auth helpers\nexport async function getCurrentUser(): Promise<AuthUser | null> {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) return null;\n\n    return {\n      id: user.id,\n      email: user.email!,\n      name: user.user_metadata?.full_name || user.email!,\n      avatar_url: user.user_metadata?.avatar_url,\n    };\n  } catch (error) {\n    console.error('Get current user error:', error);\n    return null;\n  }\n}\n\nexport async function requireAuth(): Promise<AuthUser> {\n  const user = await getCurrentUser();\n  \n  if (!user) {\n    redirect('/login');\n  }\n  \n  return user;\n}\n\n// OAuth actions\nexport async function signInWithGoogle(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating Google sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'google',\n    options: {\n      redirectTo,\n      queryParams: {\n        access_type: 'offline',\n        prompt: 'consent',\n      },\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] Google sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'google',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with Google. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'google',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to Google OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}\n\nexport async function signInWithGitHub(): Promise<void> {\n  // Construct the redirect URL, fallback to localhost for development\n  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || \n                  process.env.NEXT_PUBLIC_APP_URL || \n                  'http://localhost:3000';\n  const redirectTo = `${siteUrl}/auth/callback`;\n  \n  console.log('[OAuth Debug] Initiating GitHub sign-in with redirect to:', redirectTo);\n  \n  const { data, error } = await auth.signInWithOAuth({\n    provider: 'github',\n    options: {\n      redirectTo,\n    },\n  });\n\n  if (error) {\n    console.error('[OAuth Error] GitHub sign-in failed:', error);\n    // Track failed OAuth attempt\n    await trackServerSideEvent('user_oauth_failed', undefined, {\n      provider: 'github',\n      error_message: error.message,\n      method: 'oauth',\n    });\n    throw new Error('Unable to sign in with GitHub. Please try again or contact support if the issue persists.');\n  }\n\n  // Track OAuth initiation\n  await trackServerSideEvent('user_oauth_initiated', undefined, {\n    provider: 'github',\n    method: 'oauth',\n    redirect_url: data.url,\n  });\n\n  if (data.url) {\n    console.log('[OAuth Debug] Redirecting to GitHub OAuth URL:', data.url);\n    redirect(data.url);\n  } else {\n    console.error('[OAuth Error] No redirect URL received from Supabase');\n    throw new Error('Authentication service temporarily unavailable. Please try again in a few moments.');\n  }\n}"],"names":[],"mappings":";;;;;;IAoZsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1943, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/oauth-providers.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { signInWithGoogle, signInWithGitHub } from '@/lib/actions/auth-actions'\nimport { toast } from 'sonner'\n\ninterface OAuthProvidersProps {\n  disabled?: boolean\n}\n\nexport function OAuthProviders({ disabled = false }: OAuthProvidersProps) {\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false)\n  const [isGitHubLoading, setIsGitHubLoading] = useState(false)\n\n  const handleGoogleLogin = async () => {\n    if (disabled || isGoogleLoading) return\n    \n    setIsGoogleLoading(true)\n    try {\n      await signInWithGoogle()\n      // Server action will redirect, no need for additional handling\n    } catch (error) {\n      const message = error instanceof Error ? error.message : 'Failed to sign in with Google'\n      toast.error(message)\n      setIsGoogleLoading(false)\n    }\n  }\n\n  const handleGitHubLogin = async () => {\n    if (disabled || isGitHubLoading) return\n    \n    setIsGitHubLoading(true)\n    try {\n      await signInWithGitHub()\n      // Server action will redirect, no need for additional handling\n    } catch (error) {\n      const message = error instanceof Error ? error.message : 'Failed to sign in with GitHub'\n      toast.error(message)\n      setIsGitHubLoading(false)\n    }\n  }\n\n  const isLoading = isGoogleLoading || isGitHubLoading\n\n  return (\n    <div className=\"space-y-3\">\n      <Button\n        type=\"button\"\n        variant=\"outline\"\n        className=\"w-full h-12 text-sm font-medium hover:bg-gray-50 transition-colors\"\n        onClick={handleGoogleLogin}\n        disabled={disabled || isLoading}\n      >\n        <svg\n          className=\"mr-2 h-5 w-5\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n            fill=\"#4285F4\"\n          />\n          <path\n            d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n            fill=\"#34A853\"\n          />\n          <path\n            d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n            fill=\"#FBBC05\"\n          />\n          <path\n            d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n            fill=\"#EA4335\"\n          />\n        </svg>\n        {isGoogleLoading ? 'Connecting...' : 'Continue with Google'}\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"outline\"\n        className=\"w-full h-12 text-sm font-medium hover:bg-gray-50 transition-colors\"\n        onClick={handleGitHubLogin}\n        disabled={disabled || isLoading}\n      >\n        <svg\n          className=\"mr-2 h-5 w-5\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n          aria-hidden=\"true\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n        {isGitHubLoading ? 'Connecting...' : 'Continue with GitHub'}\n      </Button>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;;;AALA;;;;;AAWO,SAAS,eAAe,KAAyC;QAAzC,EAAE,WAAW,KAAK,EAAuB,GAAzC;;IAC7B,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,MAAM,oBAAoB;QACxB,IAAI,YAAY,iBAAiB;QAEjC,mBAAmB;QACnB,IAAI;YACF,MAAM,CAAA,GAAA,oLAAA,CAAA,mBAAgB,AAAD;QACrB,+DAA+D;QACjE,EAAE,OAAO,OAAO;YACd,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACzD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ,mBAAmB;QACrB;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI,YAAY,iBAAiB;QAEjC,mBAAmB;QACnB,IAAI;YACF,MAAM,CAAA,GAAA,oLAAA,CAAA,mBAAgB,AAAD;QACrB,+DAA+D;QACjE,EAAE,OAAO,OAAO;YACd,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACzD,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ,mBAAmB;QACrB;IACF;IAEA,MAAM,YAAY,mBAAmB;IAErC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,yKAAA,CAAA,SAAM;gBACL,MAAK;gBACL,SAAQ;gBACR,WAAU;gBACV,SAAS;gBACT,UAAU,YAAY;;kCAEtB,6LAAC;wBACC,WAAU;wBACV,SAAQ;wBACR,OAAM;;0CAEN,6LAAC;gCACC,GAAE;gCACF,MAAK;;;;;;0CAEP,6LAAC;gCACC,GAAE;gCACF,MAAK;;;;;;0CAEP,6LAAC;gCACC,GAAE;gCACF,MAAK;;;;;;0CAEP,6LAAC;gCACC,GAAE;gCACF,MAAK;;;;;;;;;;;;oBAGR,kBAAkB,kBAAkB;;;;;;;0BAGvC,6LAAC,yKAAA,CAAA,SAAM;gBACL,MAAK;gBACL,SAAQ;gBACR,WAAU;gBACV,SAAS;gBACT,UAAU,YAAY;;kCAEtB,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,SAAQ;wBACR,eAAY;kCAEZ,cAAA,6LAAC;4BACC,UAAS;4BACT,GAAE;4BACF,UAAS;;;;;;;;;;;oBAGZ,kBAAkB,kBAAkB;;;;;;;;;;;;;AAI7C;GA3FgB;KAAA","debugId":null}},
    {"offset": {"line": 2103, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/auth-error.tsx"],"sourcesContent":["import { AlertCircle } from 'lucide-react'\n\ninterface AuthErrorProps {\n  message: string\n  type?: 'error' | 'warning'\n}\n\nexport function AuthError({ message, type = 'error' }: AuthErrorProps) {\n  const bgClass = type === 'error' ? 'bg-destructive/10' : 'bg-yellow-50'\n  const borderClass = type === 'error' ? 'border-destructive/20' : 'border-yellow-200'\n  const textClass = type === 'error' ? 'text-destructive' : 'text-yellow-800'\n  const iconClass = type === 'error' ? 'text-destructive' : 'text-yellow-600'\n\n  return (\n    <div className={`${bgClass} ${borderClass} border rounded-md p-3`}>\n      <div className=\"flex items-center gap-2\">\n        <AlertCircle className={`h-4 w-4 ${iconClass}`} />\n        <p className={`text-sm ${textClass}`}>\n          {message}\n        </p>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;;AAOO,SAAS,UAAU,KAA2C;QAA3C,EAAE,OAAO,EAAE,OAAO,OAAO,EAAkB,GAA3C;IACxB,MAAM,UAAU,SAAS,UAAU,sBAAsB;IACzD,MAAM,cAAc,SAAS,UAAU,0BAA0B;IACjE,MAAM,YAAY,SAAS,UAAU,qBAAqB;IAC1D,MAAM,YAAY,SAAS,UAAU,qBAAqB;IAE1D,qBACE,6LAAC;QAAI,WAAW,AAAC,GAAa,OAAX,SAAQ,KAAe,OAAZ,aAAY;kBACxC,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,AAAC,WAAoB,OAAV;;;;;;8BACnC,6LAAC;oBAAE,WAAW,AAAC,WAAoB,OAAV;8BACtB;;;;;;;;;;;;;;;;;AAKX;KAhBgB","debugId":null}},
    {"offset": {"line": 2160, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/auth-form-factory.tsx"],"sourcesContent":["/**\n * Auth Form Factory - Refactored\n * \n * Unified authentication form factory providing consistent UX across\n * login, signup, and forgot password forms.\n * \n * Features:\n * - Consistent form structure and styling\n * - Centralized validation and error handling\n * - Built-in loading states and transitions\n * - Accessibility compliance\n * - OAuth integration support\n */\n\n\"use client\"\n\nimport React, { useState, useTransition } from 'react'\nimport { useActionState } from 'react'\nimport Link from 'next/link'\nimport { CheckCircle, AlertCircle, Loader2, Mail, Lock, Eye, EyeOff, User, Shield, Zap, Users, ArrowLeft, HelpCircle } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { loginAction, signupAction, forgotPasswordAction, type AuthFormState } from '@/lib/actions/auth-actions'\nimport { OAuthProviders } from './oauth-providers'\nimport { AuthError } from './auth-error'\nimport { cn } from '@/lib/utils'\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\ninterface AuthFormConfig {\n  type: 'login' | 'signup' | 'forgot-password'\n  title: string\n  description: string\n  submitLabel: string\n  loadingLabel: string\n  redirectTo?: string\n  error?: string\n}\n\ninterface AuthFormFactoryProps {\n  config: AuthFormConfig\n  onSuccess?: (result: AuthFormState) => void\n}\n\n// ============================================================================\n// VALIDATION HELPERS\n// ============================================================================\n\nconst _commonValidations = {\n  required: (value: string, field: string): string | undefined => {\n    return !value?.trim() ? `${field} is required` : undefined\n  },\n  \n  email: (value: string): string | undefined => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    return value && !emailRegex.test(value) ? 'Please enter a valid email address' : undefined\n  },\n  \n  password: (value: string): string | undefined => {\n    if (!value) return 'Password is required'\n    if (value.length < 8) return 'Password must be at least 8 characters'\n    if (!/(?=.*[a-z])(?=.*[A-Z])/.test(value)) {\n      return 'Password must contain at least one uppercase and one lowercase letter'\n    }\n    if (!/(?=.*\\d)/.test(value)) {\n      return 'Password must contain at least one number'\n    }\n    return undefined\n  },\n  \n  confirmPassword: (password: string, confirmPassword: string): string | undefined => {\n    if (!confirmPassword) return 'Please confirm your password'\n    return password !== confirmPassword ? 'Passwords do not match' : undefined\n  },\n\n  fullName: (value: string): string | undefined => {\n    if (!value?.trim()) return 'Full name is required'\n    if (value.trim().length < 2) return 'Full name must be at least 2 characters'\n    if (!/^[a-zA-Z\\s]+$/.test(value.trim())) {\n      return 'Full name can only contain letters and spaces'\n    }\n    return undefined\n  }\n}\n\n// ============================================================================\n// FORM FIELD COMPONENTS\n// ============================================================================\n\ninterface FieldProps {\n  label: string\n  name: string\n  type?: string\n  placeholder?: string\n  required?: boolean\n  error?: string\n  disabled?: boolean\n  className?: string\n  icon?: React.ComponentType<{ className?: string }>\n}\n\nfunction FormField({\n  label,\n  name,\n  type = 'text',\n  placeholder,\n  required = false,\n  error,\n  disabled = false,\n  className,\n  icon: Icon\n}: FieldProps) {\n  const [showPassword, setShowPassword] = useState(false)\n  const inputType = type === 'password' && showPassword ? 'text' : type\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor={name} className=\"text-sm font-medium\">\n        {label}\n      </Label>\n      <div className=\"relative\">\n        {Icon && (\n          <Icon className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n        )}\n        <Input\n          id={name}\n          name={name}\n          type={inputType}\n          placeholder={placeholder}\n          required={required}\n          disabled={disabled}\n          className={cn(\n            \"h-12 text-base transition-all\",\n            Icon && \"pl-10\",\n            type === 'password' && \"pr-10\",\n            \"focus:ring-2 focus:ring-primary/20\",\n            error && \"border-destructive focus:ring-destructive/20\",\n            className\n          )}\n          aria-invalid={error ? true : false}\n          aria-describedby={error ? `${name}-error` : undefined}\n        />\n        {type === 'password' && (\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground transition-colors\"\n            disabled={disabled}\n          >\n            {showPassword ? (\n              <EyeOff className=\"h-4 w-4\" />\n            ) : (\n              <Eye className=\"h-4 w-4\" />\n            )}\n          </button>\n        )}\n      </div>\n      {error && (\n        <p id={`${name}-error`} className=\"text-sm text-destructive flex items-center gap-1 mt-1\">\n          <AlertCircle className=\"h-3 w-3\" />\n          {error}\n        </p>\n      )}\n    </div>\n  )\n}\n\n// ============================================================================\n// LOGIN FORM\n// ============================================================================\n\nfunction LoginFormFields({\n  state,\n  isPending,\n  redirectTo\n}: {\n  state: AuthFormState\n  isPending: boolean\n  redirectTo?: string\n}) {\n  const [rememberMe, setRememberMe] = useState(false)\n\n  return (\n    <>\n      {/* Success message for email confirmation */}\n      {redirectTo?.includes('emailConfirmed=true') && (\n        <div className=\"flex items-center gap-2 p-3 bg-green-50 border border-green-200 rounded-md\">\n          <CheckCircle className=\"h-5 w-5 text-green-600\" />\n          <p className=\"text-sm text-green-800\">\n            Email confirmed successfully! Please sign in to continue.\n          </p>\n        </div>\n      )}\n\n      <div className=\"space-y-5\">\n        <FormField\n          label=\"Email address\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"name@example.com\"\n          required\n          disabled={isPending}\n          error={state.errors?.email?.[0]}\n          icon={Mail}\n        />\n        \n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between\">\n            <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n              Password\n            </Label>\n            <Link \n              href=\"/auth/forgot-password\"\n              className=\"text-sm text-primary hover:text-primary/80 transition-colors\"\n            >\n              Forgot password?\n            </Link>\n          </div>\n          <div className=\"relative\">\n            <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter your password\"\n              required\n              disabled={isPending}\n              className={cn(\n                \"h-12 pl-10 pr-10 text-base transition-all\",\n                \"focus:ring-2 focus:ring-primary/20\",\n                state.errors?.password && \"border-destructive focus:ring-destructive/20\"\n              )}\n              aria-invalid={state.errors?.password ? true : false}\n              aria-describedby={state.errors?.password ? 'password-error' : undefined}\n            />\n          </div>\n          {state.errors?.password && (\n            <p id=\"password-error\" className=\"text-sm text-destructive flex items-center gap-1 mt-1\">\n              <AlertCircle className=\"h-3 w-3\" />\n              {state.errors.password[0]}\n            </p>\n          )}\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <Checkbox \n            id=\"remember\" \n            name=\"rememberMe\"\n            checked={rememberMe}\n            onCheckedChange={(checked) => setRememberMe(checked as boolean)}\n            disabled={isPending}\n            className=\"h-4 w-4 rounded border-gray-300 data-[state=checked]:bg-primary data-[state=checked]:border-primary\"\n          />\n          <Label \n            htmlFor=\"remember\" \n            className=\"text-sm font-normal text-gray-700 cursor-pointer select-none hover:text-gray-900\"\n          >\n            Remember me for 30 days\n          </Label>\n        </div>\n\n        <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n      </div>\n    </>\n  )\n}\n\n// ============================================================================\n// SIGNUP FORM\n// ============================================================================\n\nfunction SignupFormFields({\n  state,\n  isPending,\n  redirectTo\n}: {\n  state: AuthFormState\n  isPending: boolean\n  redirectTo?: string\n}) {\n  const [acceptTerms, setAcceptTerms] = useState(false)\n\n  return (\n    <>\n      <div className=\"space-y-5\">\n        <FormField\n          label=\"Full Name\"\n          name=\"fullName\"\n          type=\"text\"\n          placeholder=\"John Doe\"\n          required\n          disabled={isPending}\n          error={state.errors?.fullName?.[0]}\n          icon={User}\n        />\n\n        <FormField\n          label=\"Email Address\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"name@example.com\"\n          required\n          disabled={isPending}\n          error={state.errors?.email?.[0]}\n          icon={Mail}\n        />\n        \n        <div className=\"space-y-2\">\n          <FormField\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Create a secure password\"\n            required\n            disabled={isPending}\n            error={state.errors?.password?.[0]}\n            icon={Lock}\n          />\n          <div className=\"text-xs text-muted-foreground\">\n            Must be at least 8 characters with a mix of letters and numbers\n          </div>\n        </div>\n\n        <FormField\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Confirm your password\"\n          required\n          disabled={isPending}\n          error={state.errors?.confirmPassword?.[0]}\n          icon={Lock}\n        />\n\n        {/* Terms and Conditions */}\n        <div className=\"flex items-start space-x-2\">\n          <Checkbox \n            id=\"terms\" \n            checked={acceptTerms}\n            onCheckedChange={(checked) => setAcceptTerms(checked as boolean)}\n            disabled={isPending}\n            className=\"mt-1 data-[state=checked]:bg-primary data-[state=checked]:border-primary\"\n          />\n          <Label \n            htmlFor=\"terms\" \n            className=\"text-sm font-normal cursor-pointer select-none leading-relaxed\"\n          >\n            I agree to the{' '}\n            <Link href=\"/terms\" className=\"text-primary hover:text-primary/80 underline\">\n              Terms of Service\n            </Link>{' '}\n            and{' '}\n            <Link href=\"/privacy\" className=\"text-primary hover:text-primary/80 underline\">\n              Privacy Policy\n            </Link>\n          </Label>\n        </div>\n\n        <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n        <input type=\"hidden\" name=\"acceptTerms\" value={acceptTerms.toString()} />\n      </div>\n    </>\n  )\n}\n\n// ============================================================================\n// FORGOT PASSWORD FORM\n// ============================================================================\n\nfunction ForgotPasswordFormFields({\n  state,\n  isPending\n}: {\n  state: AuthFormState\n  isPending: boolean\n}) {\n  return (\n    <div className=\"space-y-5\">\n      <FormField\n        label=\"Email address\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"name@example.com\"\n        required\n        disabled={isPending}\n        error={state.errors?.email?.[0]}\n        icon={Mail}\n      />\n      \n      {/* Help text */}\n      <div className=\"space-y-3 text-sm text-muted-foreground\">\n        <p className=\"flex items-start gap-2\">\n          <HelpCircle className=\"h-4 w-4 mt-0.5 flex-shrink-0\" />\n          <span>We'll send you an email with instructions to reset your password.</span>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n// ============================================================================\n// SUCCESS STATES\n// ============================================================================\n\nfunction SignupSuccess({ state }: { state: AuthFormState }) {\n  return (\n    <Card className=\"border-0 shadow-2xl bg-white/95 backdrop-blur-sm\">\n      <CardHeader className=\"space-y-2 pb-8 text-center\">\n        <div className=\"mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-green-100\">\n          <CheckCircle className=\"h-8 w-8 text-green-600\" />\n        </div>\n        <CardTitle className=\"text-3xl font-bold\">Check Your Email</CardTitle>\n        <CardDescription className=\"text-base text-muted-foreground\">\n          We've sent you a verification link\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n          <p className=\"text-sm text-green-800 text-center\">\n            {state.message || 'Please check your inbox and click the verification link to complete your registration.'}\n          </p>\n        </div>\n        \n        <div className=\"text-center text-sm\">\n          Already have an account?{' '}\n          <Link \n            href=\"/auth/login\" \n            className=\"text-primary font-medium hover:text-primary/80 transition-colors\"\n          >\n            Sign in\n          </Link>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction ForgotPasswordSuccess({ state }: { state: AuthFormState }) {\n  return (\n    <Card className=\"border-0 shadow-2xl bg-white/95 backdrop-blur-sm\">\n      <CardHeader className=\"space-y-2 pb-8 text-center\">\n        <div className=\"mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-green-100\">\n          <CheckCircle className=\"h-8 w-8 text-green-600\" />\n        </div>\n        <CardTitle className=\"text-3xl font-bold\">Check Your Email</CardTitle>\n        <CardDescription className=\"text-base text-muted-foreground\">\n          We've sent reset instructions to your inbox\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n          <p className=\"text-sm text-green-800 text-center\">\n            {state.message || 'Please check your email and follow the instructions to reset your password. The link will expire in 24 hours.'}\n          </p>\n        </div>\n        \n        <div className=\"space-y-3 text-sm text-muted-foreground\">\n          <p className=\"flex items-start gap-2\">\n            <HelpCircle className=\"h-4 w-4 mt-0.5 flex-shrink-0\" />\n            <span>Didn't receive the email? Check your spam folder or try again in a few minutes.</span>\n          </p>\n        </div>\n        \n        <div className=\"text-center text-sm\">\n          <Link \n            href=\"/auth/login\"\n            className=\"inline-flex items-center text-primary font-medium hover:text-primary/80 transition-colors\"\n          >\n            <ArrowLeft className=\"mr-1 h-4 w-4\" />\n            Back to Sign In\n          </Link>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n// ============================================================================\n// MAIN FACTORY COMPONENT\n// ============================================================================\n\nexport function AuthFormFactory({ config, onSuccess }: AuthFormFactoryProps) {\n  const initialState: AuthFormState = { errors: {} }\n  \n  // Select the appropriate action based on form type\n  const formAction = {\n    login: loginAction,\n    signup: signupAction,\n    'forgot-password': forgotPasswordAction\n  }[config.type]\n  \n  const [state, action] = useActionState(formAction, initialState)\n  const [isPending, startTransition] = useTransition()\n\n  // Handle success callback\n  React.useEffect(() => {\n    if (state.success && onSuccess) {\n      onSuccess(state)\n    }\n  }, [state, onSuccess])\n\n  const handleSubmit = (formData: FormData) => {\n    startTransition(() => {\n      action(formData)\n    })\n  }\n\n  // Show success state for signup and forgot password\n  if (state.success) {\n    if (config.type === 'signup') {\n      return (\n        <div className=\"flex flex-col gap-6 w-full max-w-md mx-auto\">\n          <SignupSuccess state={state} />\n        </div>\n      )\n    }\n    \n    if (config.type === 'forgot-password') {\n      return (\n        <div className=\"flex flex-col gap-6 w-full max-w-md mx-auto\">\n          <ForgotPasswordSuccess state={state} />\n        </div>\n      )\n    }\n  }\n\n  // Render form fields based on type\n  const renderFormFields = () => {\n    switch (config.type) {\n      case 'login':\n        return <LoginFormFields state={state} isPending={isPending} redirectTo={config.redirectTo} />\n      case 'signup':\n        return <SignupFormFields state={state} isPending={isPending} redirectTo={config.redirectTo} />\n      case 'forgot-password':\n        return <ForgotPasswordFormFields state={state} isPending={isPending} />\n      default:\n        return null\n    }\n  }\n\n  const showTrustBadges = config.type === 'signup'\n  const showOAuth = config.type !== 'forgot-password'\n  const showBackLink = config.type === 'forgot-password'\n\n  return (\n    <div className=\"flex flex-col gap-6 w-full max-w-md mx-auto\">\n      {/* Trust badges for signup */}\n      {showTrustBadges && (\n        <div className=\"flex items-center justify-center gap-6 text-xs text-muted-foreground\">\n          <div className=\"flex items-center gap-1\">\n            <Shield className=\"h-3 w-3\" />\n            <span>Secure</span>\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <Zap className=\"h-3 w-3\" />\n            <span>Quick Setup</span>\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <Users className=\"h-3 w-3\" />\n            <span>10,000+ Users</span>\n          </div>\n        </div>\n      )}\n\n      {/* Security badge for forgot password */}\n      {config.type === 'forgot-password' && (\n        <div className=\"flex items-center justify-center gap-2 text-xs text-muted-foreground\">\n          <Shield className=\"h-3 w-3\" />\n          <span>Secure password reset</span>\n        </div>\n      )}\n\n      <Card className=\"border-0 shadow-2xl bg-white/95 backdrop-blur-sm\">\n        <CardHeader className=\"space-y-2 pb-8\">\n          <CardTitle className=\"text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent\">\n            {config.title}\n          </CardTitle>\n          <CardDescription className=\"text-base text-muted-foreground\">\n            {config.description}\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* URL error parameter */}\n          {config.error && <AuthError message={config.error} />}\n          \n          {/* Form validation errors */}\n          {state.errors?._form && (\n            <div className=\"bg-destructive/10 border border-destructive/20 rounded-md p-3\">\n              <div className=\"flex items-center gap-2\">\n                <AlertCircle className=\"h-4 w-4 text-destructive\" />\n                <p className=\"text-destructive text-sm\">\n                  {state.errors._form[0]}\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* Form */}\n          <form action={handleSubmit} className=\"space-y-5\">\n            {renderFormFields()}\n\n            <Button \n              type=\"submit\" \n              className=\"w-full h-12 text-base font-medium transition-all hover:shadow-lg\" \n              disabled={isPending}\n            >\n              {isPending ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  {config.loadingLabel}\n                </>\n              ) : (\n                config.submitLabel\n              )}\n            </Button>\n          </form>\n\n          {/* OAuth Section */}\n          {showOAuth && (\n            <>\n              {/* Divider with proper spacing */}\n              <div className=\"relative flex items-center\">\n                <div className=\"flex-grow border-t border-gray-300\" />\n                <span className=\"flex-shrink mx-4 text-xs text-muted-foreground uppercase tracking-wider\">\n                  Or continue with\n                </span>\n                <div className=\"flex-grow border-t border-gray-300\" />\n              </div>\n\n              {/* OAuth Providers */}\n              <OAuthProviders disabled={isPending} />\n            </>\n          )}\n\n          {/* Navigation Links */}\n          <div className=\"text-center text-sm\">\n            {config.type === 'login' && (\n              <>\n                Don't have an account?{' '}\n                <Link \n                  href=\"/auth/signup\" \n                  className=\"text-primary font-medium hover:underline\"\n                >\n                  Sign up\n                </Link>\n              </>\n            )}\n            {config.type === 'signup' && (\n              <>\n                Already have an account?{' '}\n                <Link \n                  href=\"/auth/login\" \n                  className=\"text-primary font-medium hover:underline\"\n                >\n                  Sign in\n                </Link>\n              </>\n            )}\n            {showBackLink && (\n              <Link \n                href=\"/auth/login\"\n                className=\"inline-flex items-center text-primary font-medium hover:text-primary/80 transition-colors\"\n              >\n                <ArrowLeft className=\"mr-1 h-4 w-4\" />\n                Back to Sign In\n              </Link>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3447, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/login-form.tsx"],"sourcesContent":["/**\n * Login Form - Refactored\n * \n * Modern login form using AuthFormFactory for consistent UX.\n * Eliminates duplication and provides standardized form handling.\n * \n * Features:\n * - AuthFormFactory integration\n * - Type-safe form handling\n * - Built-in validation and error handling\n * - OAuth integration\n * - Remember me functionality\n */\n\n\"use client\"\n\nimport React from 'react'\nimport { AuthFormFactory } from './auth-form-factory'\nimport type { AuthFormState } from '@/lib/actions/auth-actions'\n\ninterface LoginFormRefactoredProps {\n  redirectTo?: string\n  error?: string\n  onSuccess?: (result: AuthFormState) => void\n}\n\nexport function LoginFormRefactored({\n  redirectTo,\n  error,\n  onSuccess\n}: LoginFormRefactoredProps) {\n  const config = {\n    type: 'login' as const,\n    title: 'Welcome back',\n    description: 'Sign in to access your property dashboard',\n    submitLabel: 'Sign in',\n    loadingLabel: 'Signing in...',\n    redirectTo,\n    error\n  }\n\n  return <AuthFormFactory config={config} onSuccess={onSuccess} />\n}\n\nexport default LoginFormRefactored"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC;;;;;AAKD;AAHA;;;AAYO,SAAS,oBAAoB,KAIT;QAJS,EAClC,UAAU,EACV,KAAK,EACL,SAAS,EACgB,GAJS;IAKlC,MAAM,SAAS;QACb,MAAM;QACN,OAAO;QACP,aAAa;QACb,aAAa;QACb,cAAc;QACd;QACA;IACF;IAEA,qBAAO,6LAAC,4KAAA,CAAA,kBAAe;QAAC,QAAQ;QAAQ,WAAW;;;;;;AACrD;KAhBgB;uCAkBD","debugId":null}},
    {"offset": {"line": 3501, "column": 0}, "map": {"version":3,"sources":["file:///Users/richard/Developer/tenant-flow/apps/frontend/src/components/auth/auth-redirect.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\nimport { useRouter } from 'next/navigation'\n\ninterface AuthRedirectProps {\n  to: string\n}\n\nexport function AuthRedirect({ to }: AuthRedirectProps) {\n  const router = useRouter()\n  \n  useEffect(() => {\n    router.push(to)\n  }, [router, to])\n\n  // Show minimal loading state while redirecting\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n        <p className=\"mt-2 text-sm text-muted-foreground\">Redirecting...</p>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AASO,SAAS,aAAa,KAAyB;QAAzB,EAAE,EAAE,EAAqB,GAAzB;;IAC3B,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,OAAO,IAAI,CAAC;QACd;iCAAG;QAAC;QAAQ;KAAG;IAEf,+CAA+C;IAC/C,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;;;;;8BACf,6LAAC;oBAAE,WAAU;8BAAqC;;;;;;;;;;;;;;;;;AAI1D;GAhBgB;;QACC,qIAAA,CAAA,YAAS;;;KADV","debugId":null}}]
}