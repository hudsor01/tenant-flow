{
  "name": "Upsell Revenue Automation Engine",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 11,
              "triggerAtMinute": 0
            }
          ]
        }
      },
      "id": "1",
      "name": "Daily Upsell Analysis",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "operation": "read",
        "filePathType": "absolute",
        "fileName": "/home/user/tenantflow-content/data/user-activity.json"
      },
      "id": "2",
      "name": "Load User Activity Data",
      "type": "n8n-nodes-base.files",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "const users = JSON.parse($input.first().data);\n\n// Define upsell triggers and products\nconst upsellProducts = {\n  'premium-features': {\n    price: 47,\n    triggers: ['used_basic_features_10_times', 'viewed_premium_features', 'property_count_over_3'],\n    conversionRate: 0.18\n  },\n  'professional-plan': {\n    price: 97,\n    triggers: ['premium_user_30_days', 'multiple_properties', 'advanced_reporting_viewed'],\n    conversionRate: 0.12\n  },\n  'enterprise-plan': {\n    price: 197,\n    triggers: ['professional_user_60_days', 'team_features_requested', 'property_count_over_10'],\n    conversionRate: 0.08\n  },\n  'add-on-services': {\n    price: 27,\n    triggers: ['maintenance_requests_high', 'document_generation_used', 'legal_templates_viewed'],\n    conversionRate: 0.25\n  },\n  'annual-discount': {\n    price: 470, // 47 * 10 (2 months free)\n    triggers: ['monthly_subscriber_90_days', 'high_engagement_score', 'support_satisfaction_high'],\n    conversionRate: 0.15\n  }\n};\n\n// Analyze users for upsell opportunities\nconst upsellCandidates = [];\n\nusers.forEach(user => {\n  Object.entries(upsellProducts).forEach(([productKey, product]) => {\n    const matchedTriggers = product.triggers.filter(trigger => \n      user.triggers && user.triggers.includes(trigger)\n    );\n    \n    if (matchedTriggers.length >= 2) { // Require at least 2 triggers\n      const urgencyScore = matchedTriggers.length * 0.3 + \n                          (user.engagementScore || 0) * 0.4 + \n                          (user.daysSinceSignup || 0) * 0.001;\n      \n      upsellCandidates.push({\n        userId: user.id,\n        email: user.email,\n        currentPlan: user.plan,\n        product: productKey,\n        price: product.price,\n        matchedTriggers: matchedTriggers,\n        urgencyScore: urgencyScore,\n        projectedRevenue: product.price * product.conversionRate,\n        conversionProbability: product.conversionRate\n      });\n    }\n  });\n});\n\n// Sort by urgency and revenue potential\nupsellCandidates.sort((a, b) => b.projectedRevenue - a.projectedRevenue);\n\nreturn upsellCandidates.slice(0, 10).map(candidate => ({ json: candidate }));"
      },
      "id": "3",
      "name": "Identify Upsell Opportunities",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.0.177:11434/api/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "qwen3:8b"
            },
            {
              "name": "prompt",
              "value": "Create a personalized upsell email for this TenantFlow user:\n\nUser ID: {{ $json.userId }}\nEmail: {{ $json.email }}\nCurrent Plan: {{ $json.currentPlan }}\nTarget Product: {{ $json.product }}\nPrice: ${{ $json.price }}\nMatched Triggers: {{ $json.matchedTriggers.join(', ') }}\nUrgency Score: {{ $json.urgencyScore }}\nConversion Probability: {{ ($json.conversionProbability * 100).toFixed(1) }}%\n\nWrite a compelling upsell email that:\n1. Personalizes based on their usage patterns\n2. Highlights specific benefits they'll gain\n3. Creates urgency with limited-time offers\n4. Includes social proof and testimonials\n5. Addresses common objections\n6. Provides clear ROI calculations\n7. Has a strong call-to-action\n8. Uses psychological triggers (scarcity, authority, reciprocity)\n9. Includes a money-back guarantee\n10. Shows before/after scenarios\n\nFocus on revenue increase and business growth. Make it feel like a natural progression, not a sales pitch."
            },
            {
              "name": "stream",
              "value": false
            }
          ]
        }
      },
      "id": "4",
      "name": "Generate Personalized Upsell",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Create upsell campaign data\nconst upsellData = {\n  userId: $('Identify Upsell Opportunities').item.json.userId,\n  email: $('Identify Upsell Opportunities').item.json.email,\n  targetProduct: $('Identify Upsell Opportunities').item.json.product,\n  price: $('Identify Upsell Opportunities').item.json.price,\n  projectedRevenue: $('Identify Upsell Opportunities').item.json.projectedRevenue,\n  emailContent: $('Generate Personalized Upsell').item.json.response,\n  campaignId: 'upsell_' + Date.now(),\n  sentAt: new Date().toISOString(),\n  status: 'sent',\n  tracking: {\n    opens: 0,\n    clicks: 0,\n    conversions: 0\n  },\n  followUp: {\n    day3: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),\n    day7: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n    day14: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString()\n  }\n};\n\nreturn { json: upsellData };"
      },
      "id": "5",
      "name": "Create Campaign Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "operation": "write",
        "filePathType": "absolute",
        "fileName": "/home/user/tenantflow-content/upsell-campaigns/{{ $json.campaignId }}.json",
        "data": "{{ JSON.stringify($json, null, 2) }}"
      },
      "id": "6",
      "name": "Save Upsell Campaign",
      "type": "n8n-nodes-base.files",
      "typeVersion": 1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 16,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "id": "7",
      "name": "Revenue Tracking Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 600]
    },
    {
      "parameters": {
        "operation": "read",
        "filePathType": "absolute",
        "fileName": "/home/user/tenantflow-content/data/conversion-tracking.json"
      },
      "id": "8",
      "name": "Load Conversion Data",
      "type": "n8n-nodes-base.files",
      "typeVersion": 1,
      "position": [460, 600]
    },
    {
      "parameters": {
        "jsCode": "const conversions = JSON.parse($input.first().data || '[]');\n\n// Calculate daily, weekly, monthly revenue from upsells\nconst now = new Date();\nconst today = now.toISOString().split('T')[0];\nconst weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString();\nconst monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString();\n\nconst dailyRevenue = conversions\n  .filter(c => c.convertedAt.startsWith(today))\n  .reduce((sum, c) => sum + c.amount, 0);\n\nconst weeklyRevenue = conversions\n  .filter(c => c.convertedAt >= weekAgo)\n  .reduce((sum, c) => sum + c.amount, 0);\n\nconst monthlyRevenue = conversions\n  .filter(c => c.convertedAt >= monthAgo)\n  .reduce((sum, c) => sum + c.amount, 0);\n\n// Product performance analysis\nconst productRevenue = {};\nconversions.forEach(c => {\n  if (!productRevenue[c.product]) {\n    productRevenue[c.product] = { revenue: 0, count: 0 };\n  }\n  productRevenue[c.product].revenue += c.amount;\n  productRevenue[c.product].count += 1;\n});\n\n// Best performing products\nconst topProducts = Object.entries(productRevenue)\n  .sort(([,a], [,b]) => b.revenue - a.revenue)\n  .slice(0, 3);\n\n// Conversion rate by product\nconst conversionRates = {};\nObject.keys(productRevenue).forEach(product => {\n  const campaigns = conversions.filter(c => c.product === product).length;\n  const conversions_count = productRevenue[product].count;\n  conversionRates[product] = campaigns > 0 ? (conversions_count / campaigns * 100) : 0;\n});\n\n// Revenue projections\nconst avgDailyRevenue = monthlyRevenue / 30;\nconst projectedMonthlyRevenue = avgDailyRevenue * 30;\nconst projectedQuarterlyRevenue = projectedMonthlyRevenue * 3;\nconst projectedAnnualRevenue = projectedMonthlyRevenue * 12;\n\nreturn {\n  json: {\n    revenueMetrics: {\n      daily: dailyRevenue,\n      weekly: weeklyRevenue,\n      monthly: monthlyRevenue,\n      avgDaily: avgDailyRevenue\n    },\n    projections: {\n      monthly: projectedMonthlyRevenue,\n      quarterly: projectedQuarterlyRevenue,\n      annual: projectedAnnualRevenue\n    },\n    topProducts: topProducts,\n    conversionRates: conversionRates,\n    totalConversions: conversions.length,\n    reportDate: new Date().toISOString(),\n    growth: {\n      weekOverWeek: weeklyRevenue > 0 ? ((weeklyRevenue - monthlyRevenue/4) / (monthlyRevenue/4) * 100) : 0,\n      monthOverMonth: monthlyRevenue > 0 ? 15 : 0 // Placeholder - would need historical data\n    }\n  }\n};"
      },
      "id": "9",
      "name": "Calculate Upsell Revenue",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 600]
    },
    {
      "parameters": {
        "operation": "write",
        "filePathType": "absolute",
        "fileName": "/home/user/tenantflow-content/reports/upsell-revenue-{{ new Date().toISOString().split('T')[0] }}.json",
        "data": "{{ JSON.stringify($json, null, 2) }}"
      },
      "id": "10",
      "name": "Save Revenue Report",
      "type": "n8n-nodes-base.files",
      "typeVersion": 1,
      "position": [900, 600]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.0.177:11434/api/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "qwen3:8b"
            },
            {
              "name": "prompt",
              "value": "Generate revenue optimization insights based on this upsell data:\n\nDaily Revenue: ${{ $json.revenueMetrics.daily }}\nWeekly Revenue: ${{ $json.revenueMetrics.weekly }}\nMonthly Revenue: ${{ $json.revenueMetrics.monthly }}\nProjected Annual: ${{ $json.projections.annual }}\nTotal Conversions: {{ $json.totalConversions }}\nTop Products: {{ JSON.stringify($json.topProducts) }}\nConversion Rates: {{ JSON.stringify($json.conversionRates) }}\n\nProvide actionable recommendations for:\n1. Increasing conversion rates\n2. Optimizing pricing strategies\n3. Improving email campaigns\n4. Product bundling opportunities\n5. Seasonal campaign strategies\n6. Customer lifecycle optimization\n7. Revenue forecasting accuracy\n8. Competitive positioning\n\nFocus on immediate revenue growth opportunities and long-term strategic improvements."
            },
            {
              "name": "stream",
              "value": false
            }
          ]
        }
      },
      "id": "11",
      "name": "Generate Revenue Insights",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 600]
    },
    {
      "parameters": {
        "operation": "write",
        "filePathType": "absolute",
        "fileName": "/home/user/tenantflow-content/insights/revenue-optimization-{{ new Date().toISOString().split('T')[0] }}.md",
        "data": "# TenantFlow Revenue Optimization Insights\n\nGenerated: {{ new Date().toISOString() }}\n\n## Current Performance\n- Daily Revenue: ${{ $('Calculate Upsell Revenue').item.json.revenueMetrics.daily }}\n- Monthly Revenue: ${{ $('Calculate Upsell Revenue').item.json.revenueMetrics.monthly }}\n- Projected Annual: ${{ $('Calculate Upsell Revenue').item.json.projections.annual }}\n\n## AI Recommendations\n\n{{ $json.response }}\n\n## Action Items\n- [ ] Implement top revenue optimization suggestion\n- [ ] A/B test new email campaigns\n- [ ] Review and adjust pricing strategy\n- [ ] Launch seasonal promotion campaign\n- [ ] Optimize product bundling\n\n---\n*Generated by TenantFlow Revenue Automation Engine*"
      },
      "id": "12",
      "name": "Save Optimization Insights",
      "type": "n8n-nodes-base.files",
      "typeVersion": 1,
      "position": [1340, 600]
    }
  ],
  "connections": {
    "Daily Upsell Analysis": {
      "main": [
        [
          {
            "node": "Load User Activity Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load User Activity Data": {
      "main": [
        [
          {
            "node": "Identify Upsell Opportunities",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identify Upsell Opportunities": {
      "main": [
        [
          {
            "node": "Generate Personalized Upsell",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Personalized Upsell": {
      "main": [
        [
          {
            "node": "Create Campaign Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Campaign Data": {
      "main": [
        [
          {
            "node": "Save Upsell Campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Revenue Tracking Trigger": {
      "main": [
        [
          {
            "node": "Load Conversion Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Conversion Data": {
      "main": [
        [
          {
            "node": "Calculate Upsell Revenue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Upsell Revenue": {
      "main": [
        [
          {
            "node": "Save Revenue Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Revenue Report": {
      "main": [
        [
          {
            "node": "Generate Revenue Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Revenue Insights": {
      "main": [
        [
          {
            "node": "Save Optimization Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "meta": {
    "description": "Automates upsell campaigns to existing users and tracks revenue generation from premium features and plan upgrades",
    "tags": ["upsell", "revenue", "automation", "conversion", "premium"]
  }
}