#!/bin/bash

# Streamlined pre-commit security hook
# Uses GitGuardian when available, minimal fallback otherwise

set -e

echo "üîí Running security checks..."

# Try GitGuardian first (best option)
if command -v ggshield &> /dev/null; then
    echo "Using GitGuardian for secret scanning..."
    exec ggshield secret scan pre-commit
fi

# Fallback: Simple check for obvious secrets
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM 2>/dev/null)

if [ -z "$STAGED_FILES" ]; then
    exit 0
fi

# Check for dangerous file extensions
if echo "$STAGED_FILES" | grep -qE '\.(key|pem|p12|pfx)$'; then
    echo "‚ùå Private key files detected. These should not be committed."
    exit 1
fi

# Quick scan for obvious secrets (minimal patterns for speed)
# Only check text files, skip common false-positive sources
for file in $STAGED_FILES; do
    # Skip non-existent files and non-text files
    [ -f "$file" ] || continue
    file "$file" 2>/dev/null | grep -q "text" || continue
    
    # Skip known safe files
    echo "$file" | grep -qE '(\.env\.example|package-lock\.json|yarn\.lock|\.min\.js)$' && continue
    
    # Check for obvious secrets (simplified patterns)
    if grep -qE '(sk_live_[a-zA-Z0-9]{24,}|SUPABASE_SERVICE_ROLE_KEY\s*=\s*["\x27][^"\x27]+|postgresql://[^:]+:[^@]+@)' "$file" 2>/dev/null; then
        echo "‚ö†Ô∏è  Potential secret detected in: $file"
        echo "   Please review and use environment variables instead."
        exit 1
    fi
done

echo "‚úÖ Security checks passed (GitGuardian not installed - consider installing for better coverage)"
echo "   Install with: pip install ggshield"
